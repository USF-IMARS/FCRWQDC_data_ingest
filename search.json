[
  {
    "objectID": "analyte_reports/analyte_reports_template.html",
    "href": "analyte_reports/analyte_reports_template.html",
    "title": "Salinity Report",
    "section": "",
    "text": "get data across all programs, filter for analyte\nlibrary('here')\nlibrary('dplyr')\nsource(here(\"R/getAllData.R\"))\nfull_df &lt;- getAllData()\ndf &lt;- filter(full_df, DEP.Analyte.Name == params$analyte)\n\n\n\n\ncreate .csv of analyte data\n# save df to csv\n# reduce to only cols we need & save to csv\ndf %&gt;%\n  mutate(\n    source = program,\n    site = Monitoring.Location.ID,\n    datetime = Activity.Start.Date.Time,\n    analyte = DEP.Analyte.Name,\n    value = DEP.Result.Value.Number,\n    units = DEP.Result.Unit,\n    latitude = Org.Decimal.Latitude,\n    longitude = Org.Decimal.Longitude,\n    sample_depth = Activity.Depth,\n    .keep = \"none\"\n) %&gt;%\n  write.csv(here(\"data\", \"exports\", \"unified-wq-db-samples\", paste0(params$analyte, \".csv\")))\n\n\nDownload data for this analyte here\n\nHistogram of DEP.Result.Value.Number:\n\n\ndisplay histogram of values\nlibrary(ggplot2)\nggplot(df, aes(x = DEP.Result.Value.Number)) +\n  geom_histogram(bins = 30, fill = \"blue\", color = \"black\") +\n  labs(title = \"Histogram of Values\", x = \"Value\", y = \"Count\")\n\n\n\n\n\n\n\n\n\n\n\nStation Statistics:\n\n\ncreate station statistics dataframe\nsource(here(\"R/seasonalMannKendall.R\"))\nlibrary(lubridate)  # for mdy_hms()\nlibrary(pander)  # for display\n\n# create table of samples for each station\nsamples_df &lt;- df %&gt;%\n  select(\n    program, \n    Monitoring.Location.ID, \n    Activity.Start.Date.Time,\n    analyte = DEP.Analyte.Name,\n    DEP.Result.Value.Number, \n    DEP.Result.Unit,\n    latitude = Org.Decimal.Latitude,\n    longitude = Org.Decimal.Longitude,\n    sample_depth = Activity.Depth\n    ) %&gt;%\n  # drop any with empty Monitoring.Location.ID\n  filter(!is.na(Monitoring.Location.ID)) %&gt;%\n  # drop any with empty Activity.Start.Date.Time\n  filter(!is.na(Activity.Start.Date.Time)) %&gt;%\n  # parse the \"MM/DD/YYYY HH:MM:SS\" strings into POSIXct\n  mutate(Activity.Start.Date.Time = mdy_hms(\n          Activity.Start.Date.Time,\n          tz = \"UTC\")) %&gt;%\n  distinct()\n\n\n# add statistics for each station\nsample_stats_df &lt;- samples_df %&gt;%\n  group_by(program, Monitoring.Location.ID) %&gt;%\n  reframe(\n    {\n      tmp &lt;- seasonalMannKendallVectorized(\n        Activity.Start.Date.Time,\n        DEP.Result.Value.Number\n      )\n    },\n    n_values = n(),\n    mean = mean(DEP.Result.Value.Number),\n    min = min(DEP.Result.Value.Number),\n    max = max(DEP.Result.Value.Number),\n    coefficient.of.variation = sd(DEP.Result.Value.Number) / mean(DEP.Result.Value.Number)\n  ) %&gt;%\n  mutate(\n    # create column significant_slope\n    significant_slope = ifelse(z &lt;= 0.05, slope, NA_real_),\n    pvalue = z\n  ) %&gt;%\n  # drop unwanted columns added by seasonalMannKendall\n  select(\n    -z,\n    -tau,\n    -chi_square\n  )\n\n\n\n# print(head(sample_stats_df))\n# # display sample_stats_df with pander\n# pander(sample_stats_df)\n\n\n\n\nsave stats to csv\nsample_stats_df %&gt;%\n  write.csv(here(\n    \"data\", \"exports\", \"seasonal-mann-kendall-stats\", paste0(params$analyte, \".csv\")))\n\n\nDownload data for this analyte’s statistics here\n\n\ndisplay with gt\nlibrary(gt)\nlibrary(scales)\nlibrary(tidyselect)  # for all_of()\nlibrary(RColorBrewer) # for brewer.pal()\n\n# ── color_column() ─────────────────────────────────────────────────────────────\n# gt_tbl   : a gt object that you’ve already created (e.g. `sample_stats_df %&gt;% gt()`)\n# df       : the original data.frame (must contain the column you want to color)\n# column   : a string, e.g. \"slope\" or \"n_values\"\n# palette  : a character vector of colours to feed to col_numeric()\n#\ncolor_column &lt;- function(gt_tbl, df, column, \n                         palette = c(\"red\", \"orange\", \"yellow\", \"green\", \"blue\", \"violet\"),\n                         domain = NULL) {\n  # 1) Pull out that column’s numeric values\n  vals &lt;- df[[column]]\n  if (!is.numeric(vals)) {\n    stop(sprintf(\"`%s` is not numeric; data_color() requires a numeric column.\", column))\n  }\n  \n  # 2) Compute its min and max (ignoring NA)\n  min_val &lt;- min(vals, na.rm = TRUE)\n  max_val &lt;- max(vals, na.rm = TRUE)\n  if (is.null(domain)) {\n    domain &lt;- c(min_val, max_val)\n  }\n  \n  # 3) Call data_color() on the gt table for that single column\n  gt_tbl %&gt;%\n    data_color(\n      columns = all_of(column),\n      colors  = col_numeric(\n        palette = palette,\n        domain  = domain\n      )\n    )\n}\nlibrary(dplyr)\nlibrary(gt)\n\n# 1) First build your gt table as usual:\ngt_tbl &lt;- sample_stats_df %&gt;% \n  gt()\n\n# slope blue (-) to red (+) (0 centered)\ntryCatch({\n  min_slope &lt;- min(sample_stats_df$slope,  na.rm = TRUE)\n  max_slope &lt;- max(sample_stats_df$slope,  na.rm = TRUE)\n  max_abs_slope &lt;- max(abs(min_slope), abs(max_slope))\n  gt_tbl &lt;- color_column(\n    gt_tbl, \n    df     = sample_stats_df, \n    column = \"slope\",\n    palette = rev(brewer.pal(11, \"RdBu\")),\n    domain  = c(-max_abs_slope, max_abs_slope)\n  )\n}, error = function(e) {\n  print(\"Error in slope color column\")\n  print(e)\n})\n\ntryCatch({\n  # pvalue Z\n  gt_tbl &lt;- color_column(\n    gt_tbl, \n    df      = sample_stats_df, \n    column  = \"z\", \n    palette = scales::brewer_pal(palette = \"Blues\")(9)\n  )\n}, error = function(e) {\n  print(\"Error in z color column\")\n  print(e)\n})\n\n\n[1] \"Error in z color column\"\n&lt;simpleError in color_column(gt_tbl, df = sample_stats_df, column = \"z\", palette = (scales::brewer_pal(palette = \"Blues\"))(9)): `z` is not numeric; data_color() requires a numeric column.&gt;\n\n\ndisplay with gt\n# slope blue (-) to red (+) (0 centered)\ntryCatch({\n  min_slope &lt;- min(sample_stats_df$significant_slope,  na.rm = TRUE)\n  max_slope &lt;- max(sample_stats_df$significant_slope,  na.rm = TRUE)\n  max_abs_slope &lt;- max(abs(min_slope), abs(max_slope))\n  gt_tbl &lt;- color_column(\n    gt_tbl, \n    df     = sample_stats_df, \n    column = \"significant_slope\",\n    palette = rev(brewer.pal(11, \"RdBu\")),\n    domain  = c(-max_abs_slope, max_abs_slope)\n  )\n}, error = function(e) {\n  print(\"Error in significant_slope color column\")\n  print(e)\n})\n\ntryCatch({\n  # mean values blue to red (0 centered)\n  min_mean &lt;- min(sample_stats_df$mean,  na.rm = TRUE)\n  max_mean &lt;- max(sample_stats_df$mean,  na.rm = TRUE)\n  max_abs_mean &lt;- max(abs(min_mean), abs(max_mean))\n  gt_tbl &lt;- color_column(\n    gt_tbl, \n    df     = sample_stats_df, \n    column = \"mean\",\n    palette = rev(brewer.pal(11, \"RdBu\")),\n    domain  = c(-max_abs_mean, max_abs_mean)\n  )\n}, error = function(e) {\n  print(\"Error in mean color column\")\n  print(e)\n})\n\ntryCatch({\n  # n values white to green\n  gt_tbl &lt;- color_column(\n    gt_tbl, \n    df      = sample_stats_df, \n    column  = \"n_values\", \n    palette = scales::brewer_pal(palette = \"Greens\")(9)\n  )\n}, error = function(e) {\n  print(\"Error in n_values color column\")\n  print(e)\n})\n\ntryCatch({\n  # min\n  gt_tbl &lt;- color_column(\n    gt_tbl, \n    df      = sample_stats_df, \n    column  = \"min\", \n    palette = scales::brewer_pal(palette = \"Blues\")(9)\n  )\n}, error = function(e) {\n  print(\"Error in min color column\")\n  print(e)\n})\n\ntryCatch({\n  # max\n  gt_tbl &lt;- color_column(\n    gt_tbl, \n    df      = sample_stats_df, \n    column  = \"max\", \n    palette = scales::brewer_pal(palette = \"Blues\")(9)\n  )\n}, error = function(e) {\n  print(\"Error in max color column\")\n  print(e)\n})\n\ntryCatch({\n  # coefficient.of.variation\n  gt_tbl &lt;- color_column(\n    gt_tbl, \n    df      = sample_stats_df, \n    column  = \"coefficient.of.variation\", \n    palette = scales::brewer_pal(palette = \"Blues\")(9)\n  )\n}, error = function(e) {\n  print(\"Error in coefficient.of.variation color column\")\n  print(e)\n})\n\n# 4) Render/display:\ngt_tbl\n\n\n\n\n\n\n\n\nprogram\nMonitoring.Location.ID\nslope\nn_values\nmean\nmin\nmax\ncoefficient.of.variation\nsignificant_slope\npvalue\n\n\n\n\nBBAP\nBB14\nNA\n3\n30.1800000\n27.2200\n31.94000\n8.544340e-02\nNA\nNA\n\n\nBBAP\nDM08\nNA\n2\n28.3250000\n25.2400\n31.41000\n1.540282e-01\nNA\nNA\n\n\nBBAP\nJFK03\nNA\n2\n28.7950000\n25.4000\n32.19000\n1.667392e-01\nNA\nNA\n\n\nBBAP\nJT61\nNA\n3\n29.9433333\n28.3900\n32.61000\n7.747489e-02\nNA\nNA\n\n\nBBAP\nJT66\nNA\n1\n32.7900000\n32.7900\n32.79000\nNA\nNA\nNA\n\n\nBBAP\nJT71\nNA\n1\n32.6100000\n32.6100\n32.61000\nNA\nNA\nNA\n\n\nBBAP\nLR03\nNA\n3\n2.4100000\n1.0800\n3.79000\n5.625277e-01\nNA\nNA\n\n\nBBAP\nVR01\nNA\n1\n32.7400000\n32.7400\n32.74000\nNA\nNA\nNA\n\n\nBBAP\nVR11\nNA\n1\n33.2600000\n33.2600\n33.26000\nNA\nNA\nNA\n\n\nBROWARD\n1\n-0.2500000000\n83\nNaN\nNaN\nNaN\nNA\nNA\n1.000000e+00\n\n\nBROWARD\n10\n-0.6800000000\n78\nNaN\nNaN\nNaN\nNA\nNA\n4.941245e-01\n\n\nBROWARD\n109\nNA\n4\nNaN\nNaN\nNaN\nNA\nNA\nNA\n\n\nBROWARD\n11\n-0.0150000000\n111\nNaN\nNaN\nNaN\nNA\nNA\n1.643703e-01\n\n\nBROWARD\n110\n-0.0050000000\n46\nNaN\nNaN\nNaN\nNA\nNA\n1.824224e-01\n\n\nBROWARD\n111\n-0.2500000000\n82\nNaN\nNaN\nNaN\nNA\nNA\n6.783025e-01\n\n\nBROWARD\n112\n-0.1357142857\n85\nNaN\nNaN\nNaN\nNA\nNA\n4.655122e-01\n\n\nBROWARD\n114\nNA\n20\nNaN\nNaN\nNaN\nNA\nNA\nNA\n\n\nBROWARD\n12\n-0.0033333333\n44\nNaN\nNaN\nNaN\nNA\nNA\n1.965328e-01\n\n\nBROWARD\n120\n0.0760000000\n47\n10.5529787\n0.0200\n28.80000\n9.227497e-01\nNA\n8.295733e-01\n\n\nBROWARD\n121\n-0.0100000000\n68\n0.1860294\n0.1100\n0.30000\n2.429229e-01\n-0.010000000\n6.286171e-03\n\n\nBROWARD\n122\n0.0025000000\n56\n0.3142857\n0.2300\n0.43000\n1.316599e-01\nNA\n6.994263e-01\n\n\nBROWARD\n123\n-0.9133333333\n41\n6.3834146\n0.4600\n23.20000\n1.003155e+00\nNA\n1.753081e-01\n\n\nBROWARD\n124\n-0.0050000000\n68\n0.3030294\n0.2500\n0.37000\n1.085422e-01\n-0.005000000\n3.162518e-02\n\n\nBROWARD\n125\n-0.7500000000\n40\n21.5512500\n11.2000\n31.20000\n2.939158e-01\nNA\n3.552399e-01\n\n\nBROWARD\n126\nNA\n8\n0.2737500\n0.1800\n0.38000\n2.726212e-01\nNA\nNA\n\n\nBROWARD\n127\nNA\n6\n18.3683333\n2.3600\n29.20000\n6.298101e-01\nNA\nNA\n\n\nBROWARD\n128\n1.2100000000\n24\n7.9058333\n0.3500\n21.50000\n9.304918e-01\nNA\n1.908210e-01\n\n\nBROWARD\n129\n-0.0840000000\n24\n7.2526667\n0.5600\n22.30000\n7.688662e-01\nNA\n8.844342e-01\n\n\nBROWARD\n13\nNA\n3\nNaN\nNaN\nNaN\nNA\nNA\nNA\n\n\nBROWARD\n14\n-0.0014285714\n44\nNaN\nNaN\nNaN\nNA\nNA\n5.184436e-01\n\n\nBROWARD\n15\n-0.6278571429\n96\n16.3911458\n0.2170\n35.10000\n6.726970e-01\nNA\n6.653658e-01\n\n\nBROWARD\n16\n-0.7600000000\n73\nNaN\nNaN\nNaN\nNA\nNA\n9.703930e-02\n\n\nBROWARD\n17\n-0.0100000000\n28\nNaN\nNaN\nNaN\nNA\nNA\n9.044070e-01\n\n\nBROWARD\n18\nNA\n2\nNaN\nNaN\nNaN\nNA\nNA\nNA\n\n\nBROWARD\n19\n-0.4600000000\n92\n9.4431848\n0.2040\n30.30000\n9.271847e-01\nNA\n2.214689e-01\n\n\nBROWARD\n2\n-0.0016666667\n49\nNaN\nNaN\nNaN\nNA\nNA\n8.262384e-01\n\n\nBROWARD\n20\n-0.0647619048\n90\nNaN\nNaN\nNaN\nNA\nNA\n2.790670e-01\n\n\nBROWARD\n21\nNA\n15\nNaN\nNaN\nNaN\nNA\nNA\nNA\n\n\nBROWARD\n22\n0.0025000000\n58\nNaN\nNaN\nNaN\nNA\nNA\n4.503513e-01\n\n\nBROWARD\n23\n-0.0008333333\n102\nNaN\nNaN\nNaN\nNA\nNA\n5.445578e-01\n\n\nBROWARD\n24\n-0.6000000000\n77\n22.2606494\n2.3500\n35.50000\n3.766109e-01\nNA\n5.151812e-01\n\n\nBROWARD\n25\n-0.3250000000\n80\n13.0638750\n1.6600\n30.10000\n5.968053e-01\nNA\n7.434207e-01\n\n\nBROWARD\n26\n-0.0250000000\n76\nNaN\nNaN\nNaN\nNA\nNA\n1.000000e+00\n\n\nBROWARD\n27\nNA\n11\nNaN\nNaN\nNaN\nNA\nNA\nNA\n\n\nBROWARD\n28\n-0.0033333333\n56\nNaN\nNaN\nNaN\nNA\nNA\n5.200505e-01\n\n\nBROWARD\n29\n0.0000000000\n61\nNaN\nNaN\nNaN\nNA\nNA\n7.393988e-01\n\n\nBROWARD\n3\n-0.0080000000\n59\nNaN\nNaN\nNaN\nNA\nNA\n2.723606e-01\n\n\nBROWARD\n31\n0.0000000000\n43\nNaN\nNaN\nNaN\nNA\nNA\n3.640033e-01\n\n\nBROWARD\n32\n0.0000000000\n65\nNaN\nNaN\nNaN\nNA\nNA\n8.255476e-01\n\n\nBROWARD\n33\n-0.2571428571\n77\n21.4720779\n1.9100\n36.30000\n4.655401e-01\nNA\n6.668337e-01\n\n\nBROWARD\n34\n-0.2000000000\n68\n31.8529412\n14.4000\n37.30000\n1.734955e-01\n-0.200000000\n2.300710e-02\n\n\nBROWARD\n35\n-0.2575000000\n125\nNaN\nNaN\nNaN\nNA\nNA\n1.104573e-01\n\n\nBROWARD\n36\n-0.8000000000\n77\n21.2163636\n5.2900\n33.50000\n4.236873e-01\nNA\n1.044190e-01\n\n\nBROWARD\n37\n-0.5500000000\n75\nNaN\nNaN\nNaN\nNA\nNA\n2.742793e-01\n\n\nBROWARD\n38\n-0.4000000000\n74\nNaN\nNaN\nNaN\nNA\nNA\n1.714602e-01\n\n\nBROWARD\n39\n0.0600000000\n64\n31.5104688\n21.5000\n36.40000\n9.886046e-02\nNA\n1.000000e+00\n\n\nBROWARD\n4\n0.0000000000\n104\nNaN\nNaN\nNaN\nNA\nNA\n1.000000e+00\n\n\nBROWARD\n40\n-0.1250000000\n108\n31.7309259\n22.1000\n36.40000\n8.362093e-02\nNA\n6.396830e-01\n\n\nBROWARD\n41\n-0.2000000000\n83\n27.0147084\n0.0250\n37.30000\n2.546306e-01\nNA\n4.941245e-01\n\n\nBROWARD\n47\nNA\n6\n30.2166667\n23.0000\n35.00000\n1.530149e-01\nNA\nNA\n\n\nBROWARD\n49\nNA\n36\nNaN\nNaN\nNaN\nNA\nNA\nNA\n\n\nBROWARD\n5\n-0.3666666667\n74\nNaN\nNaN\nNaN\nNA\nNA\n3.480826e-01\n\n\nBROWARD\n6\n-0.0050000000\n50\nNaN\nNaN\nNaN\nNA\nNA\n8.339354e-01\n\n\nBROWARD\n64\n-0.0712500000\n83\nNaN\nNaN\nNaN\nNA\nNA\n1.943176e-01\n\n\nBROWARD\n7\n0.0000000000\n46\nNaN\nNaN\nNaN\nNA\nNA\n1.000000e+00\n\n\nBROWARD\n8\n-0.0033333333\n56\nNaN\nNaN\nNaN\nNA\nNA\n3.183042e-01\n\n\nBROWARD\n89\n0.0000000000\n59\nNaN\nNaN\nNaN\nNA\nNA\n1.000000e+00\n\n\nBROWARD\n90\nNA\n45\n7.6377333\n0.1370\n28.20000\n1.094842e+00\nNA\nNA\n\n\nDEP\nBAK020\nNA\n3\n32.4333333\n29.9500\n34.59000\n7.206120e-02\nNA\nNA\n\n\nDEP\nBAK021\nNA\n3\n34.6000000\n32.7600\n36.63000\n5.612669e-02\nNA\nNA\n\n\nDEP\nBAK022\nNA\n3\n34.7533333\n33.7500\n36.62000\n4.655944e-02\nNA\nNA\n\n\nDEP\nBAK023\nNA\n3\n32.7700000\n31.5600\n34.65000\n5.036203e-02\nNA\nNA\n\n\nDEP\nBAK024\nNA\n3\n35.5566667\n34.4400\n36.41000\n2.843505e-02\nNA\nNA\n\n\nDEP\nBAK025\nNA\n3\n35.3733333\n33.6800\n36.52000\n4.231552e-02\nNA\nNA\n\n\nDEP\nBAK026\nNA\n3\n35.4566667\n34.2800\n36.24000\n2.926144e-02\nNA\nNA\n\n\nDEP\nBAK027\nNA\n3\n35.6566667\n34.8600\n36.35000\n2.104390e-02\nNA\nNA\n\n\nDEP\nBAK028\nNA\n3\n35.9200000\n34.9600\n36.90000\n2.700876e-02\nNA\nNA\n\n\nDEP\nBAK029\nNA\n3\n35.9166667\n34.7800\n36.88000\n2.953158e-02\nNA\nNA\n\n\nDEP\nBAK030\nNA\n3\n35.1633333\n33.6300\n36.71000\n4.379685e-02\nNA\nNA\n\n\nDEP\nBAK031\nNA\n3\n34.9566667\n33.2100\n36.75000\n5.064732e-02\nNA\nNA\n\n\nDEP\nBAK032\nNA\n3\n35.2666667\n33.7900\n36.81000\n4.284792e-02\nNA\nNA\n\n\nDEP\nBAK033\nNA\n3\n35.4200000\n34.2500\n36.77000\n3.584433e-02\nNA\nNA\n\n\nDEP\nBOC070\nNA\n3\n29.1566667\n27.2200\n30.52000\n5.909758e-02\nNA\nNA\n\n\nDEP\nBOC071\nNA\n3\n33.0000000\n30.0100\n36.06000\n9.168507e-02\nNA\nNA\n\n\nDEP\nBOC072\nNA\n3\n34.3266667\n32.1500\n36.75000\n6.729168e-02\nNA\nNA\n\n\nDEP\nBOC073\nNA\n3\n33.2633333\n30.7500\n36.71000\n9.282517e-02\nNA\nNA\n\n\nDEP\nBOC074\nNA\n3\n34.9833333\n32.9000\n36.69000\n5.496535e-02\nNA\nNA\n\n\nDEP\nBOC075\nNA\n3\n35.2866667\n33.3500\n36.49000\n4.799507e-02\nNA\nNA\n\n\nDEP\nBOC076\nNA\n3\n32.9833333\n30.8100\n34.38000\n5.783285e-02\nNA\nNA\n\n\nDEP\nBOC077\nNA\n3\n34.9400000\n33.1700\n36.12000\n4.467640e-02\nNA\nNA\n\n\nDEP\nBOC078\nNA\n3\n35.1566667\n33.2700\n36.47000\n4.765159e-02\nNA\nNA\n\n\nDEP\nBOC079\nNA\n3\n35.0000000\n33.1300\n36.43000\n4.838367e-02\nNA\nNA\n\n\nDEP\nBOC080\nNA\n3\n35.9300000\n35.0800\n36.64000\n2.196958e-02\nNA\nNA\n\n\nDEP\nBOC081\nNA\n3\n35.8100000\n34.5400\n36.72000\n3.165905e-02\nNA\nNA\n\n\nDEP\nBOC082\nNA\n3\n35.6966667\n34.1500\n36.72000\n3.817116e-02\nNA\nNA\n\n\nDEP\nBOC083\nNA\n3\n35.0733333\n32.3200\n36.72000\n6.841934e-02\nNA\nNA\n\n\nDEP\nBOY090\nNA\n3\n32.0266667\n24.0400\n36.49000\n2.164636e-01\nNA\nNA\n\n\nDEP\nBOY091\nNA\n3\n33.5900000\n31.2500\n36.93000\n8.839261e-02\nNA\nNA\n\n\nDEP\nBOY092\nNA\n3\n34.8333333\n32.4000\n36.39000\n6.127982e-02\nNA\nNA\n\n\nDEP\nBOY093\nNA\n3\n31.5333333\n28.5000\n36.92000\n1.483308e-01\nNA\nNA\n\n\nDEP\nBOY094\nNA\n3\n35.7966667\n34.7500\n36.96000\n3.099757e-02\nNA\nNA\n\n\nDEP\nBOY095\nNA\n3\n36.3566667\n35.8900\n36.95000\n1.488677e-02\nNA\nNA\n\n\nDEP\nBOY096\nNA\n3\n36.0366667\n35.5900\n36.83000\n1.911564e-02\nNA\nNA\n\n\nDEP\nBOY097\nNA\n3\n36.3000000\n35.6900\n36.96000\n1.753374e-02\nNA\nNA\n\n\nDEP\nBOY098\nNA\n3\n36.4333333\n36.1700\n36.90000\n1.112325e-02\nNA\nNA\n\n\nDEP\nBOY099\nNA\n3\n36.4000000\n36.0600\n36.91000\n1.235653e-02\nNA\nNA\n\n\nDEP\nBOY100\nNA\n3\n36.3600000\n36.0600\n36.91000\n1.311798e-02\nNA\nNA\n\n\nDEP\nBOY101\nNA\n3\n34.5233333\n31.8600\n36.96000\n7.408162e-02\nNA\nNA\n\n\nDEP\nGOC001\nNA\n3\n34.6033333\n34.0400\n35.05000\n1.488319e-02\nNA\nNA\n\n\nDEP\nGOC002\nNA\n3\n33.9900000\n31.2400\n35.62000\n7.046727e-02\nNA\nNA\n\n\nDEP\nGOC003\nNA\n3\n34.0500000\n31.2200\n35.74000\n7.242972e-02\nNA\nNA\n\n\nDEP\nGOC004\nNA\n3\n35.4933333\n34.8100\n36.09000\n1.815513e-02\nNA\nNA\n\n\nDEP\nGOC005\nNA\n3\n35.4533333\n34.6600\n36.10000\n2.062198e-02\nNA\nNA\n\n\nDEP\nGOC006\nNA\n3\n35.2800000\n33.9200\n35.98000\n3.338901e-02\nNA\nNA\n\n\nDEP\nGOC007\nNA\n3\n35.3866667\n34.5000\n36.06000\n2.265208e-02\nNA\nNA\n\n\nDEP\nGOC008\nNA\n3\n35.4166667\n34.3500\n36.32000\n2.809707e-02\nNA\nNA\n\n\nDEP\nGOC009\nNA\n3\n35.7633333\n34.4400\n36.88000\n3.447829e-02\nNA\nNA\n\n\nDEP\nGOC010\nNA\n3\n36.1066667\n35.3600\n36.95000\n2.213983e-02\nNA\nNA\n\n\nDEP\nGOC011\nNA\n3\n35.4133333\n33.7100\n36.44000\n4.194675e-02\nNA\nNA\n\n\nDEP\nGOC012\nNA\n3\n36.0000000\n35.4100\n36.76000\n1.919081e-02\nNA\nNA\n\n\nDEP\nGOC013\nNA\n3\n35.7966667\n34.6400\n36.92000\n3.185675e-02\nNA\nNA\n\n\nDEP\nGOC014\nNA\n3\n34.9866667\n33.7300\n35.96000\n3.263186e-02\nNA\nNA\n\n\nDEP\nGOC015\nNA\n3\n35.6833333\n34.8900\n36.40000\n2.123999e-02\nNA\nNA\n\n\nDEP\nHIL050\nNA\n4\n31.5500000\n31.0000\n32.15000\n1.663346e-02\nNA\nNA\n\n\nDEP\nHIL051\nNA\n4\n35.7575000\n35.4500\n36.25000\n9.851541e-03\nNA\nNA\n\n\nDEP\nHIL052\nNA\n4\n31.1300000\n27.8300\n33.34000\n7.610501e-02\nNA\nNA\n\n\nDEP\nHIL053\nNA\n4\n35.5025000\n34.4600\n36.48000\n2.449547e-02\nNA\nNA\n\n\nDEP\nHIL054\nNA\n4\n35.3825000\n34.6200\n35.69000\n1.440628e-02\nNA\nNA\n\n\nDEP\nHIL055\nNA\n4\n35.5225000\n34.7600\n36.72000\n2.427144e-02\nNA\nNA\n\n\nDEP\nHIL056\nNA\n4\n34.3875000\n32.8300\n35.21000\n3.167165e-02\nNA\nNA\n\n\nDEP\nHIL057\nNA\n4\n33.3950000\n30.7600\n34.61000\n5.339356e-02\nNA\nNA\n\n\nDEP\nHIL058\nNA\n4\n34.8400000\n33.2200\n36.79000\n4.843239e-02\nNA\nNA\n\n\nDEP\nHIL059\nNA\n4\n35.4675000\n34.5500\n36.09000\n1.950187e-02\nNA\nNA\n\n\nDEP\nHIL060\nNA\n4\n35.5675000\n33.9200\n36.32000\n3.120478e-02\nNA\nNA\n\n\nDEP\nHIL061\nNA\n4\n36.0500000\n35.0400\n37.01000\n2.240649e-02\nNA\nNA\n\n\nDEP\nHIL062\nNA\n4\n35.7050000\n33.6700\n36.95000\n3.962511e-02\nNA\nNA\n\n\nDEP\nHIL063\nNA\n4\n35.6400000\n33.3800\n36.95000\n4.369724e-02\nNA\nNA\n\n\nDEP\nILW110\nNA\n3\n34.6900000\n32.2500\n35.95000\n6.092478e-02\nNA\nNA\n\n\nDEP\nILW111\nNA\n3\n36.3366667\n36.0200\n36.88000\n1.300855e-02\nNA\nNA\n\n\nDEP\nILW112\nNA\n3\n36.2766667\n35.9400\n36.89000\n1.466532e-02\nNA\nNA\n\n\nDEP\nILW113\nNA\n3\n36.1433333\n35.8900\n36.52000\n9.202690e-03\nNA\nNA\n\n\nDEP\nILW114\nNA\n3\n36.2900000\n35.9600\n36.88000\n1.411277e-02\nNA\nNA\n\n\nDEP\nILW115\nNA\n3\n36.2966667\n35.9600\n36.86000\n1.352608e-02\nNA\nNA\n\n\nDEP\nILW116\nNA\n3\n36.2800000\n35.9200\n36.89000\n1.463977e-02\nNA\nNA\n\n\nDEP\nILW117\nNA\n3\n36.1766667\n35.8400\n36.78000\n1.447543e-02\nNA\nNA\n\n\nDEP\nILW118\nNA\n3\n36.3200000\n35.9700\n36.90000\n1.392802e-02\nNA\nNA\n\n\nDEP\nILW119\nNA\n3\n36.3033333\n35.9700\n36.87000\n1.358796e-02\nNA\nNA\n\n\nDEP\nJUP120\nNA\n3\n30.2366667\n29.7500\n31.07000\n2.397998e-02\nNA\nNA\n\n\nDEP\nJUP121\nNA\n3\n34.6866667\n33.4500\n36.89000\n5.514835e-02\nNA\nNA\n\n\nDEP\nJUP122\nNA\n3\n32.7633333\n30.4100\n34.42000\n6.390706e-02\nNA\nNA\n\n\nDEP\nJUP123\nNA\n3\n32.1233333\n30.0100\n34.34000\n6.745404e-02\nNA\nNA\n\n\nDEP\nJUP124\nNA\n3\n35.6633333\n34.6700\n36.63000\n2.748683e-02\nNA\nNA\n\n\nDEP\nJUP125\nNA\n3\n35.7866667\n34.7900\n36.80000\n2.808598e-02\nNA\nNA\n\n\nDEP\nJUP126\nNA\n3\n35.8866667\n35.1300\n36.77000\n2.305327e-02\nNA\nNA\n\n\nDEP\nJUP127\nNA\n3\n35.8933333\n35.1400\n36.78000\n2.307086e-02\nNA\nNA\n\n\nDEP\nJUP128\nNA\n3\n35.9200000\n35.1400\n36.84000\n2.390322e-02\nNA\nNA\n\n\nDEP\nJUP129\nNA\n3\n35.9133333\n35.1800\n36.79000\n2.267999e-02\nNA\nNA\n\n\nDEP\nPEV040\nNA\n3\n33.7900000\n32.8200\n35.25000\n3.808740e-02\nNA\nNA\n\n\nDEP\nPEV041\nNA\n3\n33.9600000\n32.6100\n35.16000\n3.773853e-02\nNA\nNA\n\n\nDEP\nPEV042\nNA\n3\n34.9733333\n32.9200\n36.79000\n5.563738e-02\nNA\nNA\n\n\nDEP\nPEV043\nNA\n3\n34.6233333\n33.2400\n35.63000\n3.577710e-02\nNA\nNA\n\n\nDEP\nPEV044\nNA\n3\n35.3233333\n33.7200\n36.77000\n4.334312e-02\nNA\nNA\n\n\nDEP\nPEV045\nNA\n3\n34.9166667\n33.7500\n36.50000\n4.071294e-02\nNA\nNA\n\n\nDEP\nPEV046\nNA\n3\n35.0966667\n32.9600\n36.83000\n5.602452e-02\nNA\nNA\n\n\nDEP\nPEV047\nNA\n3\n35.1600000\n33.9800\n36.70000\n3.968367e-02\nNA\nNA\n\n\nDEP\nPEV048\nNA\n3\n35.3333333\n33.6100\n36.64000\n4.407680e-02\nNA\nNA\n\n\nDEP\nPEV049\nNA\n3\n35.6833333\n34.6100\n36.57000\n2.783495e-02\nNA\nNA\n\n\nDEP\nPEV050\nNA\n3\n35.9700000\n35.4200\n36.69000\n1.812187e-02\nNA\nNA\n\n\nDEP\nPEV051\nNA\n3\n35.9266667\n35.4300\n36.68000\n1.846400e-02\nNA\nNA\n\n\nDEP\nPEV052\nNA\n3\n36.1566667\n35.7800\n36.65000\n1.235124e-02\nNA\nNA\n\n\nDEP\nPEV053\nNA\n3\n36.2800000\n35.9300\n36.57000\n8.935813e-03\nNA\nNA\n\n\nDEP\nSTL161\nNA\n3\n28.4666667\n20.8100\n34.96000\n2.510435e-01\nNA\nNA\n\n\nDEP\nSTL162\nNA\n3\n32.2666667\n29.9700\n35.88000\n9.816230e-02\nNA\nNA\n\n\nDEP\nSTL163\nNA\n3\n33.7966667\n30.0900\n36.75000\n1.004036e-01\nNA\nNA\n\n\nDEP\nSTL164\nNA\n3\n35.7066667\n34.8700\n36.30000\n2.087588e-02\nNA\nNA\n\n\nDEP\nSTL165\nNA\n3\n35.8366667\n35.4000\n36.32000\n1.288546e-02\nNA\nNA\n\n\nDEP\nSTL166\nNA\n3\n33.2200000\n29.8300\n35.65000\n9.110276e-02\nNA\nNA\n\n\nDEP\nSTL167\nNA\n3\n34.5100000\n33.2500\n36.72000\n5.564133e-02\nNA\nNA\n\n\nDEP\nSTL168\nNA\n3\n35.1233333\n33.4200\n36.10000\n4.214909e-02\nNA\nNA\n\n\nDEP\nSTL169\nNA\n3\n32.8166667\n31.3300\n35.20000\n6.353485e-02\nNA\nNA\n\n\nDEP\nSTL170\nNA\n3\n35.6233333\n35.1500\n35.98000\n1.198995e-02\nNA\nNA\n\n\nDEP\nSTL171\nNA\n3\n32.9033333\n29.9600\n35.63000\n8.635000e-02\nNA\nNA\n\n\nDEP\nSTL172\nNA\n3\n35.4866667\n34.5000\n36.12000\n2.439991e-02\nNA\nNA\n\n\nDERM_BBWQ\nAC01\n-0.3087500000\n170\n30.7218235\n11.1700\n36.60000\n1.261179e-01\n-0.308750000\n1.166686e-03\n\n\nDERM_BBWQ\nAC02\n-3.3350000000\n38\n27.7965789\n14.7400\n32.94000\n1.472983e-01\nNA\n1.876828e-01\n\n\nDERM_BBWQ\nAC03\n0.0100000000\n197\n19.7782741\n0.9400\n36.69000\n5.015089e-01\nNA\n9.617494e-01\n\n\nDERM_BBWQ\nAC06\n0.7333333333\n208\n14.8847596\n0.3100\n32.25000\n6.606067e-01\n0.733333333\n1.582567e-02\n\n\nDERM_BBWQ\nAR03\n0.0000000000\n174\n0.4441379\n0.1700\n17.16000\n3.257063e+00\nNA\n1.448802e-01\n\n\nDERM_BBWQ\nBB01A\n0.4800000000\n38\n24.4460526\n13.2100\n34.85000\n2.764069e-01\nNA\n6.559105e-01\n\n\nDERM_BBWQ\nBB02\n-0.2966666667\n170\n25.0800588\n2.9000\n35.67000\n3.152694e-01\nNA\n9.627881e-02\n\n\nDERM_BBWQ\nBB04\n-0.0667857143\n174\n30.5628161\n10.0700\n36.71000\n1.675542e-01\nNA\n7.216901e-01\n\n\nDERM_BBWQ\nBB05A\n-0.0663333333\n208\n32.2602885\n15.7400\n36.84000\n1.163765e-01\nNA\n2.419250e-01\n\n\nDERM_BBWQ\nBB08\n-0.5595833333\n161\n27.8024224\n11.9700\n36.47000\n1.851702e-01\n-0.559583333\n2.989218e-03\n\n\nDERM_BBWQ\nBB09\n-0.3400000000\n174\n29.6668391\n7.8700\n36.90000\n1.664162e-01\n-0.340000000\n3.903350e-02\n\n\nDERM_BBWQ\nBB10\n-0.1850000000\n152\n30.6377632\n17.0900\n36.85000\n1.191842e-01\nNA\n2.224458e-01\n\n\nDERM_BBWQ\nBB11\n-0.2770000000\n174\n28.5236782\n14.0200\n36.73000\n1.518605e-01\n-0.277000000\n6.332813e-03\n\n\nDERM_BBWQ\nBB13\nNA\n5\n27.3040000\n24.6000\n28.43000\n5.672605e-02\nNA\nNA\n\n\nDERM_BBWQ\nBB13A\n-0.3750000000\n78\n27.9412821\n16.4400\n32.97000\n1.362388e-01\nNA\n3.487725e-01\n\n\nDERM_BBWQ\nBB14\n-0.2233333333\n199\n30.3046734\n20.8800\n36.71000\n1.067615e-01\n-0.223333333\n7.233536e-04\n\n\nDERM_BBWQ\nBB15\n-0.4766666667\n83\n30.5545783\n21.3200\n34.54000\n8.559739e-02\n-0.476666667\n2.153580e-02\n\n\nDERM_BBWQ\nBB15A\n-0.1500000000\n153\n28.5303268\n12.6900\n36.42000\n1.370768e-01\nNA\n9.022976e-02\n\n\nDERM_BBWQ\nBB17\n-0.1520000000\n176\n31.3602273\n21.0700\n36.84000\n8.974336e-02\nNA\n1.070875e-01\n\n\nDERM_BBWQ\nBB18\n-0.2066666667\n152\n31.9018421\n14.2300\n36.56000\n8.384354e-02\n-0.206666667\n4.115199e-02\n\n\nDERM_BBWQ\nBB22\n-0.1140000000\n174\n32.9982184\n23.2900\n37.07000\n7.761962e-02\n-0.114000000\n1.810599e-02\n\n\nDERM_BBWQ\nBB24\n-0.0710000000\n174\n34.1704598\n22.3100\n38.40000\n7.368096e-02\nNA\n2.649755e-01\n\n\nDERM_BBWQ\nBB25\n0.0440000000\n103\n33.9742718\n26.5600\n37.67000\n6.798571e-02\nNA\n5.604031e-01\n\n\nDERM_BBWQ\nBB26\n-0.3083333333\n132\n32.1089394\n26.2800\n36.78000\n7.054036e-02\n-0.308333333\n7.746956e-04\n\n\nDERM_BBWQ\nBB28\n-0.0425000000\n105\n34.1506667\n28.5500\n37.70000\n6.556165e-02\nNA\n1.387861e-01\n\n\nDERM_BBWQ\nBB31\n-0.1616666667\n169\n32.4393491\n26.5900\n38.37000\n7.460105e-02\n-0.161666667\n1.184344e-02\n\n\nDERM_BBWQ\nBB32\n0.0200000000\n106\n32.7000000\n24.2900\n37.70000\n6.540178e-02\nNA\n8.279929e-01\n\n\nDERM_BBWQ\nBB34\n-0.4566666667\n174\n30.0598851\n0.2400\n39.61000\n1.469855e-01\n-0.456666667\n3.887293e-05\n\n\nDERM_BBWQ\nBB37\n-0.0133333333\n168\n35.1300000\n30.3200\n37.85000\n4.499905e-02\nNA\n7.076661e-01\n\n\nDERM_BBWQ\nBB38\n-0.3029166667\n169\n35.2070414\n24.6700\n38.52000\n6.502436e-02\n-0.302916667\n2.996007e-06\n\n\nDERM_BBWQ\nBB39A\n-0.3212500000\n175\n29.1200000\n7.0000\n41.09000\n1.625316e-01\n-0.321250000\n1.865893e-02\n\n\nDERM_BBWQ\nBB41\n-0.4608333333\n174\n33.2085057\n21.0700\n40.89000\n1.170918e-01\n-0.460833333\n1.415587e-06\n\n\nDERM_BBWQ\nBB47\n-0.6183333333\n170\n33.4459412\n24.3600\n39.14000\n1.070688e-01\n-0.618333333\n1.544249e-07\n\n\nDERM_BBWQ\nBB48\n-1.2695833333\n152\n32.3505921\n22.6500\n40.64000\n1.290819e-01\n-1.269583333\n4.001100e-13\n\n\nDERM_BBWQ\nBB50\n-1.0633333333\n168\n30.5829762\n3.6800\n41.44000\n1.704513e-01\n-1.063333333\n6.456494e-07\n\n\nDERM_BBWQ\nBB51\n-1.1125000000\n170\n26.4109412\n8.4900\n41.65000\n2.442214e-01\n-1.112500000\n2.331907e-04\n\n\nDERM_BBWQ\nBB52\n1.7300000000\n29\n25.1513793\n14.9900\n37.04000\n2.439823e-01\nNA\n2.355335e-01\n\n\nDERM_BBWQ\nBB53\n-1.5500000000\n19\n20.9957895\n12.6900\n41.65000\n4.721226e-01\nNA\n7.277235e-01\n\n\nDERM_BBWQ\nBBKB1\n0.0383333333\n106\n32.5910377\n27.7400\n37.52000\n5.864486e-02\nNA\n9.255901e-01\n\n\nDERM_BBWQ\nBBMB1\n-0.1345000000\n174\n33.1937931\n25.5600\n37.83000\n7.880530e-02\nNA\n9.612171e-02\n\n\nDERM_BBWQ\nBBMB2\n-0.2790000000\n152\n31.7225000\n22.2000\n36.78000\n7.782284e-02\n-0.279000000\n5.527359e-06\n\n\nDERM_BBWQ\nBBMB3\n-0.2433333333\n159\n31.1258491\n18.6900\n36.78000\n8.809963e-02\n-0.243333333\n2.103680e-02\n\n\nDERM_BBWQ\nBBMB4\n-0.2287500000\n152\n31.0994737\n18.2200\n37.10000\n8.747110e-02\n-0.228750000\n1.387249e-02\n\n\nDERM_BBWQ\nBBOR1\n-0.5300000000\n94\n32.2182979\n23.8600\n37.30000\n9.748101e-02\n-0.530000000\n8.358927e-05\n\n\nDERM_BBWQ\nBBOR2\n-1.4350000000\n93\n30.9331183\n22.4000\n37.13000\n1.107103e-01\n-1.435000000\n3.105346e-05\n\n\nDERM_BBWQ\nBBY1\n0.9000000000\n38\n28.1157895\n21.8700\n33.13000\n9.238113e-02\nNA\n6.582534e-01\n\n\nDERM_BBWQ\nBBY4\n2.2400000000\n40\n30.3662500\n26.2200\n38.28000\n8.972399e-02\nNA\n6.773916e-01\n\n\nDERM_BBWQ\nBISC101\n-0.4950000000\n183\n28.5407104\n13.5100\n41.52000\n2.008896e-01\n-0.495000000\n8.514403e-03\n\n\nDERM_BBWQ\nBISC121\n-0.5100000000\n170\n33.9721765\n24.7500\n38.44000\n9.583827e-02\n-0.510000000\n1.516372e-09\n\n\nDERM_BBWQ\nBISC122\n-0.5200000000\n181\n32.4131492\n17.3400\n39.17000\n1.490522e-01\n-0.520000000\n1.515903e-04\n\n\nDERM_BBWQ\nBISC127\n-0.2870000000\n174\n32.4302874\n20.2700\n39.83000\n1.045317e-01\n-0.287000000\n3.733597e-02\n\n\nDERM_BBWQ\nBL01\n-0.1666666667\n129\n14.3259690\n0.4200\n37.77000\n6.694263e-01\nNA\n6.495207e-01\n\n\nDERM_BBWQ\nBL02\n-0.7116666667\n65\n9.3484615\n0.3300\n31.09000\n9.915465e-01\nNA\n4.210638e-01\n\n\nDERM_BBWQ\nBL03\n0.0028571429\n173\n0.4272832\n0.1800\n23.70000\n4.235535e+00\n0.002857143\n1.752611e-03\n\n\nDERM_BBWQ\nBL04\n-0.0100000000\n40\n0.2655000\n0.2200\n0.45000\n1.743734e-01\nNA\n1.336144e-01\n\n\nDERM_BBWQ\nBL05\n-0.0100000000\n41\n0.2787805\n0.2300\n0.67000\n3.265197e-01\nNA\n1.318124e-01\n\n\nDERM_BBWQ\nBL06\n-0.0025000000\n151\n0.2671523\n0.2300\n0.29000\n5.264952e-02\n-0.002500000\n2.212008e-07\n\n\nDERM_BBWQ\nBL12\n-0.0016666667\n163\n0.3722699\n0.2000\n7.03000\n2.088328e+00\nNA\n5.444651e-02\n\n\nDERM_BBWQ\nBS01\n-0.5700000000\n174\n22.5209195\n0.4300\n36.23000\n4.997359e-01\n-0.570000000\n1.165842e-02\n\n\nDERM_BBWQ\nBS04\n-0.0025000000\n173\n0.8971098\n0.2300\n31.09000\n3.643558e+00\nNA\n4.971666e-01\n\n\nDERM_BBWQ\nBS07\n-0.0025000000\n165\n0.2417576\n0.1400\n0.55000\n2.129306e-01\n-0.002500000\n9.039753e-07\n\n\nDERM_BBWQ\nBS08\n0.0000000000\n40\n0.2282500\n0.2200\n0.24000\n2.786388e-02\nNA\n1.000000e+00\n\n\nDERM_BBWQ\nBS09\n0.0000000000\n40\n0.2305000\n0.2200\n0.24000\n2.185820e-02\nNA\n1.296346e-01\n\n\nDERM_BBWQ\nBS10\n-0.0016666667\n170\n0.2733294\n0.1800\n0.30000\n6.431862e-02\n-0.001666667\n2.106311e-06\n\n\nDERM_BBWQ\nBS11\n-0.0040000000\n166\n0.2630723\n0.2000\n0.46000\n1.691011e-01\n-0.004000000\n2.330857e-04\n\n\nDERM_BBWQ\nCD01A\n-0.2300000000\n220\n27.2015000\n4.0900\n38.43000\n1.711304e-01\nNA\n9.818978e-02\n\n\nDERM_BBWQ\nCD02\n0.0016666667\n168\n0.3122619\n0.1900\n0.63000\n2.246142e-01\nNA\n1.069142e-01\n\n\nDERM_BBWQ\nCD03A\n0.0100000000\n40\n0.3065000\n0.2400\n0.50000\n1.955563e-01\nNA\n1.371995e-01\n\n\nDERM_BBWQ\nCD04A\n-0.0200000000\n41\n0.2282927\n0.1600\n0.27000\n1.133411e-01\n-0.020000000\n1.140706e-03\n\n\nDERM_BBWQ\nCD05\n-0.0033333333\n174\n0.3015517\n0.1600\n7.80000\n2.690240e+00\n-0.003333333\n1.734491e-04\n\n\nDERM_BBWQ\nCD09\n-0.0025000000\n162\n0.2406173\n0.1600\n0.28000\n6.896832e-02\n-0.002500000\n2.262885e-11\n\n\nDERM_BBWQ\nCG01\n-0.1533333333\n174\n27.3708621\n11.5800\n36.41000\n1.605977e-01\nNA\n1.770026e-01\n\n\nDERM_BBWQ\nCG02\n2.9300000000\n40\n17.7812500\n0.1300\n34.13000\n4.157732e-01\nNA\n6.812251e-01\n\n\nDERM_BBWQ\nCG02A\n-0.2116666667\n160\n11.0060000\n2.2600\n28.55000\n5.902204e-01\nNA\n7.028225e-01\n\n\nDERM_BBWQ\nCG03\n0.0000000000\n41\n0.3212195\n0.2200\n1.11000\n6.620519e-01\nNA\n1.000000e+00\n\n\nDERM_BBWQ\nCG07\n0.0000000000\n170\n0.2423529\n0.1600\n0.28000\n7.200096e-02\n0.000000000\n1.882377e-03\n\n\nDERM_BBWQ\nCM02\n0.0050000000\n181\n1.5850276\n0.1300\n32.92000\n3.317855e+00\nNA\n6.088317e-02\n\n\nDERM_BBWQ\nCM04\n-0.0100000000\n49\n0.2165306\n0.1700\n0.31000\n1.384045e-01\nNA\n1.389888e-01\n\n\nDERM_BBWQ\nDDC1\n0.0000000000\n40\n0.2265000\n0.0300\n0.24000\n1.436902e-01\nNA\n5.838824e-01\n\n\nDERM_BBWQ\nDDC2\n-0.0100000000\n37\n0.2262162\n0.2100\n0.24000\n2.825034e-02\n-0.010000000\n1.383791e-03\n\n\nDERM_BBWQ\nFC03\n0.0000000000\n170\n0.3365882\n0.2600\n0.64000\n2.133397e-01\nNA\n3.311588e-01\n\n\nDERM_BBWQ\nFC15\n0.0000000000\n154\n0.2620130\n0.2000\n0.29000\n5.909113e-02\nNA\n8.600952e-02\n\n\nDERM_BBWQ\nFC16\n0.0000000000\n33\n0.2609091\n0.2000\n0.30000\n1.110687e-01\nNA\n7.003114e-01\n\n\nDERM_BBWQ\nGL02\n-0.0566666667\n198\n15.6234848\n0.8500\n32.92000\n5.344725e-01\nNA\n5.819382e-01\n\n\nDERM_BBWQ\nGL03\n0.0300000000\n146\n1.0815753\n0.3100\n2.12000\n3.376498e-01\nNA\n5.460398e-02\n\n\nDERM_BBWQ\nIC01\n-0.9450000000\n38\n33.2652632\n26.6300\n36.77000\n8.572019e-02\nNA\n1.403687e-01\n\n\nDERM_BBWQ\nIC02\n-0.3700000000\n38\n31.1339474\n25.9900\n36.26000\n1.041507e-01\nNA\n4.609948e-01\n\n\nDERM_BBWQ\nL31E1\n0.0700000000\n172\n3.6535465\n0.3100\n13.63000\n8.055908e-01\nNA\n3.559345e-01\n\n\nDERM_BBWQ\nLR01\n-0.8050000000\n174\n19.1266667\n0.4800\n35.87000\n5.568128e-01\n-0.805000000\n4.004391e-03\n\n\nDERM_BBWQ\nLR05\n-0.0018333333\n174\n0.2481034\n0.2000\n0.30000\n8.007045e-02\n-0.001833333\n9.823631e-04\n\n\nDERM_BBWQ\nLR06\n0.0000000000\n173\n0.2775145\n0.0000\n1.18000\n3.712213e-01\n0.000000000\n2.193878e-03\n\n\nDERM_BBWQ\nLR07\n0.0200000000\n41\n0.2512195\n0.2100\n0.29000\n9.172420e-02\nNA\n8.832026e-01\n\n\nDERM_BBWQ\nLR08\n0.0000000000\n174\n0.2576437\n0.2100\n0.30000\n7.645897e-02\n0.000000000\n2.559440e-02\n\n\nDERM_BBWQ\nLR10\n0.0000000000\n179\n0.2748603\n0.2000\n0.31000\n6.126340e-02\nNA\n1.713861e-01\n\n\nDERM_BBWQ\nMI01\n0.7450000000\n16\n16.8481250\n2.5500\n25.24000\n3.890056e-01\nNA\n1.175249e-01\n\n\nDERM_BBWQ\nMI02\n0.0508333333\n171\n3.7852632\n0.3200\n32.92000\n1.809674e+00\n0.050833333\n3.810649e-02\n\n\nDERM_BBWQ\nMI03\n0.0063333333\n169\n1.9714793\n0.1700\n32.92000\n2.507591e+00\nNA\n3.604607e-01\n\n\nDERM_BBWQ\nMR01\n-0.5051785714\n174\n25.1325287\n6.6200\n36.26000\n3.095411e-01\n-0.505178571\n2.150198e-02\n\n\nDERM_BBWQ\nMR02\n-2.4400000000\n40\n8.2862500\n1.4000\n23.05000\n6.626768e-01\nNA\n3.347643e-01\n\n\nDERM_BBWQ\nMR03\n-0.1058333333\n174\n9.0904598\n0.5900\n32.92000\n9.402241e-01\nNA\n3.346915e-01\n\n\nDERM_BBWQ\nMR04\n-1.0900000000\n40\n5.5450000\n0.5400\n18.39000\n7.869931e-01\nNA\n3.347643e-01\n\n\nDERM_BBWQ\nMR05\n-0.0880000000\n170\n6.9355294\n0.3100\n32.92000\n1.137229e+00\nNA\n3.845988e-01\n\n\nDERM_BBWQ\nMR06\n0.0950000000\n40\n2.4675000\n0.2100\n16.28000\n1.429138e+00\nNA\n3.285650e-01\n\n\nDERM_BBWQ\nMR07\n-0.0033333333\n170\n4.8277059\n0.2400\n32.91000\n1.308613e+00\nNA\n1.485323e-01\n\n\nDERM_BBWQ\nMR08\n-0.0015476190\n175\n0.2652000\n0.1800\n0.62000\n1.881395e-01\n-0.001547619\n3.081510e-03\n\n\nDERM_BBWQ\nMR11\n0.0050000000\n40\n0.2870000\n0.2200\n0.36000\n9.924395e-02\nNA\n2.838765e-01\n\n\nDERM_BBWQ\nMR15\n0.0000000000\n173\n1.0206358\n0.2600\n32.92000\n4.670305e+00\nNA\n8.844066e-01\n\n\nDERM_BBWQ\nMW01\n-1.1850000000\n65\n6.4909231\n0.2900\n42.01000\n1.588178e+00\n-1.185000000\n4.949888e-04\n\n\nDERM_BBWQ\nMW04\n0.0260000000\n174\n0.6814368\n0.1900\n2.17000\n5.473618e-01\n0.026000000\n4.921039e-04\n\n\nDERM_BBWQ\nMW05\n-0.0050000000\n174\n0.2898276\n0.2400\n0.32000\n7.169395e-02\n-0.005000000\n6.330624e-19\n\n\nDERM_BBWQ\nMW13\n0.0000000000\n173\n0.2706358\n0.2100\n0.39000\n1.069987e-01\nNA\n2.455408e-01\n\n\nDERM_BBWQ\nNO07A\n-0.0020000000\n179\n0.2902235\n0.2200\n0.35000\n5.657671e-02\n-0.002000000\n9.044254e-05\n\n\nDERM_BBWQ\nOC01\n0.0000000000\n41\n0.1931707\n0.1700\n0.24000\n8.540806e-02\nNA\n4.068205e-01\n\n\nDERM_BBWQ\nOL01\n5.1850000000\n51\n14.9941176\n0.2000\n37.12000\n7.288616e-01\nNA\n6.598606e-02\n\n\nDERM_BBWQ\nOL02\n-0.5625000000\n183\n11.6286885\n0.1500\n32.92000\n7.569130e-01\n-0.562500000\n2.829269e-03\n\n\nDERM_BBWQ\nOL03\n-0.1614285714\n206\n4.9510194\n0.0000\n22.29000\n1.039541e+00\n-0.161428571\n7.625286e-03\n\n\nDERM_BBWQ\nOSC1\n0.0000000000\n52\n0.2001923\n0.1800\n0.22000\n7.028892e-02\nNA\n8.497758e-02\n\n\nDERM_BBWQ\nOSC2\n0.0200000000\n55\n0.2198182\n0.1900\n0.25000\n6.976061e-02\n0.020000000\n3.817974e-05\n\n\nDERM_BBWQ\nOSC3\n0.0000000000\n40\n0.2290000\n0.2000\n0.26000\n4.824315e-02\nNA\n7.755617e-02\n\n\nDERM_BBWQ\nPR01\n-0.1042857143\n56\n4.1226786\n0.3100\n38.92000\n1.968183e+00\n-0.104285714\n8.388816e-03\n\n\nDERM_BBWQ\nPR03\n0.0033333333\n173\n0.3304046\n0.2100\n0.52000\n1.521494e-01\n0.003333333\n2.851892e-02\n\n\nDERM_BBWQ\nPR04A\n0.0000000000\n176\n0.3103409\n0.2900\n0.39000\n3.561568e-02\n0.000000000\n1.058467e-10\n\n\nDERM_BBWQ\nPR08\n0.0000000000\n176\n0.2684659\n0.2000\n0.39000\n1.134311e-01\nNA\n1.291374e-01\n\n\nDERM_BBWQ\nSK01\n-0.1837500000\n170\n17.5753529\n0.2600\n35.25000\n6.793814e-01\nNA\n2.929368e-01\n\n\nDERM_BBWQ\nSK02\n0.0033333333\n174\n1.2268391\n0.2300\n32.92000\n3.863959e+00\nNA\n2.119375e-01\n\n\nDERM_BBWQ\nSK05\n0.0000000000\n151\n0.2533113\n0.2000\n0.31000\n1.057046e-01\nNA\n9.602603e-02\n\n\nDERM_BBWQ\nSK09\n-0.0025000000\n174\n0.2655172\n0.1600\n0.31000\n1.051709e-01\n-0.002500000\n4.739633e-06\n\n\nDERM_BBWQ\nSK10\n0.0040000000\n152\n0.3042105\n0.2500\n0.35000\n6.481504e-02\n0.004000000\n1.294246e-10\n\n\nDERM_BBWQ\nSP01\n-0.4441666667\n172\n15.2733140\n0.3900\n36.06000\n7.750876e-01\nNA\n6.446076e-02\n\n\nDERM_BBWQ\nSP03\n0.0000000000\n40\n0.2520000\n0.2300\n0.28000\n4.328388e-02\nNA\n1.296346e-01\n\n\nDERM_BBWQ\nSP04\n0.0000000000\n174\n0.2535632\n0.1600\n0.40000\n8.585652e-02\nNA\n5.682260e-01\n\n\nDERM_BBWQ\nSP05\n0.0000000000\n40\n0.2505000\n0.2200\n0.28000\n4.864064e-02\nNA\n5.612758e-01\n\n\nDERM_BBWQ\nSP08\n0.0000000000\n174\n0.2524138\n0.1600\n0.30000\n5.536478e-02\nNA\n7.730471e-01\n\n\nDERM_BBWQ\nTM02\n-0.0033333333\n170\n3.4627059\n0.0800\n20.22000\n1.571251e+00\n-0.003333333\n3.364907e-02\n\n\nDERM_BBWQ\nTM03A\n0.0000000000\n179\n0.4966480\n0.1500\n16.76000\n3.467248e+00\n0.000000000\n3.451333e-02\n\n\nDERM_BBWQ\nTM05\n0.0000000000\n168\n0.9954167\n0.2000\n32.92000\n4.865449e+00\nNA\n5.658249e-01\n\n\nDERM_BBWQ\nTM06\n0.0000000000\n40\n0.2405000\n0.2200\n0.26000\n5.066312e-02\nNA\n5.612758e-01\n\n\nDERM_BBWQ\nTM07A\n-0.0050000000\n40\n0.2470000\n0.2300\n0.27000\n4.510175e-02\n-0.005000000\n3.315999e-02\n\n\nDERM_BBWQ\nTM08\n0.0000000000\n167\n0.6140120\n0.2100\n31.09000\n5.443437e+00\n0.000000000\n9.993259e-03\n\n\nDERM_BBWQ\nWC02\n0.0300000000\n172\n7.3477326\n0.8200\n31.09000\n9.132231e-01\nNA\n5.422967e-01\n\n\nDERM_BBWQ\nWC03\n0.1733333333\n188\n5.5806915\n0.0700\n24.42000\n1.012030e+00\n0.173333333\n5.194145e-04\n\n\nDERM_BBWQ\nWC04\n0.0963333333\n194\n3.1209278\n0.0900\n13.81000\n1.018689e+00\n0.096333333\n2.697130e-02\n\n\nFIU_WQMP\n200-W\n-0.0250000000\n31\n35.9994065\n34.3400\n36.64000\n1.550351e-02\nNA\n5.995102e-01\n\n\nFIU_WQMP\n201-W\n-0.0866666667\n31\n35.9725613\n33.6500\n37.28000\n2.897156e-02\nNA\n2.962699e-01\n\n\nFIU_WQMP\n203-W\n-0.0050000000\n31\n35.9664194\n34.1200\n36.57000\n1.667446e-02\nNA\n4.033953e-01\n\n\nFIU_WQMP\n204-W\n-0.0398333333\n32\n36.0878250\n33.8800\n37.34000\n2.851560e-02\nNA\n2.548666e-01\n\n\nFIU_WQMP\n206-W\n-0.0175000000\n32\n35.9852594\n34.1700\n36.55000\n1.537290e-02\nNA\n8.351215e-01\n\n\nFIU_WQMP\n207-W\n-0.0290000000\n31\n35.8487161\n34.1020\n37.34000\n2.698116e-02\nNA\n4.033953e-01\n\n\nFIU_WQMP\n209-W\n0.0640000000\n30\n36.6563100\n33.8000\n39.37000\n3.361679e-02\nNA\n9.086767e-01\n\n\nFIU_WQMP\n210-W\n-0.0469000000\n31\n35.9759290\n34.2200\n36.55000\n1.488185e-02\nNA\n2.100750e-01\n\n\nFIU_WQMP\n211-W\n0.0150000000\n29\n35.8190552\n30.8200\n37.48000\n3.997377e-02\nNA\n9.061856e-01\n\n\nFIU_WQMP\n212-W\n-0.0366666667\n31\n35.9656645\n33.1400\n36.92000\n2.475104e-02\nNA\n7.527138e-01\n\n\nFIU_WQMP\n213-W\n-0.0166666667\n29\n35.9761000\n34.2200\n36.63000\n1.512872e-02\nNA\n4.884223e-01\n\n\nFIU_WQMP\n214-W\n-0.0380000000\n31\n35.9413419\n32.7500\n38.26000\n3.838841e-02\nNA\n5.308693e-01\n\n\nFIU_WQMP\n215-W\n-0.0502875000\n31\n35.9082871\n33.3000\n37.29000\n2.977997e-02\nNA\n5.308693e-01\n\n\nFIU_WQMP\n216-W\n-0.0085714286\n31\n36.0214097\n34.4900\n36.60000\n1.396217e-02\nNA\n1.000000e+00\n\n\nFIU_WQMP\n217-W\n-0.1170750000\n31\n35.8990613\n32.3300\n37.92000\n3.845451e-02\nNA\n4.033953e-01\n\n\nFIU_WQMP\n218-W\n-0.0650000000\n29\n35.9992621\n34.4400\n36.64000\n1.636397e-02\nNA\n1.030639e-01\n\n\nFIU_WQMP\n219-W\n-0.0225000000\n30\n35.9655733\n33.5100\n36.55000\n1.671998e-02\nNA\n2.932707e-01\n\n\nFIU_WQMP\n220-W\n-0.0400000000\n31\n36.0137871\n33.7898\n37.28000\n2.915036e-02\nNA\n4.033953e-01\n\n\nFIU_WQMP\n222-W\n-0.0100000000\n31\n35.9994871\n33.6500\n36.56000\n1.598796e-02\nNA\n9.090729e-01\n\n\nFIU_WQMP\n223-W\n-0.0328833333\n31\n36.0627452\n33.9000\n38.82000\n2.921448e-02\nNA\n7.373157e-01\n\n\nFIU_WQMP\n224-W\n-0.0060000000\n31\n35.9848452\n34.1500\n36.71000\n1.638695e-02\nNA\n9.053088e-01\n\n\nFIU_WQMP\n225-W\n0.0107142857\n31\n35.9962290\n33.7900\n36.57000\n1.545937e-02\nNA\n6.317723e-01\n\n\nFIU_WQMP\n226-W\n-0.1050000000\n30\n36.1791400\n33.8330\n37.85000\n3.161022e-02\nNA\n2.439771e-01\n\n\nFIU_WQMP\n227-W\n-0.0466666667\n29\n36.0216586\n34.3262\n37.01000\n1.961901e-02\nNA\n1.969111e-01\n\n\nFIU_WQMP\n228-W\n0.0133333333\n31\n36.0174871\n34.1000\n36.62000\n1.413870e-02\nNA\n7.211867e-01\n\n\nFIU_WQMP\n229-W\n-0.1149885714\n31\n36.1049097\n29.8400\n38.23000\n4.513056e-02\nNA\n2.187580e-01\n\n\nFIU_WQMP\n230-W\n-0.0466666667\n29\n35.9516897\n32.6700\n37.24000\n2.766857e-02\nNA\n4.294622e-01\n\n\nFIU_WQMP\n231-W\n0.0020000000\n30\n36.0404567\n34.2000\n36.61000\n1.386647e-02\nNA\n7.173273e-01\n\n\nFIU_WQMP\n232-W\n-0.1031000000\n30\n35.7897033\n31.2800\n37.63000\n3.634338e-02\nNA\n1.213353e-01\n\n\nFIU_WQMP\n235-W\n-0.0571428571\n30\n35.9636567\n32.0000\n38.05000\n3.944668e-02\nNA\n2.439771e-01\n\n\nFIU_WQMP\n237-W\n-0.0025333333\n31\n36.0082065\n34.4000\n36.69000\n1.479637e-02\nNA\n9.078685e-01\n\n\nFIU_WQMP\n238-W\n-0.0960000000\n31\n36.1980935\n32.4200\n38.68000\n3.941768e-02\nNA\n2.418354e-01\n\n\nFIU_WQMP\n239-W\n-0.0313400000\n31\n36.0370774\n34.7600\n36.88000\n1.578042e-02\nNA\n4.050116e-01\n\n\nFIU_WQMP\n241-W\n-0.0900000000\n30\n35.9067400\n31.8000\n37.86000\n4.067706e-02\nNA\n6.233364e-01\n\n\nFIU_WQMP\n242-W\n-0.0500000000\n31\n35.9415806\n31.7800\n37.69000\n3.551608e-02\nNA\n2.585330e-01\n\n\nFIU_WQMP\n243-W\n-0.0233333333\n31\n35.9312484\n33.8700\n36.65000\n1.997275e-02\nNA\n2.418354e-01\n\n\nFIU_WQMP\n244-W\n-0.1200000000\n31\n36.1167710\n32.6200\n39.04000\n4.002215e-02\nNA\n1.751506e-01\n\n\nFIU_WQMP\n246-W\n-0.0257142857\n31\n35.9423839\n34.2700\n36.65000\n1.723892e-02\nNA\n3.424043e-01\n\n\nFIU_WQMP\n247-W\n-0.0853571429\n31\n36.0170839\n33.4400\n38.06000\n3.203175e-02\nNA\n8.782510e-02\n\n\nFIU_WQMP\n248-W\n-0.0500000000\n31\n36.0064161\n34.2700\n36.89000\n1.709389e-02\nNA\n2.373018e-01\n\n\nFIU_WQMP\n249-W\n-0.0277071429\n30\n36.0040967\n34.3300\n36.84000\n1.655183e-02\nNA\n6.867278e-01\n\n\nFIU_WQMP\n250-W\n0.0125770833\n31\n36.1667129\n32.1000\n38.36070\n3.523790e-02\nNA\n6.936406e-01\n\n\nFIU_WQMP\n252-W\n-0.0268571429\n31\n35.9616806\n34.4100\n36.66000\n1.549794e-02\nNA\n5.114818e-01\n\n\nFIU_WQMP\n253-W\n0.0395000000\n33\n36.1357000\n33.9000\n37.47000\n2.261874e-02\nNA\n4.150612e-01\n\n\nFIU_WQMP\n254-W\n0.0400000000\n31\n36.0337903\n33.5600\n37.24000\n2.519864e-02\nNA\n1.000000e+00\n\n\nFIU_WQMP\n255-W\n-0.0125000000\n31\n35.9956548\n34.4000\n36.98000\n1.922339e-02\nNA\n7.910815e-01\n\n\nFIU_WQMP\n256-W\n-0.0256714286\n30\n35.9366500\n33.7057\n36.88000\n1.940198e-02\nNA\n3.056959e-01\n\n\nFIU_WQMP\n259-W\n0.0083888889\n31\n35.9853387\n34.0864\n36.72000\n1.719377e-02\nNA\n6.884997e-01\n\n\nFIU_WQMP\n260-W\n0.1150000000\n31\n36.2974903\n33.6000\n38.79000\n2.878793e-02\nNA\n2.893148e-01\n\n\nFIU_WQMP\n263-W\n0.0157142857\n31\n35.9530903\n34.1259\n36.60000\n1.795020e-02\nNA\n4.267767e-01\n\n\nFIU_WQMP\n264-W\n0.0134285714\n31\n36.0239452\n34.0400\n36.63000\n1.413615e-02\nNA\n7.211867e-01\n\n\nFIU_WQMP\n266-W\n0.1000000000\n31\n36.3409935\n33.9400\n38.78000\n3.161253e-02\nNA\n1.203002e-01\n\n\nFIU_WQMP\n267-W\n0.0446666667\n32\n35.9927875\n34.0051\n36.72000\n1.691884e-02\nNA\n2.399850e-01\n\n\nFIU_WQMP\n268-W\n0.0828500000\n31\n36.1837258\n33.5700\n37.61000\n2.686974e-02\nNA\n4.373020e-01\n\n\nFIU_WQMP\n269-W\n0.0400000000\n31\n36.1755968\n34.3766\n37.77000\n1.885959e-02\nNA\n6.233364e-01\n\n\nFIU_WQMP\n270-W\n-0.0003333333\n31\n36.0501355\n33.8291\n36.79000\n1.758676e-02\nNA\n1.000000e+00\n\n\nFIU_WQMP\n271-W\n-0.0100000000\n31\n36.0377258\n34.0400\n37.24000\n2.280508e-02\nNA\n5.962416e-01\n\n\nFIU_WQMP\n272-W\n0.0154285714\n31\n36.0284065\n34.3800\n37.46000\n1.830122e-02\nNA\n4.880741e-01\n\n\nFIU_WQMP\n273-W\n-0.0087500000\n31\n36.0233097\n33.5499\n36.68000\n1.808695e-02\nNA\n7.794345e-01\n\n\nFIU_WQMP\n275-W\n-0.0346666667\n31\n36.0440903\n34.2900\n37.42000\n1.892132e-02\nNA\n5.186050e-01\n\n\nFIU_WQMP\n276-W\n-0.0190357143\n31\n36.0750355\n34.2900\n36.84000\n1.537975e-02\nNA\n4.008142e-01\n\n\nFIU_WQMP\n278-W\n-0.0322750000\n31\n36.0387677\n34.5200\n37.16000\n1.769178e-02\nNA\n3.316851e-01\n\n\nFIU_WQMP\n280-W\n-0.0241000000\n30\n36.0976767\n34.4500\n36.69000\n1.526909e-02\nNA\n4.008142e-01\n\n\nFIU_WQMP\n281-W\n-0.0231833333\n31\n36.1110871\n34.6400\n37.09000\n1.621716e-02\nNA\n4.267767e-01\n\n\nFIU_WQMP\n282-W\n-0.0135000000\n29\n36.4930655\n29.9300\n40.22310\n6.146699e-02\nNA\n1.000000e+00\n\n\nFIU_WQMP\n284-W\n0.0594666667\n30\n35.9009000\n28.6300\n40.36000\n7.563995e-02\nNA\n1.000000e+00\n\n\nFIU_WQMP\n285-W\n0.0209555556\n31\n36.5252581\n32.3500\n40.29570\n4.281317e-02\nNA\n9.211266e-01\n\n\nFIU_WQMP\n287-W\n-0.0808500000\n31\n36.1011129\n29.6400\n40.61000\n6.676529e-02\nNA\n4.882447e-01\n\n\nFIU_WQMP\n288-W\n0.0100000000\n31\n36.0460065\n30.9300\n39.02000\n5.267620e-02\nNA\n9.211266e-01\n\n\nFIU_WQMP\n289-W\n-0.0638916667\n30\n36.2772033\n29.5100\n39.29620\n5.242009e-02\nNA\n5.897738e-01\n\n\nFIU_WQMP\n290-W\n0.0019500000\n31\n35.7344258\n32.3300\n37.85280\n3.830713e-02\nNA\n1.000000e+00\n\n\nFIU_WQMP\n291-W\n-0.1124000000\n31\n36.1474032\n30.5500\n39.52000\n5.112051e-02\nNA\n2.760823e-01\n\n\nFIU_WQMP\n292-W\n-0.0843750000\n31\n36.4770097\n30.7200\n39.07140\n4.994641e-02\nNA\n3.728579e-01\n\n\nFIU_WQMP\n294-W\n-0.1400000000\n31\n36.1857581\n30.1700\n39.81000\n5.412527e-02\nNA\n3.728579e-01\n\n\nFIU_WQMP\n295-W\n-0.1035714286\n32\n36.0942531\n33.4500\n38.34000\n2.670747e-02\nNA\n1.509623e-01\n\n\nFIU_WQMP\n296-W\n-0.0358000000\n31\n36.1202742\n33.3200\n38.73000\n3.129309e-02\nNA\n8.030889e-01\n\n\nFIU_WQMP\n298-W\nNA\n2\n36.7200000\n35.8600\n37.58000\n3.312156e-02\nNA\nNA\n\n\nFIU_WQMP\n301-W\n-0.0369944444\n31\n36.1997452\n33.7800\n38.15000\n3.120934e-02\nNA\n4.988805e-01\n\n\nFIU_WQMP\n302-W\n-0.0128119048\n31\n36.0219323\n33.8800\n37.63000\n2.280848e-02\nNA\n8.924139e-01\n\n\nFIU_WQMP\n305-W\n-0.0279250000\n31\n36.0139839\n33.9300\n37.55000\n2.344379e-02\nNA\n4.988805e-01\n\n\nFIU_WQMP\n307-W\n-0.0479666667\n31\n36.1197194\n31.9900\n37.99000\n3.257983e-02\nNA\n3.437646e-01\n\n\nFIU_WQMP\n309-W\n0.0157142857\n31\n36.0365613\n34.2000\n37.59000\n2.157934e-02\nNA\n1.000000e+00\n\n\nFIU_WQMP\n310-W\n0.0651500000\n35\n36.4879657\n32.4400\n38.21000\n3.097058e-02\nNA\n6.633788e-01\n\n\nFIU_WQMP\n312-W\n0.0120000000\n32\n35.9565562\n34.1300\n37.21000\n1.960542e-02\nNA\n1.000000e+00\n\n\nFIU_WQMP\n314-W\n-0.0392857143\n31\n36.1469935\n31.8500\n38.26000\n3.559173e-02\nNA\n3.437646e-01\n\n\nFIU_WQMP\n315-W\n-0.0320000000\n31\n36.0124226\n34.1800\n37.99000\n2.206892e-02\nNA\n1.000000e+00\n\n\nFIU_WQMP\n316-W\n-0.0157142857\n32\n36.2358844\n34.5300\n37.58000\n2.291433e-02\nNA\n6.810956e-01\n\n\nFIU_WQMP\n317-W\n0.0599250000\n31\n36.3800000\n34.5400\n39.05000\n2.628386e-02\nNA\n2.780757e-01\n\n\nFIU_WQMP\n318-W\n0.0995833333\n30\n35.9377467\n34.1700\n37.26000\n1.974326e-02\nNA\n3.316851e-01\n\n\nFIU_WQMP\n319-W\n0.0220333333\n31\n36.0223484\n34.6700\n37.06000\n1.583180e-02\nNA\n7.910815e-01\n\n\nFIU_WQMP\n322-W\n-0.0325000000\n31\n36.0570258\n34.6380\n36.72000\n1.580568e-02\nNA\n4.267767e-01\n\n\nFIU_WQMP\n324-W\n0.0157500000\n31\n35.9755452\n31.8259\n37.10000\n2.578153e-02\nNA\n7.910815e-01\n\n\nFIU_WQMP\n325-W\n0.0133333333\n31\n36.2502484\n34.9577\n37.54000\n1.667183e-02\nNA\n7.910815e-01\n\n\nFIU_WQMP\n328-W\n-0.0350000000\n31\n36.0777677\n34.6355\n36.55000\n1.334832e-02\nNA\n1.415789e-01\n\n\nFIU_WQMP\n330-W\n0.0080000000\n31\n36.0400484\n34.9767\n36.69000\n1.339691e-02\nNA\n7.910815e-01\n\n\nFIU_WQMP\n332-W\n0.0008500000\n31\n36.1019226\n34.5800\n36.66000\n1.395260e-02\nNA\n1.000000e+00\n\n\nFIU_WQMP\n333-W\n-0.0133500000\n30\n36.0889033\n34.9447\n36.63000\n1.284151e-02\nNA\n5.873648e-01\n\n\nFIU_WQMP\n335-W\n-0.0191857143\n31\n36.1034903\n34.8057\n36.59000\n1.288890e-02\nNA\n1.415789e-01\n\n\nFIU_WQMP\n337-W\n-0.0177166667\n30\n36.0780700\n34.6500\n36.57000\n1.342710e-02\nNA\n6.884997e-01\n\n\nFIU_WQMP\n400-W\n-0.0128571429\n31\n36.0219645\n33.7800\n36.59000\n1.579843e-02\nNA\n7.318812e-01\n\n\nFIU_WQMP\n401-W\n-0.0028571429\n31\n36.0436032\n34.3900\n36.92000\n1.634372e-02\nNA\n1.000000e+00\n\n\nFIU_WQMP\n402-W\n-0.0407555556\n31\n36.0962871\n34.3900\n37.04000\n1.542843e-02\nNA\n3.580197e-01\n\n\nFIU_WQMP\n403-W\n-0.0150000000\n30\n36.0926000\n33.4364\n36.92000\n1.870384e-02\nNA\n3.814706e-01\n\n\nFIU_WQMP\n500-W\n-0.0485714286\n30\n35.8438700\n30.1500\n38.00000\n5.532632e-02\nNA\n8.112024e-01\n\n\nFIU_WQMP\n501-W\n-0.2158333333\n38\n34.9194342\n23.3000\n44.16000\n1.248129e-01\nNA\n5.420709e-01\n\n\nFIU_WQMP\n502-W\n-0.1225000000\n35\n35.9775000\n27.9300\n38.65000\n5.179107e-02\nNA\n1.182959e-01\n\n\nFIU_WQMP\n503-W\n-0.3485714286\n37\n36.8218595\n32.6900\n40.81000\n5.378485e-02\nNA\n2.668156e-01\n\n\nFIU_WQMP\n504-W\n-0.1312130952\n32\n35.9736438\n32.8000\n38.24000\n4.070879e-02\nNA\n8.610316e-02\n\n\nFIU_WQMP\n505-W\n-0.0097125000\n31\n36.2711194\n32.7700\n38.31000\n3.431060e-02\nNA\n1.000000e+00\n\n\nFIU_WQMP\n506-W\n0.1037500000\n32\n36.5650094\n30.2900\n39.11000\n4.533813e-02\n0.103750000\n2.865573e-02\n\n\nFIU_WQMP\n507-W\n-0.0939333333\n34\n36.4945059\n28.7300\n39.52000\n5.676696e-02\nNA\n4.136862e-01\n\n\nFIU_WQMP\n508-W\n0.0454000000\n33\n36.3368970\n32.8700\n38.70000\n3.313233e-02\nNA\n2.099542e-01\n\n\nFIU_WQMP\n509-W\n-0.4241666667\n9\n36.4381778\n35.0100\n37.33000\n1.918545e-02\nNA\n4.795001e-01\n\n\nMiamiBeach\n#1\nNA\n1\n37.6000000\n37.6000\n37.60000\nNA\nNA\nNA\n\n\nMiamiBeach\n#10\nNA\n1\n34.4000000\n34.4000\n34.40000\nNA\nNA\nNA\n\n\nMiamiBeach\n#11\nNA\n1\n34.0000000\n34.0000\n34.00000\nNA\nNA\nNA\n\n\nMiamiBeach\n#12\nNA\n1\n35.4000000\n35.4000\n35.40000\nNA\nNA\nNA\n\n\nMiamiBeach\n#13\nNA\n1\n35.6000000\n35.6000\n35.60000\nNA\nNA\nNA\n\n\nMiamiBeach\n#14\nNA\n1\n37.1000000\n37.1000\n37.10000\nNA\nNA\nNA\n\n\nMiamiBeach\n#15\nNA\n1\n37.0000000\n37.0000\n37.00000\nNA\nNA\nNA\n\n\nMiamiBeach\n#16\nNA\n1\n35.8000000\n35.8000\n35.80000\nNA\nNA\nNA\n\n\nMiamiBeach\n#17\nNA\n1\n34.9000000\n34.9000\n34.90000\nNA\nNA\nNA\n\n\nMiamiBeach\n#18\nNA\n1\n36.5000000\n36.5000\n36.50000\nNA\nNA\nNA\n\n\nMiamiBeach\n#19\nNA\n1\n36.3000000\n36.3000\n36.30000\nNA\nNA\nNA\n\n\nMiamiBeach\n#2\nNA\n1\n37.5000000\n37.5000\n37.50000\nNA\nNA\nNA\n\n\nMiamiBeach\n#20\nNA\n1\n37.4000000\n37.4000\n37.40000\nNA\nNA\nNA\n\n\nMiamiBeach\n#21\nNA\n1\n37.0000000\n37.0000\n37.00000\nNA\nNA\nNA\n\n\nMiamiBeach\n#22\nNA\n1\n37.2000000\n37.2000\n37.20000\nNA\nNA\nNA\n\n\nMiamiBeach\n#23\nNA\n1\n37.5000000\n37.5000\n37.50000\nNA\nNA\nNA\n\n\nMiamiBeach\n#24\nNA\n1\n37.7000000\n37.7000\n37.70000\nNA\nNA\nNA\n\n\nMiamiBeach\n#3\nNA\n1\n37.8000000\n37.8000\n37.80000\nNA\nNA\nNA\n\n\nMiamiBeach\n#3A\nNA\n1\n9.5000000\n9.5000\n9.50000\nNA\nNA\nNA\n\n\nMiamiBeach\n#3B\nNA\n1\n37.7000000\n37.7000\n37.70000\nNA\nNA\nNA\n\n\nMiamiBeach\n#4\nNA\n1\n37.7000000\n37.7000\n37.70000\nNA\nNA\nNA\n\n\nMiamiBeach\n#5\nNA\n1\n35.9000000\n35.9000\n35.90000\nNA\nNA\nNA\n\n\nMiamiBeach\n#6\nNA\n1\n35.1000000\n35.1000\n35.10000\nNA\nNA\nNA\n\n\nMiamiBeach\n#7\nNA\n1\n35.2000000\n35.2000\n35.20000\nNA\nNA\nNA\n\n\nMiamiBeach\n#8\nNA\n1\n34.1000000\n34.1000\n34.10000\nNA\nNA\nNA\n\n\nMiamiBeach\n#9\nNA\n1\n34.0000000\n34.0000\n34.00000\nNA\nNA\nNA\n\n\nMiamiBeach\n1\nNA\n11\n33.0545455\n29.1000\n36.70000\n7.821871e-02\nNA\nNA\n\n\nMiamiBeach\n10\nNA\n11\n31.5545455\n13.7000\n37.80000\n2.184868e-01\nNA\nNA\n\n\nMiamiBeach\n11\nNA\n11\n32.9363636\n25.2000\n37.30000\n1.203657e-01\nNA\nNA\n\n\nMiamiBeach\n12\nNA\n11\n32.4181818\n23.0000\n36.40000\n1.238403e-01\nNA\nNA\n\n\nMiamiBeach\n13\nNA\n11\n32.4181818\n23.9000\n35.80000\n1.105147e-01\nNA\nNA\n\n\nMiamiBeach\n14\nNA\n11\n32.2545455\n26.0000\n36.80000\n9.887468e-02\nNA\nNA\n\n\nMiamiBeach\n15\nNA\n11\n32.3545455\n25.3000\n36.20000\n9.820984e-02\nNA\nNA\n\n\nMiamiBeach\n16\n0.4523809524\n55\n30.2254545\n19.2000\n40.00000\n1.434083e-01\n0.452380952\n3.538882e-02\n\n\nMiamiBeach\n17\n0.3166666667\n90\n29.0622222\n7.0000\n37.50000\n1.933720e-01\nNA\n6.505185e-02\n\n\nMiamiBeach\n18\n0.4767857143\n56\n29.6946429\n7.0000\n39.20000\n1.837768e-01\nNA\n1.382191e-01\n\n\nMiamiBeach\n19\n0.4500000000\n91\n29.3692308\n14.2000\n39.10000\n1.877536e-01\n0.450000000\n3.807243e-02\n\n\nMiamiBeach\n2\n0.1297619048\n51\n31.8450980\n19.0000\n40.30000\n1.255080e-01\nNA\n5.531667e-01\n\n\nMiamiBeach\n20\nNA\n11\n32.8545455\n27.5000\n36.20000\n8.046436e-02\nNA\nNA\n\n\nMiamiBeach\n21\n0.0214285714\n50\n31.4060000\n21.1000\n39.70000\n1.364213e-01\nNA\n1.000000e+00\n\n\nMiamiBeach\n22\n0.3250000000\n86\n31.1790698\n16.5000\n39.60000\n1.509135e-01\n0.325000000\n1.996732e-02\n\n\nMiamiBeach\n23\n0.2187500000\n52\n31.4692308\n20.9000\n40.00000\n1.417452e-01\nNA\n1.613489e-01\n\n\nMiamiBeach\n24\n0.0791666667\n51\n31.5647059\n21.1000\n39.90000\n1.428917e-01\nNA\n6.099547e-01\n\n\nMiamiBeach\n25\n0.4285714286\n50\n31.6380000\n7.0000\n39.90000\n1.827612e-01\nNA\n2.270802e-01\n\n\nMiamiBeach\n26\n0.1937500000\n52\n31.8346154\n21.0000\n39.60000\n1.371871e-01\nNA\n1.859483e-01\n\n\nMiamiBeach\n27\n0.1366666667\n52\n32.0576923\n22.4000\n39.60000\n1.333269e-01\nNA\n8.047877e-01\n\n\nMiamiBeach\n28\n0.0900000000\n52\n32.0769231\n22.5000\n39.90000\n1.327616e-01\nNA\n8.047877e-01\n\n\nMiamiBeach\n29\n0.2937500000\n52\n31.7346154\n20.6000\n39.70000\n1.480275e-01\nNA\n2.471384e-01\n\n\nMiamiBeach\n3\nNA\n11\n32.5181818\n27.1000\n35.60000\n8.013034e-02\nNA\nNA\n\n\nMiamiBeach\n30\n0.3145833333\n52\n32.1903846\n21.7000\n40.50000\n1.395423e-01\nNA\n1.584944e-01\n\n\nMiamiBeach\n31\n0.3404761905\n52\n32.2000000\n21.1000\n38.40000\n1.337717e-01\nNA\n1.613489e-01\n\n\nMiamiBeach\n32\n0.2166666667\n52\n31.9461538\n20.8000\n39.30000\n1.403920e-01\nNA\n3.648100e-01\n\n\nMiamiBeach\n33\n0.6500000000\n52\n30.9711538\n7.0000\n40.10000\n1.899516e-01\n0.650000000\n1.688638e-02\n\n\nMiamiBeach\n34\n0.6166666667\n87\n31.4873563\n15.7000\n40.20000\n1.592201e-01\n0.616666667\n1.360221e-04\n\n\nMiamiBeach\n35\n0.5869047619\n52\n31.6173077\n20.2000\n39.50000\n1.618930e-01\nNA\n6.896362e-02\n\n\nMiamiBeach\n36\n0.3988095238\n52\n32.1788462\n20.2000\n40.00000\n1.427301e-01\nNA\n2.841657e-01\n\n\nMiamiBeach\n37\n0.8666666667\n52\n49.3019231\n7.0000\n933.00000\n2.537354e+00\n0.866666667\n3.933027e-03\n\n\nMiamiBeach\n38\n0.9000000000\n88\n32.0102273\n13.1000\n39.70000\n1.692107e-01\n0.900000000\n1.603719e-06\n\n\nMiamiBeach\n39\n0.4166666667\n51\n33.2607843\n21.7000\n39.90000\n1.429346e-01\nNA\n1.049515e-01\n\n\nMiamiBeach\n3A\n-5.1000000000\n16\n20.5937500\n8.4000\n32.60000\n3.962497e-01\nNA\n6.985354e-01\n\n\nMiamiBeach\n3B\nNA\n9\n32.5444444\n28.1000\n36.00000\n8.684326e-02\nNA\nNA\n\n\nMiamiBeach\n3b\nNA\n1\n32.5000000\n32.5000\n32.50000\nNA\nNA\nNA\n\n\nMiamiBeach\n4\n0.3428571429\n88\n30.2852273\n15.4000\n39.70000\n1.804812e-01\nNA\n5.589415e-02\n\n\nMiamiBeach\n40\n0.4452380952\n51\n33.1254902\n21.2000\n39.60000\n1.402150e-01\n0.445238095\n3.418063e-02\n\n\nMiamiBeach\n41\nNA\n11\n36.6454545\n34.4000\n38.90000\n4.198112e-02\nNA\nNA\n\n\nMiamiBeach\n42\n0.1733333333\n66\n30.7772727\n17.8000\n40.30000\n1.668702e-01\nNA\n5.843923e-01\n\n\nMiamiBeach\n45\n-2.0500000000\n28\n30.7392857\n21.9000\n41.10000\n1.647304e-01\nNA\n1.048527e-01\n\n\nMiamiBeach\n46\n0.8000000000\n63\n31.9904762\n19.9000\n40.70000\n1.652626e-01\nNA\n9.037691e-02\n\n\nMiamiBeach\n47\n0.5875000000\n64\n31.8921875\n19.1000\n40.20000\n1.682964e-01\n0.587500000\n2.665374e-02\n\n\nMiamiBeach\n48\n-1.7000000000\n28\n31.4321429\n23.0000\n40.10000\n1.714930e-01\nNA\n1.048527e-01\n\n\nMiamiBeach\n5\nNA\n11\n32.2454545\n23.5000\n36.30000\n1.170548e-01\nNA\nNA\n\n\nMiamiBeach\n52\n0.5875000000\n64\n31.3218750\n16.9000\n40.00000\n1.755187e-01\nNA\n5.694628e-02\n\n\nMiamiBeach\n54\n0.0000000000\n63\n31.2206349\n17.6000\n40.10000\n1.652341e-01\nNA\n1.000000e+00\n\n\nMiamiBeach\n56\n0.1500000000\n60\n31.8500000\n16.6000\n40.20000\n1.549661e-01\nNA\n7.820214e-01\n\n\nMiamiBeach\n59\n-0.8500000000\n26\n31.5000000\n7.0000\n48.90000\n2.402770e-01\nNA\n8.101812e-01\n\n\nMiamiBeach\n6\nNA\n11\n32.0545455\n22.6000\n36.10000\n1.306426e-01\nNA\nNA\n\n\nMiamiBeach\n60\n0.2000000000\n60\n31.4716667\n7.0000\n40.40000\n1.797521e-01\nNA\n2.123694e-01\n\n\nMiamiBeach\n61\n-0.3500000000\n21\n30.2000000\n18.3000\n44.70000\n2.082252e-01\nNA\n1.000000e+00\n\n\nMiamiBeach\n62\n-0.9500000000\n22\n29.2454545\n20.3000\n40.10000\n1.867122e-01\nNA\n7.518296e-01\n\n\nMiamiBeach\n63\n1.1375000000\n57\n30.2789474\n16.0000\n39.70000\n1.885275e-01\n1.137500000\n1.303649e-02\n\n\nMiamiBeach\n64\nNA\n6\n28.5166667\n25.0000\n35.10000\n1.221511e-01\nNA\nNA\n\n\nMiamiBeach\n66\n3.5500000000\n36\n28.0694444\n14.8000\n36.60000\n2.178137e-01\n3.550000000\n6.354614e-04\n\n\nMiamiBeach\n67\n3.0333333333\n37\n28.2000000\n14.8000\n37.60000\n2.296234e-01\n3.033333333\n4.816663e-03\n\n\nMiamiBeach\n68\n4.0000000000\n37\n27.5081081\n7.0000\n38.20000\n2.772284e-01\n4.000000000\n2.475709e-04\n\n\nMiamiBeach\n69\n3.8500000000\n37\n27.6405405\n10.8000\n38.10000\n2.625009e-01\n3.850000000\n4.473649e-03\n\n\nMiamiBeach\n7\nNA\n11\n32.3000000\n25.0000\n36.60000\n1.111365e-01\nNA\nNA\n\n\nMiamiBeach\n70\n4.6500000000\n37\n27.9648649\n14.3000\n38.20000\n2.652348e-01\n4.650000000\n5.395294e-03\n\n\nMiamiBeach\n71\n3.5000000000\n37\n28.0513514\n10.9000\n37.70000\n2.651655e-01\n3.500000000\n7.116834e-04\n\n\nMiamiBeach\n74\n0.4250000000\n36\n18.1444444\n7.0000\n37.00000\n5.275672e-01\nNA\n4.475209e-01\n\n\nMiamiBeach\n78\n0.0000000000\n36\n8.5027778\n7.0000\n28.70000\n5.978571e-01\nNA\n1.824224e-01\n\n\nMiamiBeach\n79\n0.0000000000\n22\n7.5500000\n7.0000\n19.10000\n3.416859e-01\nNA\n1.000000e+00\n\n\nMiamiBeach\n8\nNA\n11\n32.4000000\n25.0000\n36.20000\n1.193451e-01\nNA\nNA\n\n\nMiamiBeach\n81\n-0.2500000000\n14\n31.7571429\n25.4000\n35.20000\n9.444848e-02\nNA\n1.000000e+00\n\n\nMiamiBeach\n82\n-0.9000000000\n15\n33.5466667\n28.0000\n38.10000\n9.093988e-02\nNA\n1.000000e+00\n\n\nMiamiBeach\n83\nNA\n7\n31.4285714\n28.2000\n34.30000\n7.163719e-02\nNA\nNA\n\n\nMiamiBeach\n84\nNA\n12\n14.5416667\n7.0000\n35.90000\n7.324081e-01\nNA\nNA\n\n\nMiamiBeach\n9\n0.7750000000\n88\n29.8409091\n14.9000\n39.20000\n1.850615e-01\n0.775000000\n6.003489e-04\n\n\nPALMBEACH\n10\nNA\n3\n34.5833333\n33.2200\n35.30000\n3.415518e-02\nNA\nNA\n\n\nPALMBEACH\n11\n-0.2933333333\n194\nNA\nNA\nNA\nNA\nNA\n1.604008e-01\n\n\nPALMBEACH\n12A\nNA\n1\nNA\nNA\nNA\nNA\nNA\nNA\n\n\nPALMBEACH\n13\n-0.6850000000\n193\n26.8962176\n0.6300\n38.30000\n2.866053e-01\nNA\n1.667579e-01\n\n\nPALMBEACH\n14\nNA\n2\n37.1250000\n35.9100\n38.34000\n4.628335e-02\nNA\nNA\n\n\nPALMBEACH\n15\nNA\n1\nNA\nNA\nNA\nNA\nNA\nNA\n\n\nPALMBEACH\n16\nNA\n1\nNA\nNA\nNA\nNA\nNA\nNA\n\n\nPALMBEACH\n18A\nNA\n6\n28.9550000\n13.3000\n35.28000\n2.934353e-01\nNA\nNA\n\n\nPALMBEACH\n18C\n-1.4640000000\n190\n23.9438421\n4.7400\n36.90000\n3.808814e-01\n-1.464000000\n7.158042e-03\n\n\nPALMBEACH\n18D\n-1.1300000000\n176\n26.5513636\n7.6000\n36.12000\n2.735073e-01\n-1.130000000\n2.242086e-03\n\n\nPALMBEACH\n22\nNA\n1\nNA\nNA\nNA\nNA\nNA\nNA\n\n\nPALMBEACH\n24\nNA\n1\nNA\nNA\nNA\nNA\nNA\nNA\n\n\nPALMBEACH\n28A\nNA\n5\n31.5160000\n23.7500\n35.81000\n1.558439e-01\nNA\nNA\n\n\nPALMBEACH\n31D\nNA\n3\n30.0300000\n23.9900\n34.17000\n1.781337e-01\nNA\nNA\n\n\nSFER\n1\n-0.0205555556\n55\n35.5710182\n33.6490\n36.83000\n2.576400e-02\nNA\n6.716308e-01\n\n\nSFER\n10\n-0.0331250000\n52\n36.1513269\n31.1810\n39.04000\n4.374574e-02\nNA\n1.957576e-01\n\n\nSFER\n11\n-0.0414285714\n55\n35.9834364\n33.5290\n37.52300\n2.116481e-02\nNA\n1.576450e-01\n\n\nSFER\n12\n-0.0238214286\n55\n36.0235453\n34.6830\n36.71932\n1.373522e-02\nNA\n1.834306e-01\n\n\nSFER\n13\n-0.0391250000\n54\n35.9909259\n33.8100\n37.75300\n2.391913e-02\nNA\n4.232250e-01\n\n\nSFER\n14\n-0.0367500000\n55\n36.0709091\n34.8000\n37.23000\n1.592631e-02\nNA\n6.621765e-02\n\n\nSFER\n15\n-0.0184444444\n55\n36.0264727\n34.7560\n37.00000\n1.308592e-02\nNA\n2.034680e-01\n\n\nSFER\n15.5\n-0.0258750000\n53\n35.9750755\n34.6940\n36.79000\n1.314940e-02\n-0.025875000\n3.096357e-02\n\n\nSFER\n16\n-0.0150000000\n55\n36.3023273\n33.1200\n39.34000\n3.044654e-02\nNA\n7.737829e-01\n\n\nSFER\n17\n0.0033333333\n56\n35.9313929\n32.8250\n37.26000\n2.066019e-02\nNA\n1.000000e+00\n\n\nSFER\n18\n-0.0202857143\n56\n36.0710196\n34.7330\n36.71000\n1.205438e-02\nNA\n6.712072e-02\n\n\nSFER\n19\n0.0110000000\n56\n36.1461786\n27.5800\n37.89900\n4.047487e-02\nNA\n4.374395e-01\n\n\nSFER\n2\n-0.0316666667\n55\n36.0083764\n34.1090\n36.69000\n1.410103e-02\n-0.031666667\n4.790038e-02\n\n\nSFER\n20\n-0.0250000000\n56\n36.0271250\n33.5300\n37.44000\n1.899840e-02\nNA\n3.981027e-01\n\n\nSFER\n21.25\nNA\n1\n35.6460000\n35.6460\n35.64600\nNA\nNA\nNA\n\n\nSFER\n21.5\n0.0037500000\n54\n36.0120741\n33.6600\n36.93600\n1.447032e-02\nNA\n7.158448e-01\n\n\nSFER\n21LK\n-0.0165000000\n57\n36.0861333\n34.5400\n36.73000\n1.176466e-02\nNA\n9.386040e-02\n\n\nSFER\n22\n-0.0038571429\n57\n36.0034807\n33.8410\n37.06000\n1.419150e-02\nNA\n6.869509e-01\n\n\nSFER\n22.5\n-0.0017083333\n53\n35.9852453\n33.8150\n37.06000\n1.495246e-02\nNA\n1.000000e+00\n\n\nSFER\n23\n0.0015416667\n57\n36.0481930\n34.5170\n37.32000\n1.511206e-02\nNA\n8.931400e-01\n\n\nSFER\n24\n-0.0547083333\n57\n36.1965596\n34.3910\n38.41100\n2.015355e-02\n-0.054708333\n1.070113e-02\n\n\nSFER\n3\n-0.0215000000\n55\n35.9345091\n34.4040\n36.81000\n1.339146e-02\nNA\n1.576450e-01\n\n\nSFER\n30\n0.0413750000\n54\n36.0802926\n34.2440\n36.84300\n1.278644e-02\n0.041375000\n2.334220e-02\n\n\nSFER\n30.5\n0.0603333333\n54\n35.8523704\n34.2170\n37.09000\n1.527362e-02\n0.060333333\n1.125360e-02\n\n\nSFER\n31\n0.0891041667\n55\n35.8357691\n32.9780\n38.46500\n2.100011e-02\n0.089104167\n3.087191e-03\n\n\nSFER\n32\n0.0762857143\n56\n35.1508750\n32.6800\n37.35700\n2.456682e-02\nNA\n9.262497e-02\n\n\nSFER\n33\n0.0414000000\n56\n35.0308375\n33.1490\n37.19400\n2.478826e-02\nNA\n4.834823e-01\n\n\nSFER\n34\n0.0768333333\n56\n34.4791250\n30.0950\n37.27000\n3.577831e-02\nNA\n6.847727e-02\n\n\nSFER\n39\n0.0302500000\n48\n31.8426042\n23.1800\n37.67400\n1.109825e-01\nNA\n8.039164e-01\n\n\nSFER\n4\n-0.0377291667\n44\n36.0060682\n33.6330\n37.67400\n2.972863e-02\nNA\n3.071008e-01\n\n\nSFER\n40\n0.0773750000\n52\n33.5273269\n22.6380\n37.74000\n7.964121e-02\nNA\n3.252901e-01\n\n\nSFER\n41\n0.0717000000\n54\n34.6010296\n28.9340\n37.31700\n4.305015e-02\nNA\n2.190700e-01\n\n\nSFER\n42\n0.0860000000\n55\n35.4008727\n32.5010\n37.99900\n2.514634e-02\n0.086000000\n5.739147e-03\n\n\nSFER\n45\n0.0260000000\n55\n35.3126364\n31.6800\n38.26200\n2.968306e-02\nNA\n3.988811e-01\n\n\nSFER\n46\n0.0577571429\n56\n34.9010179\n29.6020\n37.63000\n3.694230e-02\nNA\n2.975352e-01\n\n\nSFER\n47\n0.0751666667\n56\n34.4341429\n28.5040\n37.31300\n4.848140e-02\nNA\n5.319447e-01\n\n\nSFER\n48\n0.0212500000\n55\n33.7739818\n27.9880\n37.90000\n5.799865e-02\nNA\n7.749106e-01\n\n\nSFER\n49\n-0.1117000000\n53\n33.0271189\n24.2200\n37.29600\n6.987749e-02\nNA\n3.514678e-01\n\n\nSFER\n5\n-0.0059761905\n44\n36.0728636\n33.9100\n37.15200\n1.815350e-02\nNA\n7.805956e-01\n\n\nSFER\n5.5\n-0.0135714286\n45\n35.9386667\n34.1730\n36.78000\n1.566593e-02\nNA\n3.917522e-01\n\n\nSFER\n50\n0.0068750000\n54\n35.0469815\n29.3540\n37.58500\n4.064317e-02\nNA\n7.702951e-01\n\n\nSFER\n51\n0.0483750000\n56\n34.7560875\n28.1100\n37.43000\n4.536225e-02\nNA\n4.449042e-01\n\n\nSFER\n52\n-0.0042500000\n53\n33.6765849\n28.7170\n37.71000\n6.231239e-02\nNA\n8.813884e-01\n\n\nSFER\n53\n-0.0100000000\n50\n33.0547400\n28.7750\n36.85200\n6.057605e-02\nNA\n1.000000e+00\n\n\nSFER\n54\n0.0261805556\n68\n32.1863235\n21.9040\n37.26700\n9.084556e-02\nNA\n9.140156e-01\n\n\nSFER\n55\n-0.0973125000\n70\n33.6971571\n27.1290\n37.35300\n6.909317e-02\nNA\n2.701485e-01\n\n\nSFER\n56\n-0.0745000000\n71\n34.4853944\n28.4630\n37.73900\n6.129774e-02\nNA\n6.448830e-01\n\n\nSFER\n57\n-0.1111875000\n72\n34.9993472\n29.9960\n37.73600\n5.255399e-02\nNA\n1.416352e-01\n\n\nSFER\n57.1\n-0.0125333333\n72\n35.5214583\n31.5830\n37.83700\n3.572392e-02\nNA\n7.999580e-01\n\n\nSFER\n57.2\n0.0455000000\n71\n35.8269183\n33.7320\n38.05700\n2.214507e-02\nNA\n1.086254e-01\n\n\nSFER\n57.3\n0.0677500000\n68\n35.9372412\n34.3750\n37.67900\n1.777955e-02\n0.067750000\n3.818842e-02\n\n\nSFER\n58\n0.0945208333\n53\n35.9272453\n30.8900\n37.25800\n2.532537e-02\n0.094520833\n3.906780e-03\n\n\nSFER\n59\n0.0781142857\n53\n35.8280943\n33.8270\n37.92600\n2.460402e-02\nNA\n1.065721e-01\n\n\nSFER\n6\n-0.0195000000\n47\n35.9547447\n34.4850\n36.74000\n1.350088e-02\nNA\n4.424942e-01\n\n\nSFER\n6.5\n-0.0112500000\n47\n35.9507021\n34.2480\n36.73000\n1.316438e-02\nNA\n2.270802e-01\n\n\nSFER\n60\n0.0391250000\n56\n35.4867518\n30.9430\n37.67900\n4.273070e-02\nNA\n5.181742e-01\n\n\nSFER\n61\n0.0365000000\n56\n35.1105179\n29.5890\n38.34800\n5.461662e-02\nNA\n5.181742e-01\n\n\nSFER\n62\n0.0248392857\n56\n34.9164286\n28.9720\n38.55800\n6.121211e-02\nNA\n9.427644e-01\n\n\nSFER\n63\n-0.1004861111\n54\n34.6759537\n28.1180\n38.74000\n7.395261e-02\nNA\n1.931587e-01\n\n\nSFER\n64\n-0.0862936508\n48\n34.3349375\n27.7850\n39.20000\n9.394162e-02\nNA\n6.576955e-01\n\n\nSFER\n65\n-0.0244375000\n51\n35.0073529\n28.1100\n39.91900\n8.974127e-02\nNA\n8.683848e-01\n\n\nSFER\n66\n-0.0594166667\n52\n34.9212308\n28.6370\n38.47000\n7.650583e-02\nNA\n5.735308e-01\n\n\nSFER\n67\n-0.0225000000\n52\n35.3580000\n30.1100\n38.33000\n6.250246e-02\nNA\n1.000000e+00\n\n\nSFER\n68\n0.0054444444\n55\n36.1361709\n31.2400\n39.88300\n4.612440e-02\nNA\n1.000000e+00\n\n\nSFER\n69\n-0.1053333333\n42\n35.9060000\n31.8300\n38.90200\n4.967214e-02\nNA\n1.577084e-01\n\n\nSFER\n7\n0.0073333333\n55\n36.1400727\n33.6580\n38.77000\n2.576825e-02\nNA\n8.894426e-01\n\n\nSFER\n70\n-0.0802500000\n42\n35.7373095\n31.6850\n38.81400\n5.402430e-02\nNA\n2.319058e-01\n\n\nSFER\n71\nNA\n1\n32.9760000\n32.9760\n32.97600\nNA\nNA\nNA\n\n\nSFER\n8\n-0.0022500000\n57\n36.0470526\n34.1100\n37.03000\n1.615953e-02\nNA\n9.464576e-01\n\n\nSFER\n9\n-0.0165071429\n57\n36.0375105\n34.5930\n36.81800\n1.380608e-02\nNA\n4.610216e-01\n\n\nSFER\n9.5\n-0.0216000000\n53\n36.0580189\n34.5200\n37.18100\n1.265577e-02\nNA\n2.386098e-01\n\n\nSFER\n9.6\nNA\n1\n34.1800000\n34.1800\n34.18000\nNA\nNA\nNA\n\n\nSFER\n9.7\nNA\n1\n33.4580000\n33.4580\n33.45800\nNA\nNA\nNA\n\n\nSFER\n9.8\nNA\n1\n36.1290000\n36.1290\n36.12900\nNA\nNA\nNA\n\n\nSFER\nAC1\nNA\n1\n33.3840000\n33.3840\n33.38400\nNA\nNA\nNA\n\n\nSFER\nAC2\nNA\n1\n34.4180000\n34.4180\n34.41800\nNA\nNA\nNA\n\n\nSFER\nAC3\nNA\n1\n34.7050000\n34.7050\n34.70500\nNA\nNA\nNA\n\n\nSFER\nAC4\nNA\n1\n35.0520000\n35.0520\n35.05200\nNA\nNA\nNA\n\n\nSFER\nAC5\nNA\n1\n35.4390000\n35.4390\n35.43900\nNA\nNA\nNA\n\n\nSFER\nAC6\nNA\n1\n36.5320000\n36.5320\n36.53200\nNA\nNA\nNA\n\n\nSFER\nAMI1\n0.2690000000\n26\n34.8171154\n33.1520\n36.69900\n3.014727e-02\nNA\n3.973214e-01\n\n\nSFER\nAMI2\n0.1800000000\n26\n35.1838846\n34.0230\n36.99000\n2.194769e-02\nNA\n3.973214e-01\n\n\nSFER\nAMI3\n-0.0440000000\n26\n35.5827692\n34.5030\n36.96500\n1.580587e-02\nNA\n6.721440e-01\n\n\nSFER\nAMI4\n0.2350000000\n25\n35.9551600\n34.9700\n37.04000\n1.459452e-02\nNA\n7.123907e-02\n\n\nSFER\nAMI5\n0.1910000000\n26\n36.1348077\n34.7490\n37.01400\n1.259671e-02\nNA\n2.042193e-01\n\n\nSFER\nAMI6\n0.1520000000\n26\n36.1899615\n34.8460\n36.93100\n1.130983e-02\n0.152000000\n1.110922e-02\n\n\nSFER\nAMI7\n0.0630000000\n26\n36.1987308\n35.6320\n36.62400\n7.737345e-03\nNA\n5.134833e-02\n\n\nSFER\nAMI8\n0.1060000000\n26\n36.1713462\n35.1940\n36.60300\n8.708570e-03\n0.106000000\n3.434167e-02\n\n\nSFER\nAMI9\n0.0795000000\n26\n36.2066154\n35.7280\n36.60100\n6.963964e-03\n0.079500000\n3.434167e-02\n\n\nSFER\nBG1\n-0.4380000000\n24\n33.7348333\n28.7950\n36.93200\n5.473467e-02\nNA\n1.760675e-01\n\n\nSFER\nBG10\nNA\n1\n36.4740000\n36.4740\n36.47400\nNA\nNA\nNA\n\n\nSFER\nBG11\nNA\n1\n36.5670000\n36.5670\n36.56700\nNA\nNA\nNA\n\n\nSFER\nBG12\nNA\n1\n36.6210000\n36.6210\n36.62100\nNA\nNA\nNA\n\n\nSFER\nBG13\nNA\n2\n36.6008500\n36.5997\n36.60200\n4.443464e-05\nNA\nNA\n\n\nSFER\nBG14\nNA\n1\n35.7300000\n35.7300\n35.73000\nNA\nNA\nNA\n\n\nSFER\nBG15\nNA\n2\n36.1245000\n36.0940\n36.15500\n1.194024e-03\nNA\nNA\n\n\nSFER\nBG16\nNA\n1\n36.1360000\n36.1360\n36.13600\nNA\nNA\nNA\n\n\nSFER\nBG17\nNA\n2\n35.8215000\n35.8180\n35.82500\n1.381781e-04\nNA\nNA\n\n\nSFER\nBG18\nNA\n1\n36.3390000\n36.3390\n36.33900\nNA\nNA\nNA\n\n\nSFER\nBG2\n-0.2280000000\n30\n34.6566333\n32.2620\n36.96400\n3.268133e-02\nNA\n2.389475e-01\n\n\nSFER\nBG20\nNA\n2\n36.2045000\n36.2030\n36.20600\n5.859273e-05\nNA\nNA\n\n\nSFER\nBG3\n0.1702500000\n30\n34.9645000\n25.2470\n37.33400\n6.446956e-02\nNA\n6.137731e-01\n\n\nSFER\nBG4\n0.0537000000\n30\n35.9037333\n33.7160\n37.14200\n1.831160e-02\nNA\n8.664010e-01\n\n\nSFER\nBG6\n0.0220000000\n11\n36.4136364\n35.7890\n36.90200\n7.251230e-03\nNA\n1.000000e+00\n\n\nSFER\nBG7\n-0.0330000000\n12\n36.3952500\n35.9500\n36.74900\n6.172389e-03\nNA\n1.000000e+00\n\n\nSFER\nBG8\nNA\n1\n36.5530000\n36.5530\n36.55300\nNA\nNA\nNA\n\n\nSFER\nBG9\nNA\n1\n36.4800000\n36.4800\n36.48000\nNA\nNA\nNA\n\n\nSFER\nBK1\nNA\n1\n34.9360000\n34.9360\n34.93600\nNA\nNA\nNA\n\n\nSFER\nCAL1\n0.0855000000\n33\n33.1799091\n27.5670\n35.73900\n5.201556e-02\nNA\n5.754030e-01\n\n\nSFER\nCAL2\n0.0568833333\n34\n34.4989912\n29.5280\n36.80100\n3.784945e-02\nNA\n8.936947e-01\n\n\nSFER\nCAL3\n0.0668333333\n34\n35.0651324\n31.7240\n37.74000\n3.158046e-02\nNA\n6.884997e-01\n\n\nSFER\nCAL4\n0.2511250000\n34\n35.4926353\n33.9770\n37.12600\n2.103539e-02\nNA\n1.415789e-01\n\n\nSFER\nCAL5\n0.2132500000\n34\n35.7972265\n34.7010\n36.97200\n1.606340e-02\nNA\n8.235222e-02\n\n\nSFER\nCAL6\n0.0154500000\n28\n36.2052857\n35.4980\n37.02400\n9.369166e-03\nNA\n8.551321e-01\n\n\nSFER\nCAL7\nNA\n1\n35.5040000\n35.5040\n35.50400\nNA\nNA\nNA\n\n\nSFER\nCAL8\nNA\n1\n35.2932000\n35.2932\n35.29320\nNA\nNA\nNA\n\n\nSFER\nCALA\nNA\n1\n36.3460000\n36.3460\n36.34600\nNA\nNA\nNA\n\n\nSFER\nCK1\nNA\n1\n35.4250000\n35.4250\n35.42500\nNA\nNA\nNA\n\n\nSFER\nCK2\nNA\n1\n35.9800000\n35.9800\n35.98000\nNA\nNA\nNA\n\n\nSFER\nCW1\n-1.1030000000\n16\n34.7508125\n32.4900\n37.16000\n3.813987e-02\nNA\n3.081795e-01\n\n\nSFER\nCW2\n-0.4950000000\n16\n34.8784500\n32.8720\n36.83900\n3.395214e-02\nNA\n7.340952e-01\n\n\nSFER\nCW3\n0.2220000000\n17\n35.0362882\n33.2100\n36.77800\n2.769390e-02\nNA\n7.787290e-01\n\n\nSFER\nCW4\n-0.6060000000\n16\n35.4401437\n33.9800\n36.74500\n2.292730e-02\nNA\n7.340952e-01\n\n\nSFER\nCW5\n0.1095000000\n12\n35.8044167\n34.9700\n36.97900\n1.856474e-02\nNA\n1.000000e+00\n\n\nSFER\nCW6\n-0.1580000000\n12\n36.2142500\n34.8550\n36.83500\n1.609412e-02\nNA\n1.000000e+00\n\n\nSFER\nCW7\n-0.0218000000\n11\n36.4088909\n35.1420\n36.84700\n1.209543e-02\nNA\n1.000000e+00\n\n\nSFER\nCaseyhole\nNA\n1\n35.8900000\n35.8900\n35.89000\nNA\nNA\nNA\n\n\nSFER\nEB1\nNA\n1\n34.6480000\n34.6480\n34.64800\nNA\nNA\nNA\n\n\nSFER\nEB2\nNA\n1\n35.7750000\n35.7750\n35.77500\nNA\nNA\nNA\n\n\nSFER\nEH07\nNA\n1\n35.5070000\n35.5070\n35.50700\nNA\nNA\nNA\n\n\nSFER\nEH08\nNA\n1\n36.1100000\n36.1100\n36.11000\nNA\nNA\nNA\n\n\nSFER\nEKIN\n-0.0250000000\n53\n35.9933962\n33.9370\n37.64000\n2.129731e-02\nNA\n1.912113e-01\n\n\nSFER\nEKMID\n-0.0026250000\n54\n36.0046481\n33.9480\n36.84000\n1.434945e-02\nNA\n1.000000e+00\n\n\nSFER\nEKOFF\n-0.0040000000\n54\n36.0222407\n34.1540\n36.86900\n1.366873e-02\nNA\n6.652783e-01\n\n\nSFER\nGP1\nNA\n4\n34.5229500\n33.3260\n34.97580\n2.320830e-02\nNA\nNA\n\n\nSFER\nGP1.5\nNA\n1\n34.4550000\n34.4550\n34.45500\nNA\nNA\nNA\n\n\nSFER\nGP2\nNA\n4\n34.5071750\n33.8990\n35.19970\n1.695630e-02\nNA\nNA\n\n\nSFER\nGP3\nNA\n4\n34.7901000\n34.2400\n35.28740\n1.568471e-02\nNA\nNA\n\n\nSFER\nGP4\nNA\n4\n35.7300000\n35.2060\n36.18000\n1.168612e-02\nNA\nNA\n\n\nSFER\nGP5\n0.1019750000\n34\n36.1254706\n35.3600\n37.00300\n1.003602e-02\n0.101975000\n2.310339e-02\n\n\nSFER\nGS\nNA\n1\n36.4990000\n36.4990\n36.49900\nNA\nNA\nNA\n\n\nSFER\nGlider\nNA\n2\n35.7410000\n35.3890\n36.09300\n1.392807e-02\nNA\nNA\n\n\nSFER\nHB1\nNA\n1\n34.3860000\n34.3860\n34.38600\nNA\nNA\nNA\n\n\nSFER\nHB2\nNA\n1\n34.6840000\n34.6840\n34.68400\nNA\nNA\nNA\n\n\nSFER\nHB3\nNA\n1\n35.1390000\n35.1390\n35.13900\nNA\nNA\nNA\n\n\nSFER\nHB4\nNA\n1\n35.2900000\n35.2900\n35.29000\nNA\nNA\nNA\n\n\nSFER\nHB5\nNA\n1\n35.5270000\n35.5270\n35.52700\nNA\nNA\nNA\n\n\nSFER\nHB6\nNA\n1\n36.2190000\n36.2190\n36.21900\nNA\nNA\nNA\n\n\nSFER\nJunkpile\nNA\n1\n35.6754000\n35.6754\n35.67540\nNA\nNA\nNA\n\n\nSFER\nKW1\n-0.0148750000\n34\n36.0447265\n34.6420\n37.27200\n1.953182e-02\nNA\n8.897069e-01\n\n\nSFER\nKW2\n0.0047500000\n34\n36.0897353\n34.7050\n37.27500\n1.758691e-02\nNA\n6.773916e-01\n\n\nSFER\nKW3\n0.0289000000\n34\n36.0265882\n34.8400\n37.20000\n1.735329e-02\nNA\n6.773916e-01\n\n\nSFER\nKW4\n-0.0147666667\n33\n36.2209424\n35.3750\n36.89000\n1.208551e-02\nNA\n8.867848e-01\n\n\nSFER\nL1\n-1.0350000000\n9\n35.2097778\n33.1440\n36.93400\n3.459111e-02\nNA\n4.795001e-01\n\n\nSFER\nL3\n-0.7135000000\n9\n36.0278889\n35.3960\n36.79200\n1.460863e-02\nNA\n4.795001e-01\n\n\nSFER\nL5\n-0.4172500000\n9\n36.1925000\n35.3380\n36.65200\n1.117853e-02\nNA\n4.795001e-01\n\n\nSFER\nL7\n-0.0170000000\n9\n36.3426667\n35.7720\n36.62000\n7.301873e-03\nNA\n1.000000e+00\n\n\nSFER\nL9\n-0.0365000000\n10\n36.3361000\n35.6520\n36.60100\n7.950210e-03\nNA\n4.795001e-01\n\n\nSFER\nM01\nNA\n1\n35.7800000\n35.7800\n35.78000\nNA\nNA\nNA\n\n\nSFER\nM02\nNA\n1\n35.5900000\n35.5900\n35.59000\nNA\nNA\nNA\n\n\nSFER\nM03\nNA\n1\n35.6100000\n35.6100\n35.61000\nNA\nNA\nNA\n\n\nSFER\nM04\nNA\n1\n35.5500000\n35.5500\n35.55000\nNA\nNA\nNA\n\n\nSFER\nM05\nNA\n1\n35.0200000\n35.0200\n35.02000\nNA\nNA\nNA\n\n\nSFER\nMR\n-0.0211250000\n56\n36.0716036\n34.4550\n36.56000\n1.159988e-02\nNA\n1.288184e-01\n\n\nSFER\nMudhole\nNA\n1\n35.5400000\n35.5400\n35.54000\nNA\nNA\nNA\n\n\nSFER\nNaplesBlueHole\nNA\n1\n35.8900000\n35.8900\n35.89000\nNA\nNA\nNA\n\n\nSFER\nPLUME\nNA\n1\n34.7900000\n34.7900\n34.79000\nNA\nNA\nNA\n\n\nSFER\nROME4\n-0.8560000000\n11\n35.4095364\n33.4890\n36.79300\n2.675530e-02\nNA\n3.710934e-01\n\n\nSFER\nROME5\n-1.3400000000\n11\n34.8874545\n32.1580\n36.65100\n4.461729e-02\nNA\n3.710934e-01\n\n\nSFER\nRP1\n0.2845000000\n34\n34.7200882\n32.3280\n37.76500\n3.325927e-02\nNA\n2.291019e-01\n\n\nSFER\nRP2\n0.1180500000\n34\n34.7508353\n32.5520\n36.71000\n2.726789e-02\nNA\n6.884997e-01\n\n\nSFER\nRP3\n0.1128000000\n35\n35.2860657\n33.1650\n37.28600\n2.222736e-02\nNA\n4.464260e-01\n\n\nSFER\nRP4\n0.0966250000\n34\n35.7051265\n32.9420\n37.19200\n2.264882e-02\nNA\n3.495748e-01\n\n\nSFER\nRedTide\nNA\n1\n36.3556000\n36.3556\n36.35560\nNA\nNA\nNA\n\n\nSFER\nTB1\n0.3552500000\n29\n34.3434655\n31.7110\n36.95400\n3.591151e-02\nNA\n2.206714e-01\n\n\nSFER\nTB10\n0.0742500000\n27\n36.2166296\n35.3200\n36.89300\n9.809953e-03\nNA\n1.095986e-01\n\n\nSFER\nTB11\nNA\n2\n35.4440000\n35.3300\n35.55800\n4.548593e-03\nNA\nNA\n\n\nSFER\nTB12\nNA\n1\n35.5000000\n35.5000\n35.50000\nNA\nNA\nNA\n\n\nSFER\nTB13\nNA\n1\n35.6600000\n35.6600\n35.66000\nNA\nNA\nNA\n\n\nSFER\nTB2\n0.1190625000\n29\n34.9250862\n32.7570\n36.89800\n2.863523e-02\nNA\n5.427953e-02\n\n\nSFER\nTB3\n0.2127500000\n29\n35.3356207\n33.7460\n37.01500\n2.087930e-02\nNA\n3.816731e-01\n\n\nSFER\nTB4\n0.1705500000\n29\n35.8614034\n34.7680\n37.05200\n1.571865e-02\nNA\n1.153322e-01\n\n\nSFER\nTB5\n0.1728500000\n29\n36.2040517\n35.1940\n37.72100\n1.433965e-02\nNA\n5.427953e-02\n\n\nSFER\nTB6\nNA\n2\n32.8108000\n31.4870\n34.13460\n5.705853e-02\nNA\nNA\n\n\nSFER\nTB7\nNA\n2\n33.7336500\n32.4240\n35.04330\n5.490437e-02\nNA\nNA\n\n\nSFER\nTB8\nNA\n2\n34.4426500\n33.4580\n35.42730\n4.042968e-02\nNA\nNA\n\n\nSFER\nTB9\nNA\n2\n34.7484500\n34.2390\n35.25790\n2.073391e-02\nNA\nNA\n\n\nSFER\nTBA\nNA\n1\n35.7320000\n35.7320\n35.73200\nNA\nNA\nNA\n\n\nSFER\nTBB\nNA\n1\n36.0420000\n36.0420\n36.04200\nNA\nNA\nNA\n\n\nSFER\nTBC\nNA\n1\n36.0850000\n36.0850\n36.08500\nNA\nNA\nNA\n\n\nSFER\nUKIN\n-0.0245000000\n54\n35.9901667\n33.8310\n37.29400\n2.255375e-02\nNA\n3.949597e-01\n\n\nSFER\nUKMID\n-0.0031428571\n54\n36.0034259\n34.1460\n36.72900\n1.483291e-02\nNA\n7.767534e-01\n\n\nSFER\nUKOFF\n-0.0093541667\n55\n36.0234364\n34.5580\n36.72000\n1.254681e-02\nNA\n4.412085e-01\n\n\nSFER\nV1\n0.1670000000\n30\n34.7494667\n33.1820\n37.22200\n3.001650e-02\nNA\n1.581525e-01\n\n\nSFER\nV10\nNA\n1\n35.4800000\n35.4800\n35.48000\nNA\nNA\nNA\n\n\nSFER\nV11\nNA\n1\n35.2800000\n35.2800\n35.28000\nNA\nNA\nNA\n\n\nSFER\nV2\n0.2095416667\n30\n35.1108000\n33.6400\n36.98800\n2.466028e-02\nNA\n1.581525e-01\n\n\nSFER\nV3\n0.2346250000\n29\n35.4782414\n34.3620\n36.96800\n2.013263e-02\n0.234625000\n2.293437e-02\n\n\nSFER\nV4\n0.2168750000\n30\n35.6309667\n34.3890\n36.93800\n1.951281e-02\nNA\n4.330034e-01\n\n\nSFER\nV5\n0.1540000000\n29\n35.9359655\n34.4890\n36.75000\n1.670738e-02\nNA\n3.816731e-01\n\n\nSFER\nV6\n0.1760000000\n30\n36.0342667\n34.4570\n36.66400\n1.341454e-02\nNA\n8.453871e-02\n\n\nSFER\nV7\n0.0932500000\n30\n35.8409333\n26.2400\n36.75000\n5.130684e-02\nNA\n6.927988e-02\n\n\nSFER\nV8\n0.0649166667\n29\n36.2080345\n35.5850\n36.86100\n8.703504e-03\nNA\n1.153322e-01\n\n\nSFER\nV9\n0.0317000000\n30\n36.2055333\n35.6000\n36.77000\n7.734858e-03\nNA\n1.371995e-01\n\n\nSFER\nWS\n-0.0188333333\n56\n36.0912679\n34.6190\n36.77900\n1.205244e-02\nNA\n7.528744e-02\n\n\nSFER\nZ03027\nNA\n1\n31.1000000\n31.1000\n31.10000\nNA\nNA\nNA\n\n\nSFER\nZ03076\nNA\n1\n36.3801000\n36.3801\n36.38010\nNA\nNA\nNA\n\n\nSFER\nZ03116\nNA\n1\n36.0033000\n36.0033\n36.00330\nNA\nNA\nNA\n\n\nSFER\nZ03146\nNA\n1\n36.0495000\n36.0495\n36.04950\nNA\nNA\nNA\n\n\nSFER\nZ03198\nNA\n1\n35.9684000\n35.9684\n35.96840\nNA\nNA\nNA\n\n\nSFER\nZ04067\nNA\n1\n35.8304000\n35.8304\n35.83040\nNA\nNA\nNA\n\n\nSFER\nZ04068\nNA\n1\n35.6561000\n35.6561\n35.65610\nNA\nNA\nNA\n\n\nSFER\nZ04093\nNA\n1\n36.3000000\n36.3000\n36.30000\nNA\nNA\nNA\n\n\nSFER\nZ04099\nNA\n1\n36.1894000\n36.1894\n36.18940\nNA\nNA\nNA\n\n\nSFER\nZ04110\nNA\n1\n35.4560000\n35.4560\n35.45600\nNA\nNA\nNA\n\n\nSFER\nZ04610\nNA\n1\n36.0169000\n36.0169\n36.01690\nNA\nNA\nNA\n\n\n\n\n\n\n\n\n\nReporting Programs:\n\n\ndisplay reporting programs\nlibrary(ggplot2)\nggplot(df, aes(x = program)) +\n  geom_bar() +\n  labs(title = \"Reporting Programs\", x = \"Program\", y = \"Count\")"
  },
  {
    "objectID": "analyte_reports/analyte_reports/Turbidity.html",
    "href": "analyte_reports/analyte_reports/Turbidity.html",
    "title": "Turbidity Report",
    "section": "",
    "text": "get data across all programs, filter for analyte\nlibrary('here')\nlibrary('dplyr')\nsource(here(\"R/getAllData.R\"))\nfull_df &lt;- getAllData()\ndf &lt;- filter(full_df, DEP.Analyte.Name == params$analyte)\n\n\n\n\ncreate .csv of analyte data\n# save df to csv\n# reduce to only cols we need & save to csv\ndf %&gt;%\n  mutate(\n    source = program,\n    site = Monitoring.Location.ID,\n    datetime = Activity.Start.Date.Time,\n    analyte = DEP.Analyte.Name,\n    value = DEP.Result.Value.Number,\n    units = DEP.Result.Unit,\n    latitude = Org.Decimal.Latitude,\n    longitude = Org.Decimal.Longitude,\n    sample_depth = Activity.Depth,\n    .keep = \"none\"\n) %&gt;%\n  write.csv(here(\"data\", \"exports\", \"unified-wq-db-samples\", paste0(params$analyte, \".csv\")))\n\n\nDownload data for this analyte here\n\nHistogram of DEP.Result.Value.Number:\n\n\ndisplay histogram of values\nlibrary(ggplot2)\nggplot(df, aes(x = DEP.Result.Value.Number)) +\n  geom_histogram(bins = 30, fill = \"blue\", color = \"black\") +\n  labs(title = \"Histogram of Values\", x = \"Value\", y = \"Count\")\n\n\n\n\n\n\n\n\n\n\n\nStation Statistics:\n\n\ncreate station statistics dataframe\nsource(here(\"R/seasonalMannKendall.R\"))\nlibrary(lubridate)  # for mdy_hms()\nlibrary(pander)  # for display\n\n# create table of samples for each station\nsamples_df &lt;- df %&gt;%\n  select(\n    program, \n    Monitoring.Location.ID, \n    Activity.Start.Date.Time,\n    analyte = DEP.Analyte.Name,\n    DEP.Result.Value.Number, \n    DEP.Result.Unit,\n    latitude = Org.Decimal.Latitude,\n    longitude = Org.Decimal.Longitude,\n    sample_depth = Activity.Depth\n    ) %&gt;%\n  # drop any with empty Monitoring.Location.ID\n  filter(!is.na(Monitoring.Location.ID)) %&gt;%\n  # drop any with empty Activity.Start.Date.Time\n  filter(!is.na(Activity.Start.Date.Time)) %&gt;%\n  # parse the \"MM/DD/YYYY HH:MM:SS\" strings into POSIXct\n  mutate(Activity.Start.Date.Time = mdy_hms(\n          Activity.Start.Date.Time,\n          tz = \"UTC\")) %&gt;%\n  distinct()\n\n\n# add statistics for each station\nsample_stats_df &lt;- samples_df %&gt;%\n  group_by(program, Monitoring.Location.ID) %&gt;%\n  reframe(\n    {\n      tmp &lt;- seasonalMannKendallVectorized(\n        Activity.Start.Date.Time,\n        DEP.Result.Value.Number\n      )\n    },\n    n_values = n(),\n    mean = mean(DEP.Result.Value.Number),\n    min = min(DEP.Result.Value.Number),\n    max = max(DEP.Result.Value.Number),\n    coefficient.of.variation = sd(DEP.Result.Value.Number) / mean(DEP.Result.Value.Number)\n  ) %&gt;%\n  mutate(\n    # create column significant_slope\n    significant_slope = ifelse(z &lt;= 0.05, slope, NA_real_),\n    pvalue = z\n  ) %&gt;%\n  # drop unwanted columns added by seasonalMannKendall\n  select(\n    -z,\n    -tau,\n    -chi_square\n  )\n\n\n\n# print(head(sample_stats_df))\n# # display sample_stats_df with pander\n# pander(sample_stats_df)\n\n\n\n\nsave stats to csv\nsample_stats_df %&gt;%\n  write.csv(here(\n    \"data\", \"exports\", \"seasonal-mann-kendall-stats\", paste0(params$analyte, \".csv\")))\n\n\nDownload data for this analyte’s statistics here\n\n\ndisplay with gt\nlibrary(gt)\nlibrary(scales)\nlibrary(tidyselect)  # for all_of()\nlibrary(RColorBrewer) # for brewer.pal()\n\n# ── color_column() ─────────────────────────────────────────────────────────────\n# gt_tbl   : a gt object that you’ve already created (e.g. `sample_stats_df %&gt;% gt()`)\n# df       : the original data.frame (must contain the column you want to color)\n# column   : a string, e.g. \"slope\" or \"n_values\"\n# palette  : a character vector of colours to feed to col_numeric()\n#\ncolor_column &lt;- function(gt_tbl, df, column, \n                         palette = c(\"red\", \"orange\", \"yellow\", \"green\", \"blue\", \"violet\"),\n                         domain = NULL) {\n  # 1) Pull out that column’s numeric values\n  vals &lt;- df[[column]]\n  if (!is.numeric(vals)) {\n    stop(sprintf(\"`%s` is not numeric; data_color() requires a numeric column.\", column))\n  }\n  \n  # 2) Compute its min and max (ignoring NA)\n  min_val &lt;- min(vals, na.rm = TRUE)\n  max_val &lt;- max(vals, na.rm = TRUE)\n  if (is.null(domain)) {\n    domain &lt;- c(min_val, max_val)\n  }\n  \n  # 3) Call data_color() on the gt table for that single column\n  gt_tbl %&gt;%\n    data_color(\n      columns = all_of(column),\n      colors  = col_numeric(\n        palette = palette,\n        domain  = domain\n      )\n    )\n}\nlibrary(dplyr)\nlibrary(gt)\n\n# 1) First build your gt table as usual:\ngt_tbl &lt;- sample_stats_df %&gt;% \n  gt()\n\n# slope blue (-) to red (+) (0 centered)\ntryCatch({\n  min_slope &lt;- min(sample_stats_df$slope,  na.rm = TRUE)\n  max_slope &lt;- max(sample_stats_df$slope,  na.rm = TRUE)\n  max_abs_slope &lt;- max(abs(min_slope), abs(max_slope))\n  gt_tbl &lt;- color_column(\n    gt_tbl, \n    df     = sample_stats_df, \n    column = \"slope\",\n    palette = rev(brewer.pal(11, \"RdBu\")),\n    domain  = c(-max_abs_slope, max_abs_slope)\n  )\n}, error = function(e) {\n  print(\"Error in slope color column\")\n  print(e)\n})\n\ntryCatch({\n  # pvalue Z\n  gt_tbl &lt;- color_column(\n    gt_tbl, \n    df      = sample_stats_df, \n    column  = \"z\", \n    palette = scales::brewer_pal(palette = \"Blues\")(9)\n  )\n}, error = function(e) {\n  print(\"Error in z color column\")\n  print(e)\n})\n\n\n[1] \"Error in z color column\"\n&lt;simpleError in color_column(gt_tbl, df = sample_stats_df, column = \"z\", palette = (scales::brewer_pal(palette = \"Blues\"))(9)): `z` is not numeric; data_color() requires a numeric column.&gt;\n\n\ndisplay with gt\n# slope blue (-) to red (+) (0 centered)\ntryCatch({\n  min_slope &lt;- min(sample_stats_df$significant_slope,  na.rm = TRUE)\n  max_slope &lt;- max(sample_stats_df$significant_slope,  na.rm = TRUE)\n  max_abs_slope &lt;- max(abs(min_slope), abs(max_slope))\n  gt_tbl &lt;- color_column(\n    gt_tbl, \n    df     = sample_stats_df, \n    column = \"significant_slope\",\n    palette = rev(brewer.pal(11, \"RdBu\")),\n    domain  = c(-max_abs_slope, max_abs_slope)\n  )\n}, error = function(e) {\n  print(\"Error in significant_slope color column\")\n  print(e)\n})\n\ntryCatch({\n  # mean values blue to red (0 centered)\n  min_mean &lt;- min(sample_stats_df$mean,  na.rm = TRUE)\n  max_mean &lt;- max(sample_stats_df$mean,  na.rm = TRUE)\n  max_abs_mean &lt;- max(abs(min_mean), abs(max_mean))\n  gt_tbl &lt;- color_column(\n    gt_tbl, \n    df     = sample_stats_df, \n    column = \"mean\",\n    palette = rev(brewer.pal(11, \"RdBu\")),\n    domain  = c(-max_abs_mean, max_abs_mean)\n  )\n}, error = function(e) {\n  print(\"Error in mean color column\")\n  print(e)\n})\n\ntryCatch({\n  # n values white to green\n  gt_tbl &lt;- color_column(\n    gt_tbl, \n    df      = sample_stats_df, \n    column  = \"n_values\", \n    palette = scales::brewer_pal(palette = \"Greens\")(9)\n  )\n}, error = function(e) {\n  print(\"Error in n_values color column\")\n  print(e)\n})\n\ntryCatch({\n  # min\n  gt_tbl &lt;- color_column(\n    gt_tbl, \n    df      = sample_stats_df, \n    column  = \"min\", \n    palette = scales::brewer_pal(palette = \"Blues\")(9)\n  )\n}, error = function(e) {\n  print(\"Error in min color column\")\n  print(e)\n})\n\ntryCatch({\n  # max\n  gt_tbl &lt;- color_column(\n    gt_tbl, \n    df      = sample_stats_df, \n    column  = \"max\", \n    palette = scales::brewer_pal(palette = \"Blues\")(9)\n  )\n}, error = function(e) {\n  print(\"Error in max color column\")\n  print(e)\n})\n\ntryCatch({\n  # coefficient.of.variation\n  gt_tbl &lt;- color_column(\n    gt_tbl, \n    df      = sample_stats_df, \n    column  = \"coefficient.of.variation\", \n    palette = scales::brewer_pal(palette = \"Blues\")(9)\n  )\n}, error = function(e) {\n  print(\"Error in coefficient.of.variation color column\")\n  print(e)\n})\n\n# 4) Render/display:\ngt_tbl\n\n\n\n\n\n\n\n\nprogram\nMonitoring.Location.ID\nslope\nn_values\nmean\nmin\nmax\ncoefficient.of.variation\nsignificant_slope\npvalue\n\n\n\n\nBROWARD\n1\n-1.000000e-01\n54\n1.85370370\n0.450\n4.40\n0.4238610\nNA\n6.256692e-02\n\n\nBROWARD\n10\n-7.857143e-02\n44\n1.14431818\n0.500\n4.80\n0.5850976\n-0.078571429\n4.969757e-03\n\n\nBROWARD\n109\nNA\n4\n1.42500000\n0.700\n2.40\n0.5104831\nNA\nNA\n\n\nBROWARD\n11\n0.000000e+00\n85\n1.81058824\n0.700\n5.30\n0.4252628\nNA\n7.008152e-01\n\n\nBROWARD\n110\n0.000000e+00\n60\n2.70750000\n0.550\n23.00\n1.2257544\nNA\n1.000000e+00\n\n\nBROWARD\n111\n-3.333333e-02\n52\n1.66826923\n0.850\n3.90\n0.4020631\nNA\n2.799536e-01\n\n\nBROWARD\n112\n0.000000e+00\n47\n1.37553191\n0.600\n3.40\n0.4442124\nNA\n5.792942e-01\n\n\nBROWARD\n114\nNA\n25\n5.46400000\n1.800\n10.00\n0.4505902\nNA\nNA\n\n\nBROWARD\n12\n5.000000e-02\n57\n1.56842105\n0.450\n12.00\n1.1794014\nNA\n3.427817e-01\n\n\nBROWARD\n120\n-2.000000e-01\n40\n1.94250000\n0.800\n4.00\n0.3830989\nNA\n1.544237e-01\n\n\nBROWARD\n121\n-5.500000e-01\n71\n2.58985915\n0.080\n16.00\n0.9124215\n-0.550000000\n8.104901e-04\n\n\nBROWARD\n122\n6.250000e-02\n55\n1.48727273\n0.300\n19.00\n1.6538183\nNA\n2.822356e-01\n\n\nBROWARD\n123\n-1.916667e-01\n37\n1.96216216\n0.750\n5.60\n0.5536911\n-0.191666667\n4.520135e-02\n\n\nBROWARD\n124\n-1.000000e-01\n73\n2.50684932\n1.000\n5.90\n0.3832577\nNA\n1.591148e-01\n\n\nBROWARD\n125\n-2.000000e-02\n39\n0.85512821\n0.450\n1.50\n0.2661932\nNA\n6.060197e-02\n\n\nBROWARD\n126\nNA\n11\n2.61818182\n0.600\n7.20\n0.7682342\nNA\nNA\n\n\nBROWARD\n127\nNA\n4\n0.82500000\n0.600\n1.10\n0.2687704\nNA\nNA\n\n\nBROWARD\n128\n0.000000e+00\n23\n1.59130435\n0.900\n2.60\n0.2381000\nNA\n8.551321e-01\n\n\nBROWARD\n129\n4.000000e-02\n23\n1.01956522\n0.550\n1.90\n0.3605968\nNA\n5.030014e-01\n\n\nBROWARD\n13\nNA\n7\n1.27142857\n0.800\n1.80\n0.2861678\nNA\nNA\n\n\nBROWARD\n14\n6.666667e-02\n52\n2.56634615\n0.850\n20.00\n1.0958490\nNA\n1.422132e-01\n\n\nBROWARD\n15\n-1.375000e-01\n64\n1.41796875\n0.600\n3.00\n0.4057282\nNA\n6.730764e-02\n\n\nBROWARD\n16\n-1.250000e-01\n60\n2.90250000\n0.850\n8.00\n0.5034898\nNA\n2.686170e-01\n\n\nBROWARD\n17\n-2.000000e-02\n43\n2.29069767\n0.500\n14.00\n0.9195220\nNA\n7.186315e-01\n\n\nBROWARD\n18\nNA\n7\n1.60714286\n0.950\n2.70\n0.4136836\nNA\nNA\n\n\nBROWARD\n19\n-1.000000e-01\n63\n1.47777778\n0.550\n4.80\n0.5169549\n-0.100000000\n2.461144e-02\n\n\nBROWARD\n2\n-5.000000e-02\n49\n1.63571429\n0.500\n11.00\n0.9877904\nNA\n7.160048e-01\n\n\nBROWARD\n20\n-1.250000e-01\n67\n1.73805970\n0.200\n7.30\n0.6409630\nNA\n9.354842e-02\n\n\nBROWARD\n21\nNA\n17\n2.70000000\n0.550\n18.00\n1.6301951\nNA\nNA\n\n\nBROWARD\n22\n0.000000e+00\n50\n1.50300000\n0.500\n6.60\n0.6614006\nNA\n9.127706e-01\n\n\nBROWARD\n23\n-5.000000e-02\n85\n1.31411765\n0.400\n4.80\n0.5862354\n-0.050000000\n1.765450e-03\n\n\nBROWARD\n24\n-1.000000e-01\n55\n2.06363636\n0.800\n17.00\n1.0367609\nNA\n8.719706e-02\n\n\nBROWARD\n25\n0.000000e+00\n51\n1.61666667\n0.700\n3.90\n0.4503019\nNA\n1.000000e+00\n\n\nBROWARD\n26\n-1.600000e-01\n50\n2.15800000\n0.900\n11.00\n0.7914068\n-0.160000000\n2.787437e-02\n\n\nBROWARD\n27\nNA\n29\n2.96896552\n0.800\n9.20\n0.6215895\nNA\nNA\n\n\nBROWARD\n28\n-1.800000e-01\n58\n2.52586207\n0.750\n9.40\n0.6904248\nNA\n1.982564e-01\n\n\nBROWARD\n29\n-6.666667e-02\n58\n2.53103448\n0.650\n6.20\n0.4562593\nNA\n3.373557e-01\n\n\nBROWARD\n3\n4.000000e-02\n57\n1.76842105\n0.450\n8.40\n0.7878642\nNA\n5.442896e-01\n\n\nBROWARD\n31\n-1.666667e-02\n51\n1.03333333\n0.400\n7.90\n1.0971679\nNA\n5.135251e-01\n\n\nBROWARD\n32\n-7.500000e-02\n57\n1.16578947\n0.200\n2.50\n0.5565099\nNA\n1.658066e-01\n\n\nBROWARD\n33\n-6.000000e-02\n52\n1.58557692\n0.500\n4.90\n0.4462825\nNA\n5.942792e-02\n\n\nBROWARD\n34\n-9.000000e-02\n51\n0.80784314\n0.150\n3.50\n0.6946803\nNA\n2.818181e-01\n\n\nBROWARD\n35\n-4.500000e-02\n78\n0.80000000\n0.250\n2.00\n0.4442316\nNA\n5.374304e-02\n\n\nBROWARD\n36\n-2.857143e-02\n48\n1.08541667\n0.300\n2.90\n0.5376252\nNA\n5.883243e-01\n\n\nBROWARD\n37\n-1.571429e-01\n54\n1.43333333\n0.500\n3.20\n0.4387956\n-0.157142857\n2.090521e-02\n\n\nBROWARD\n38\n-7.000000e-02\n50\n1.31300000\n0.300\n7.00\n0.7519874\n-0.070000000\n4.413468e-02\n\n\nBROWARD\n39\n-1.000000e-01\n54\n1.65648148\n0.450\n4.40\n0.5121481\nNA\n6.890881e-02\n\n\nBROWARD\n4\n-2.200000e-01\n88\n2.10852273\n0.450\n9.60\n0.7755337\nNA\n5.702298e-02\n\n\nBROWARD\n40\n-1.333333e-01\n99\n2.13939394\n0.400\n7.00\n0.5666924\n-0.133333333\n1.258581e-02\n\n\nBROWARD\n41\n-5.000000e-02\n53\nNaN\nNaN\nNaN\nNA\nNA\n2.954554e-01\n\n\nBROWARD\n47\nNA\n5\n1.98000000\n0.700\n3.80\n0.6637140\nNA\nNA\n\n\nBROWARD\n49\nNA\n17\n1.51470588\n0.700\n2.40\n0.3325154\nNA\nNA\n\n\nBROWARD\n5\n-3.333333e-02\n50\n1.01300000\n0.200\n2.30\n0.3873422\nNA\n1.178509e-01\n\n\nBROWARD\n6\n3.000000e-02\n48\n0.79791667\n0.200\n2.10\n0.4683861\n0.030000000\n3.603169e-02\n\n\nBROWARD\n64\n-6.666667e-02\n76\n3.05986842\n0.800\n8.30\n0.5162519\nNA\n4.261205e-01\n\n\nBROWARD\n7\n1.428571e-02\n48\n0.91354167\n0.450\n2.40\n0.5380113\nNA\n2.866022e-01\n\n\nBROWARD\n8\n0.000000e+00\n49\n0.83265306\n0.350\n1.90\n0.4621485\nNA\n8.010594e-01\n\n\nBROWARD\n89\n-3.000000e-02\n55\n1.04272727\n0.400\n4.00\n0.7096977\nNA\n3.888854e-01\n\n\nBROWARD\n90\nNA\n21\n1.95714286\n0.600\n7.60\n0.7784758\nNA\nNA\n\n\nDEP\nBAK020\n-6.250000e-02\n87\n0.92873563\n0.200\n3.40\n0.5578961\n-0.062500000\n8.215950e-03\n\n\nDEP\nBAK021\n-5.000000e-02\n87\n0.66436782\n0.200\n3.90\n0.9063106\n-0.050000000\n1.704196e-02\n\n\nDEP\nBAK022\n-7.500000e-02\n87\n0.67758621\n0.150\n3.50\n0.8682941\n-0.075000000\n3.357223e-03\n\n\nDEP\nBAK023\n-2.500000e-02\n87\n0.70402299\n0.150\n3.40\n0.6762974\nNA\n1.463734e-01\n\n\nDEP\nBAK024\n-3.333333e-02\n87\n0.38218391\n0.150\n1.30\n0.5928408\n-0.033333333\n5.080280e-04\n\n\nDEP\nBAK025\n-5.000000e-02\n87\n0.47356322\n0.100\n2.40\n0.7993778\n-0.050000000\n3.057204e-04\n\n\nDEP\nBAK026\n-2.500000e-02\n87\n0.36206897\n0.150\n1.40\n0.6278949\n-0.025000000\n6.920318e-04\n\n\nDEP\nBAK027\n-3.750000e-02\n87\n0.38333333\n0.100\n1.40\n0.6184400\n-0.037500000\n1.418608e-04\n\n\nDEP\nBAK028\n-2.083333e-02\n87\n0.32241379\n0.100\n1.10\n0.6019061\n-0.020833333\n3.939346e-03\n\n\nDEP\nBAK029\n-3.000000e-02\n87\n0.30747126\n0.100\n1.20\n0.5744176\n-0.030000000\n3.884167e-04\n\n\nDEP\nBAK030\n-2.071429e-02\n87\n0.28390805\n0.100\n1.20\n0.5706689\n-0.020714286\n2.603282e-03\n\n\nDEP\nBAK031\n0.000000e+00\n87\n0.25114943\n0.100\n1.40\n0.6808911\nNA\n1.410794e-01\n\n\nDEP\nBAK032\n0.000000e+00\n87\n0.24540230\n0.100\n1.00\n0.5892321\nNA\n9.066030e-02\n\n\nDEP\nBAK033\n0.000000e+00\n87\n0.24022989\n0.100\n0.85\n0.5919676\nNA\n2.103480e-01\n\n\nDEP\nBOC070\n-2.500000e-02\n90\n0.81833333\n0.150\n3.00\n0.6074487\nNA\n2.673588e-01\n\n\nDEP\nBOC071\n-3.333333e-02\n93\n0.63225806\n0.150\n2.50\n0.7888062\nNA\n6.693129e-02\n\n\nDEP\nBOC072\n-2.500000e-02\n88\n0.35909091\n0.100\n1.90\n0.7674711\n-0.025000000\n6.599418e-03\n\n\nDEP\nBOC073\n-1.547619e-02\n88\n0.47670455\n0.100\n2.20\n0.8226498\nNA\n3.676398e-01\n\n\nDEP\nBOC074\n-2.500000e-02\n88\n0.42556818\n0.100\n2.30\n0.8000342\n-0.025000000\n1.126581e-02\n\n\nDEP\nBOC075\n-2.500000e-02\n88\n0.34659091\n0.100\n2.80\n1.0650138\n-0.025000000\n2.507067e-03\n\n\nDEP\nBOC076\n-1.250000e-02\n88\n0.48295455\n0.100\n2.30\n0.7954393\nNA\n3.254336e-01\n\n\nDEP\nBOC077\n-2.000000e-02\n88\n0.43181818\n0.100\n3.50\n1.0178188\n-0.020000000\n4.449822e-02\n\n\nDEP\nBOC078\n-1.666667e-02\n88\n0.39772727\n0.100\n3.10\n1.0401494\n-0.016666667\n9.763882e-03\n\n\nDEP\nBOC079\n-2.500000e-02\n88\n0.44602273\n0.100\n3.50\n1.0398990\n-0.025000000\n9.415023e-03\n\n\nDEP\nBOC080\n-1.250000e-02\n88\n0.23863636\n0.100\n1.60\n0.7414439\n-0.012500000\n9.511348e-03\n\n\nDEP\nBOC081\n-1.000000e-02\n88\n0.20886364\n0.080\n0.95\n0.6239349\n-0.010000000\n2.326096e-02\n\n\nDEP\nBOC082\n-1.250000e-02\n88\n0.22136364\n0.080\n1.00\n0.6210352\n-0.012500000\n4.515160e-03\n\n\nDEP\nBOC083\n-1.250000e-02\n88\n0.23954545\n0.080\n1.10\n0.6841661\n-0.012500000\n2.342355e-02\n\n\nDEP\nBOY090\n0.000000e+00\n87\n1.24252874\n0.200\n2.90\n0.4755596\nNA\n9.008654e-01\n\n\nDEP\nBOY091\n-1.428571e-02\n87\n0.50804598\n0.100\n1.90\n0.6962114\nNA\n4.590445e-01\n\n\nDEP\nBOY092\n-1.666667e-02\n91\n0.46813187\n0.100\n7.80\n1.7922257\n-0.016666667\n2.341260e-02\n\n\nDEP\nBOY093\n0.000000e+00\n87\n0.61666667\n0.100\n2.70\n0.9170499\nNA\n9.333746e-01\n\n\nDEP\nBOY094\n-8.333333e-03\n87\n0.25977011\n0.100\n1.10\n0.6621202\nNA\n6.321426e-02\n\n\nDEP\nBOY095\n-1.125000e-02\n87\n0.16873563\n0.080\n0.40\n0.4649646\n-0.011250000\n3.946770e-04\n\n\nDEP\nBOY096\n-1.666667e-02\n87\n0.21264368\n0.100\n0.75\n0.5557589\n-0.016666667\n4.185385e-03\n\n\nDEP\nBOY097\n-1.250000e-02\n87\n0.17931034\n0.100\n0.55\n0.4491264\n-0.012500000\n4.058464e-04\n\n\nDEP\nBOY098\n-1.666667e-02\n87\n0.18793103\n0.100\n0.55\n0.5034415\n-0.016666667\n1.970677e-04\n\n\nDEP\nBOY099\n-1.666667e-02\n87\n0.18965517\n0.100\n0.55\n0.4673688\n-0.016666667\n4.208205e-05\n\n\nDEP\nBOY100\n-1.250000e-02\n87\n0.20459770\n0.100\n0.80\n0.6683667\n-0.012500000\n2.967323e-04\n\n\nDEP\nBOY101\n-2.500000e-02\n87\n0.32068966\n0.100\n1.30\n0.7833865\n-0.025000000\n7.643185e-03\n\n\nDEP\nBOYPB4\nNA\n1\n0.10000000\n0.100\n0.10\nNA\nNA\nNA\n\n\nDEP\nGOC001\n-5.000000e-02\n72\n0.57569444\n0.200\n3.20\n0.7243087\n-0.050000000\n5.380711e-04\n\n\nDEP\nGOC002\n-6.666667e-02\n71\n0.83239437\n0.200\n4.70\n0.7344907\n-0.066666667\n5.353599e-03\n\n\nDEP\nGOC003\n-5.000000e-02\n71\n0.76901408\n0.200\n5.30\n0.8438341\n-0.050000000\n4.252248e-02\n\n\nDEP\nGOC004\n-5.000000e-02\n71\n0.56971831\n0.150\n3.80\n0.9273083\n-0.050000000\n2.258126e-02\n\n\nDEP\nGOC005\n-1.666667e-02\n71\n0.34295775\n0.100\n2.10\n0.7656417\nNA\n1.369801e-01\n\n\nDEP\nGOC006\n-2.500000e-02\n71\n0.31971831\n0.100\n1.20\n0.5622994\n-0.025000000\n1.129897e-02\n\n\nDEP\nGOC007\n-1.250000e-02\n71\n0.32676056\n0.150\n2.60\n0.9180419\nNA\n1.689020e-01\n\n\nDEP\nGOC008\n-1.666667e-02\n71\n0.38591549\n0.150\n2.30\n0.8677985\n-0.016666667\n8.754819e-03\n\n\nDEP\nGOC009\n0.000000e+00\n71\n0.28873239\n0.100\n2.40\n1.0643601\nNA\n2.962699e-01\n\n\nDEP\nGOC010\n-1.666667e-02\n71\n0.25140845\n0.100\n1.90\n0.9649666\n-0.016666667\n2.710864e-02\n\n\nDEP\nGOC011\n-1.250000e-02\n71\n0.29436620\n0.100\n0.90\n0.5746138\n-0.012500000\n3.608210e-02\n\n\nDEP\nGOC012\n0.000000e+00\n71\n0.25394366\n0.080\n1.20\n0.6909825\nNA\n6.100025e-01\n\n\nDEP\nGOC013\n-1.000000e-02\n71\n0.21690141\n0.100\n0.60\n0.5739144\nNA\n8.138016e-02\n\n\nDEP\nGOC014\n1.666667e-02\n71\n0.53200000\n0.122\n2.00\n0.6710996\nNA\n3.987723e-01\n\n\nDEP\nGOC015\n0.000000e+00\n71\n0.34084507\n0.100\n0.70\n0.4841924\nNA\n3.311375e-01\n\n\nDEP\nHIL050\n-1.666667e-02\n89\n0.61123596\n0.150\n2.20\n0.5976590\n-0.016666667\n9.122893e-03\n\n\nDEP\nHIL051\n-1.666667e-02\n95\n0.36157895\n0.100\n1.10\n0.5920163\nNA\n8.263137e-02\n\n\nDEP\nHIL052\n-1.666667e-02\n88\n0.56704545\n0.200\n1.80\n0.6070715\nNA\n1.518994e-01\n\n\nDEP\nHIL053\n-1.666667e-02\n88\n0.32215909\n0.100\n1.10\n0.6348605\n-0.016666667\n6.603519e-03\n\n\nDEP\nHIL054\n-2.000000e-02\n88\n0.33125000\n0.100\n1.20\n0.7313897\n-0.020000000\n1.912320e-03\n\n\nDEP\nHIL055\n-1.666667e-02\n88\n0.34261364\n0.100\n1.30\n0.6727962\n-0.016666667\n1.527432e-02\n\n\nDEP\nHIL056\n-1.666667e-02\n88\n0.31931818\n0.100\n1.30\n0.7008393\n-0.016666667\n4.547810e-04\n\n\nDEP\nHIL057\n-1.125000e-02\n88\n0.43238636\n0.100\n2.40\n0.7882080\nNA\n3.265141e-01\n\n\nDEP\nHIL058\n-9.166667e-03\n88\n0.46931818\n0.100\n3.00\n0.9363874\nNA\n1.698708e-01\n\n\nDEP\nHIL059\n-2.000000e-02\n88\n0.34829545\n0.100\n1.20\n0.5886668\n-0.020000000\n4.147536e-03\n\n\nDEP\nHIL060\n-1.666667e-02\n88\n0.23579545\n0.100\n1.80\n0.8978897\n-0.016666667\n3.955634e-03\n\n\nDEP\nHIL061\n-1.250000e-02\n88\n0.20511364\n0.100\n1.00\n0.7646680\n-0.012500000\n1.000549e-04\n\n\nDEP\nHIL062\n-1.666667e-02\n88\n0.21534091\n0.100\n0.90\n0.6301103\n-0.016666667\n7.298868e-05\n\n\nDEP\nHIL063\n-1.250000e-02\n88\n0.18613636\n0.080\n0.50\n0.4912715\n-0.012500000\n1.269768e-05\n\n\nDEP\nILW110\n0.000000e+00\n87\n0.68218391\n0.100\n8.30\n1.4199476\nNA\n5.058456e-01\n\n\nDEP\nILW111\n0.000000e+00\n87\n0.77183908\n0.100\n12.00\n2.1222119\nNA\n5.854318e-01\n\n\nDEP\nILW112\n-2.500000e-02\n87\n0.44770115\n0.100\n13.00\n3.1638761\n-0.025000000\n2.644779e-05\n\n\nDEP\nILW113\n-8.333333e-03\n87\n0.47528736\n0.100\n5.30\n1.7207605\nNA\n1.075838e-01\n\n\nDEP\nILW114\n-1.666667e-02\n87\n0.47758621\n0.100\n9.30\n2.2523181\n-0.016666667\n1.217932e-03\n\n\nDEP\nILW115\n-2.750000e-02\n88\n0.50056818\n0.100\n8.80\n2.1446002\n-0.027500000\n1.233762e-03\n\n\nDEP\nILW116\n-3.333333e-02\n87\n0.53563218\n0.100\n6.60\n1.6236392\n-0.033333333\n8.730835e-04\n\n\nDEP\nILW117\n-8.333333e-03\n87\n0.21954023\n0.100\n1.80\n1.0444591\n-0.008333333\n5.020951e-03\n\n\nDEP\nILW118\n-2.500000e-02\n87\n0.52413793\n0.100\n9.30\n2.1223920\n-0.025000000\n9.758571e-04\n\n\nDEP\nILW119\n-1.458333e-02\n88\n0.44318182\n0.100\n10.00\n2.3981811\n-0.014583333\n7.576214e-03\n\n\nDEP\nJUP120\n3.333333e-02\n87\n1.90172414\n0.250\n19.00\n1.1039950\nNA\n3.445087e-01\n\n\nDEP\nJUP121\n-1.125000e-02\n87\n1.03965517\n0.100\n13.00\n1.6956853\nNA\n5.080380e-01\n\n\nDEP\nJUP122\n7.000000e-02\n87\n1.77586207\n0.200\n17.00\n1.2418586\nNA\n2.179669e-01\n\n\nDEP\nJUP123\n1.000000e-01\n87\n1.59310345\n0.150\n20.00\n1.4515494\n0.100000000\n2.375100e-03\n\n\nDEP\nJUP124\n-1.666667e-02\n87\n0.49885057\n0.100\n7.90\n2.3136947\n-0.016666667\n8.733324e-03\n\n\nDEP\nJUP125\n-1.666667e-02\n87\n0.36747126\n0.100\n5.40\n1.6969889\n-0.016666667\n4.307739e-02\n\n\nDEP\nJUP126\n-1.547619e-02\n87\n0.42758621\n0.100\n6.50\n1.8981145\n-0.015476190\n4.886524e-02\n\n\nDEP\nJUP127\n-1.666667e-02\n87\n0.46344828\n0.100\n7.00\n1.8447342\nNA\n1.053641e-01\n\n\nDEP\nJUP128\n-1.000000e-02\n87\n0.39908046\n0.100\n4.20\n1.4739901\nNA\n1.440506e-01\n\n\nDEP\nJUP129\n0.000000e+00\n87\n0.36264368\n0.100\n4.10\n1.4609963\nNA\n1.050570e-01\n\n\nDEP\nPEV040\n-1.904762e-02\n87\n0.74885057\n0.150\n2.70\n0.6412328\nNA\n4.322603e-01\n\n\nDEP\nPEV041\n0.000000e+00\n87\n0.67990805\n0.100\n2.30\n0.6524184\nNA\n9.670303e-01\n\n\nDEP\nPEV042\n-3.333333e-02\n87\n0.60114943\n0.100\n4.00\n0.8878720\nNA\n6.920081e-02\n\n\nDEP\nPEV043\n-2.500000e-02\n88\n0.51477273\n0.100\n2.00\n0.7639757\nNA\n1.824795e-01\n\n\nDEP\nPEV044\n-1.250000e-02\n88\n0.33068182\n0.100\n1.40\n0.7490057\nNA\n8.779712e-02\n\n\nDEP\nPEV045\n-1.125000e-02\n87\n0.41724138\n0.100\n2.20\n0.7881062\nNA\n1.936118e-01\n\n\nDEP\nPEV046\n-5.000000e-02\n87\n0.75862069\n0.150\n5.40\n1.0354138\n-0.050000000\n1.660782e-02\n\n\nDEP\nPEV047\n-1.666667e-02\n87\n0.38103448\n0.100\n1.70\n0.7410175\nNA\n9.586852e-02\n\n\nDEP\nPEV048\n-1.125000e-02\n87\n0.42413793\n0.100\n2.70\n0.9051193\nNA\n1.674007e-01\n\n\nDEP\nPEV049\n-2.500000e-02\n87\n0.32126437\n0.100\n1.90\n0.9033422\n-0.025000000\n2.879682e-03\n\n\nDEP\nPEV050\n0.000000e+00\n87\n0.46896552\n0.150\n8.00\n1.9176874\nNA\n7.045449e-01\n\n\nDEP\nPEV051\n-9.166667e-03\n87\n0.26321839\n0.100\n1.00\n0.6728203\n-0.009166667\n3.599301e-02\n\n\nDEP\nPEV052\n-1.666667e-02\n87\n0.24655172\n0.100\n2.40\n1.0577481\n-0.016666667\n3.575969e-04\n\n\nDEP\nPEV053\n-1.666667e-02\n87\n0.23367816\n0.080\n2.00\n0.9622514\n-0.016666667\n6.590898e-04\n\n\nDEP\nSTL161\n2.000000e-01\n72\n3.70138889\n0.900\n12.00\n0.5296632\nNA\n1.747347e-01\n\n\nDEP\nSTL162\n1.875000e-01\n73\n2.52397260\n0.350\n17.00\n1.0520279\nNA\n6.226953e-02\n\n\nDEP\nSTL163\n1.562500e-01\n72\n2.17430556\n0.200\n21.00\n1.4286024\n0.156250000\n1.958043e-02\n\n\nDEP\nSTL164\n6.666667e-02\n71\n2.15422535\n0.100\n17.00\n1.4929345\nNA\n1.352394e-01\n\n\nDEP\nSTL165\n1.000000e-01\n72\n1.56458333\n0.150\n17.00\n1.6765671\nNA\n1.013917e-01\n\n\nDEP\nSTL166\n1.250000e-01\n72\n2.15347222\n0.200\n18.00\n1.2172253\nNA\n8.926727e-02\n\n\nDEP\nSTL167\n0.000000e+00\n72\n1.38958333\n0.150\n22.00\n2.0626988\nNA\n8.271025e-01\n\n\nDEP\nSTL168\n0.000000e+00\n72\n1.03391667\n0.100\n11.00\n1.6542923\nNA\n1.000000e+00\n\n\nDEP\nSTL169\n1.083333e-01\n72\n2.84097222\n0.400\n21.00\n1.1067623\nNA\n2.111788e-01\n\n\nDEP\nSTL170\n0.000000e+00\n72\n1.09097222\n0.150\n7.30\n1.3117896\nNA\n9.561032e-01\n\n\nDEP\nSTL171\n1.875000e-01\n72\n2.32569444\n0.250\n15.00\n1.0483040\n0.187500000\n2.281641e-02\n\n\nDEP\nSTL172\n5.000000e-03\n72\n1.19722222\n0.100\n9.10\n1.5113335\nNA\n7.849390e-01\n\n\nDEP\nSTLMC1\nNA\n1\n4.50000000\n4.500\n4.50\nNA\nNA\nNA\n\n\nDERM_BBWQ\nAC01\n0.000000e+00\n85\n0.66470588\n0.300\n1.60\n0.4038836\nNA\n7.126902e-02\n\n\nDERM_BBWQ\nAC02\n-2.000000e-01\n19\n0.60526316\n0.300\n1.80\n0.5918014\nNA\n4.496918e-01\n\n\nDERM_BBWQ\nAC03\n3.450000e-01\n81\n3.88888889\n1.300\n16.30\n0.5919454\n0.345000000\n5.282093e-05\n\n\nDERM_BBWQ\nAC06\n-5.714286e-02\n85\n9.37647059\n1.200\n47.00\n0.7646345\nNA\n7.711841e-01\n\n\nDERM_BBWQ\nAR03\n0.000000e+00\n85\n1.03176471\n0.400\n3.60\n0.5899688\nNA\n6.418514e-01\n\n\nDERM_BBWQ\nBB01A\n-1.000000e-01\n19\n0.84736842\n0.300\n1.30\n0.3056408\nNA\n1.000000e+00\n\n\nDERM_BBWQ\nBB02\n0.000000e+00\n85\n0.89529412\n0.200\n1.70\n0.3139909\nNA\n3.939119e-01\n\n\nDERM_BBWQ\nBB04\n0.000000e+00\n87\n1.14827586\n0.100\n3.70\n0.4536588\nNA\n4.810140e-01\n\n\nDERM_BBWQ\nBB05A\n2.500000e-02\n85\n1.10823529\n0.400\n5.40\n0.5766367\nNA\n1.789892e-01\n\n\nDERM_BBWQ\nBB08\n0.000000e+00\n75\n1.07200000\n0.300\n4.20\n0.6399906\nNA\n7.601680e-01\n\n\nDERM_BBWQ\nBB09\n-2.000000e-02\n87\n1.02528736\n0.400\n3.60\n0.5240157\nNA\n3.660272e-01\n\n\nDERM_BBWQ\nBB10\n-7.500000e-02\n76\n0.96973684\n0.300\n3.60\n0.6122791\n-0.075000000\n1.692063e-03\n\n\nDERM_BBWQ\nBB11\n5.000000e-02\n87\n2.02873563\n0.600\n7.20\n0.5113670\nNA\n1.657102e-01\n\n\nDERM_BBWQ\nBB13\nNA\n2\n0.90000000\n0.900\n0.90\n0.0000000\nNA\nNA\n\n\nDERM_BBWQ\nBB13A\n3.000000e-01\n39\n1.84102564\n0.700\n5.30\n0.4929256\n0.300000000\n2.560113e-02\n\n\nDERM_BBWQ\nBB14\n-6.000000e-02\n85\n1.23294118\n0.400\n5.70\n0.7238628\n-0.060000000\n8.794399e-04\n\n\nDERM_BBWQ\nBB15\n1.500000e-01\n41\n1.88048780\n0.600\n5.40\n0.5363069\nNA\n9.191105e-02\n\n\nDERM_BBWQ\nBB15A\n1.000000e-01\n74\n3.36216216\n0.800\n30.50\n1.3911162\n0.100000000\n1.854304e-02\n\n\nDERM_BBWQ\nBB17\n2.500000e-02\n88\n1.57272727\n0.600\n5.50\n0.5817758\nNA\n1.484092e-01\n\n\nDERM_BBWQ\nBB18\n-6.666667e-02\n76\n1.27105263\n0.500\n2.80\n0.4033840\n-0.066666667\n3.203084e-03\n\n\nDERM_BBWQ\nBB22\n3.333333e-02\n87\n1.00459770\n0.400\n2.70\n0.4050285\n0.033333333\n4.706803e-02\n\n\nDERM_BBWQ\nBB24\n0.000000e+00\n86\n0.95232558\n0.300\n5.10\n0.7809463\nNA\n5.880482e-01\n\n\nDERM_BBWQ\nBB25\n1.000000e-01\n31\n1.02258065\n0.400\n4.30\n0.7764897\nNA\n1.910759e-01\n\n\nDERM_BBWQ\nBB26\n7.500000e-02\n63\n1.14920635\n0.400\n14.40\n1.5067558\n0.075000000\n1.200542e-03\n\n\nDERM_BBWQ\nBB28\n2.250000e-01\n32\n1.07187500\n0.200\n3.10\n0.6111916\nNA\n1.463498e-01\n\n\nDERM_BBWQ\nBB31\n1.000000e-01\n85\n1.18117647\n0.300\n13.20\n1.2904821\n0.100000000\n2.642381e-02\n\n\nDERM_BBWQ\nBB32\n1.750000e-01\n53\n1.68301887\n0.300\n6.50\n0.5898971\nNA\n1.133455e-01\n\n\nDERM_BBWQ\nBB34\n0.000000e+00\n87\n0.90344828\n0.300\n4.80\n1.0171908\nNA\n4.322603e-01\n\n\nDERM_BBWQ\nBB37\n5.000000e-02\n84\n0.78214286\n0.200\n5.40\n0.8726174\n0.050000000\n5.213757e-04\n\n\nDERM_BBWQ\nBB38\n1.250000e-01\n85\n1.57411765\n0.400\n14.70\n1.3009753\n0.125000000\n5.174900e-07\n\n\nDERM_BBWQ\nBB39A\n2.250000e-02\n87\n0.82528736\n0.100\n12.10\n1.6391790\nNA\n5.201068e-02\n\n\nDERM_BBWQ\nBB41\n2.000000e-02\n87\n0.88850575\n0.300\n12.40\n1.5326932\nNA\n5.380287e-02\n\n\nDERM_BBWQ\nBB47\n0.000000e+00\n85\n0.68000000\n0.200\n7.40\n1.3298944\nNA\n1.353341e-01\n\n\nDERM_BBWQ\nBB48\n0.000000e+00\n76\n0.85131579\n0.300\n4.50\n0.8916002\nNA\n9.599217e-01\n\n\nDERM_BBWQ\nBB50\n7.142857e-02\n85\n1.70117647\n0.300\n11.30\n0.9850667\nNA\n5.826180e-02\n\n\nDERM_BBWQ\nBB51\n4.285714e-02\n85\n0.81294118\n0.300\n2.10\n0.4183500\n0.042857143\n6.706276e-03\n\n\nDERM_BBWQ\nBB53\nNA\n1\n0.70000000\n0.700\n0.70\nNA\nNA\nNA\n\n\nDERM_BBWQ\nBBKB1\n1.000000e-01\n53\n1.63584906\n0.300\n8.30\n0.7315131\nNA\n2.753011e-01\n\n\nDERM_BBWQ\nBBMB1\n3.333333e-02\n87\n1.27011494\n0.400\n3.20\n0.5396483\nNA\n8.492514e-02\n\n\nDERM_BBWQ\nBBMB2\n-2.666667e-02\n76\n2.04342105\n1.000\n5.50\n0.3776622\nNA\n5.170858e-01\n\n\nDERM_BBWQ\nBBMB3\n2.000000e-01\n75\n2.43333333\n0.100\n5.90\n0.5361797\n0.200000000\n2.673140e-03\n\n\nDERM_BBWQ\nBBMB4\n2.708333e-01\n76\n3.78421053\n0.700\n15.50\n0.7211692\n0.270833333\n2.674638e-02\n\n\nDERM_BBWQ\nBBOR1\n0.000000e+00\n49\n1.21428571\n0.100\n19.60\n2.2592090\nNA\n1.000000e+00\n\n\nDERM_BBWQ\nBBOR2\n1.000000e-01\n47\n1.09574468\n0.400\n7.80\n1.2504487\n0.100000000\n3.333868e-02\n\n\nDERM_BBWQ\nBBY1\n5.000000e-01\n19\n2.21052632\n1.000\n5.10\n0.4452614\nNA\n1.305700e-01\n\n\nDERM_BBWQ\nBBY4\n0.000000e+00\n20\n0.71500000\n0.300\n1.80\n0.6176473\nNA\n1.000000e+00\n\n\nDERM_BBWQ\nBISC101\n2.000000e-02\n87\n0.98505747\n0.100\n15.30\n1.8764530\nNA\n2.013572e-01\n\n\nDERM_BBWQ\nBISC121\n6.000000e-02\n85\n0.74588235\n0.300\n3.40\n0.6931200\n0.060000000\n6.945052e-04\n\n\nDERM_BBWQ\nBISC122\n2.500000e-02\n85\n0.82588235\n0.300\n10.50\n1.4745913\n0.025000000\n6.471568e-03\n\n\nDERM_BBWQ\nBISC127\n0.000000e+00\n87\n0.88045977\n0.200\n17.60\n2.2535637\nNA\n5.221790e-01\n\n\nDERM_BBWQ\nBL01\n1.000000e-01\n33\n2.62424242\n0.800\n20.80\n1.3251519\nNA\n5.182416e-01\n\n\nDERM_BBWQ\nBL02\n2.000000e-01\n31\n3.00967742\n0.500\n44.80\n2.6054665\nNA\n1.910759e-01\n\n\nDERM_BBWQ\nBL03\n0.000000e+00\n87\n0.96091954\n0.400\n5.30\n0.8059988\nNA\n4.572627e-01\n\n\nDERM_BBWQ\nBL04\n1.000000e-01\n21\n0.76666667\n0.400\n1.20\n0.3203849\n0.100000000\n4.122683e-02\n\n\nDERM_BBWQ\nBL05\n2.000000e-01\n21\n0.91904762\n0.300\n3.20\n0.6452057\nNA\n7.709987e-02\n\n\nDERM_BBWQ\nBL06\n0.000000e+00\n76\n0.90657895\n0.300\n2.40\n0.5041417\nNA\n6.887876e-01\n\n\nDERM_BBWQ\nBL12\n8.333333e-03\n82\n1.18292683\n0.100\n18.50\n1.7368891\nNA\n5.645974e-01\n\n\nDERM_BBWQ\nBS01\n0.000000e+00\n87\n1.13103448\n0.300\n4.90\n0.6221705\nNA\n1.000000e+00\n\n\nDERM_BBWQ\nBS04\n7.500000e-02\n87\n1.49080460\n0.100\n13.10\n1.0586011\n0.075000000\n2.624598e-03\n\n\nDERM_BBWQ\nBS07\n1.000000e-01\n32\n1.43750000\n0.400\n2.50\n0.3705350\nNA\n3.717303e-01\n\n\nDERM_BBWQ\nBS08\n-5.000000e-02\n20\n1.41000000\n0.400\n3.30\n0.5802478\nNA\n1.000000e+00\n\n\nDERM_BBWQ\nBS09\n2.000000e-01\n20\n1.13500000\n0.500\n2.50\n0.4655759\nNA\n4.496918e-01\n\n\nDERM_BBWQ\nBS10\n2.000000e-02\n85\n1.06941176\n0.100\n13.10\n1.3041936\nNA\n1.135822e-01\n\n\nDERM_BBWQ\nBS11\n1.004167e+00\n76\n10.52500000\n0.400\n106.80\n1.3352764\n1.004166667\n1.797204e-06\n\n\nDERM_BBWQ\nCD01A\n0.000000e+00\n84\n1.20119048\n0.300\n13.40\n1.5151103\nNA\n8.956653e-01\n\n\nDERM_BBWQ\nCD02\n0.000000e+00\n85\n0.59529412\n0.100\n2.50\n0.5812823\nNA\n1.253760e-01\n\n\nDERM_BBWQ\nCD03A\n2.000000e-01\n19\n0.66315789\n0.200\n1.50\n0.4120790\nNA\n4.496918e-01\n\n\nDERM_BBWQ\nCD04A\n1.500000e-01\n20\n0.92000000\n0.400\n1.40\n0.3146349\nNA\n7.236736e-01\n\n\nDERM_BBWQ\nCD05\n3.333333e-02\n87\n0.99885057\n0.400\n6.30\n1.0905774\n0.033333333\n2.416026e-02\n\n\nDERM_BBWQ\nCD09\n2.000000e-02\n81\n3.31604938\n0.300\n152.00\n5.1185323\nNA\n1.562179e-01\n\n\nDERM_BBWQ\nCG01\n0.000000e+00\n87\n0.99770115\n0.500\n3.50\n0.4636111\nNA\n4.285551e-01\n\n\nDERM_BBWQ\nCG02\n2.500000e-01\n20\n0.93000000\n0.600\n1.60\n0.3141707\nNA\n2.206714e-01\n\n\nDERM_BBWQ\nCG02A\n-5.000000e-02\n67\n1.00447761\n0.200\n5.60\n1.1131086\nNA\n1.356309e-01\n\n\nDERM_BBWQ\nCG03\n-2.000000e-01\n20\n2.34000000\n0.700\n3.90\n0.3910346\nNA\n1.000000e+00\n\n\nDERM_BBWQ\nCG07\n2.000000e-02\n85\n2.71411765\n1.100\n13.20\n0.5414446\nNA\n5.588716e-01\n\n\nDERM_BBWQ\nCM02\n6.666667e-02\n85\n2.36000000\n0.100\n13.40\n0.7844080\nNA\n2.388090e-01\n\n\nDERM_BBWQ\nCM04\n5.500000e-01\n20\n2.15000000\n0.500\n4.90\n0.6468646\nNA\n2.888444e-01\n\n\nDERM_BBWQ\nDDC1\n-2.000000e-01\n20\n1.01000000\n0.300\n1.90\n0.4449942\nNA\n1.000000e+00\n\n\nDERM_BBWQ\nDDC2\n1.000000e-01\n18\n0.87222222\n0.500\n1.90\n0.4357851\nNA\n6.830914e-01\n\n\nDERM_BBWQ\nFC03\n0.000000e+00\n85\n0.97882353\n0.200\n10.00\n1.6158149\nNA\n3.261421e-01\n\n\nDERM_BBWQ\nFC15\n1.000000e-01\n68\n2.59264706\n0.200\n23.00\n1.3181111\nNA\n2.510891e-01\n\n\nDERM_BBWQ\nFC16\n5.150000e+00\n16\n29.65625000\n1.500\n254.00\n2.3211103\nNA\n6.170751e-01\n\n\nDERM_BBWQ\nGL02\n1.000000e-01\n85\n2.40000000\n0.500\n41.20\n1.8711932\n0.100000000\n1.748365e-02\n\n\nDERM_BBWQ\nGL03\n3.000000e-01\n34\n2.43529412\n0.800\n6.30\n0.5803533\n0.300000000\n2.020037e-02\n\n\nDERM_BBWQ\nIC01\n3.000000e-01\n19\n0.96315789\n0.500\n3.00\n0.6448782\nNA\n1.305700e-01\n\n\nDERM_BBWQ\nIC02\n3.000000e-01\n19\n0.93684211\n0.400\n2.50\n0.5503038\n0.300000000\n2.334220e-02\n\n\nDERM_BBWQ\nL31E1\n3.333333e-02\n82\n1.17073171\n0.300\n4.00\n0.5615580\nNA\n1.462948e-01\n\n\nDERM_BBWQ\nLR01\n2.000000e-01\n87\n2.67011494\n0.800\n8.60\n0.5253511\n0.200000000\n1.564471e-03\n\n\nDERM_BBWQ\nLR05\n4.000000e-02\n87\n1.74252874\n0.400\n8.20\n0.7646302\nNA\n1.666468e-01\n\n\nDERM_BBWQ\nLR06\n1.333333e-01\n87\n1.96321839\n0.500\n6.70\n0.5405237\n0.133333333\n2.492211e-04\n\n\nDERM_BBWQ\nLR07\n0.000000e+00\n20\n1.10500000\n0.700\n2.10\n0.3911511\nNA\n1.000000e+00\n\n\nDERM_BBWQ\nLR08\n3.333333e-02\n87\n1.24827586\n0.100\n11.40\n1.2984191\n0.033333333\n3.565642e-02\n\n\nDERM_BBWQ\nLR10\n0.000000e+00\n85\n1.29058824\n0.300\n22.30\n2.0290658\nNA\n7.321523e-01\n\n\nDERM_BBWQ\nMI02\n1.000000e-01\n85\n1.36352941\n0.300\n11.60\n1.1194066\n0.100000000\n8.413395e-05\n\n\nDERM_BBWQ\nMI03\n3.095238e-02\n84\n0.90357143\n0.400\n3.20\n0.6266314\nNA\n8.762248e-02\n\n\nDERM_BBWQ\nMR01\n8.333333e-02\n87\n1.32758621\n0.100\n4.60\n0.4461727\n0.083333333\n3.393419e-03\n\n\nDERM_BBWQ\nMR02\n2.000000e-01\n20\n1.14500000\n0.700\n4.00\n0.6439577\nNA\n4.496918e-01\n\n\nDERM_BBWQ\nMR03\n0.000000e+00\n87\n1.13218391\n0.500\n6.80\n0.6778335\nNA\n9.666096e-01\n\n\nDERM_BBWQ\nMR04\n1.500000e-01\n20\n1.30000000\n0.700\n5.60\n0.8492765\nNA\n4.496918e-01\n\n\nDERM_BBWQ\nMR05\n0.000000e+00\n85\n0.99294118\n0.100\n2.60\n0.4113820\nNA\n8.977797e-01\n\n\nDERM_BBWQ\nMR06\n1.500000e-01\n20\n1.19000000\n0.600\n2.90\n0.4681970\nNA\n7.236736e-01\n\n\nDERM_BBWQ\nMR07\n2.500000e-02\n85\n1.17529412\n0.500\n5.50\n0.6555136\nNA\n2.933374e-01\n\n\nDERM_BBWQ\nMR08\n5.000000e-02\n87\n1.01034483\n0.400\n6.50\n0.8005412\n0.050000000\n2.281992e-03\n\n\nDERM_BBWQ\nMR11\n5.551115e-17\n20\n2.98500000\n0.400\n31.90\n2.3267068\nNA\n1.000000e+00\n\n\nDERM_BBWQ\nMR15\n5.000000e-02\n87\n2.63448276\n0.200\n64.80\n3.2034157\n0.050000000\n1.105143e-03\n\n\nDERM_BBWQ\nMW01\n-2.000000e-01\n23\n1.22173913\n0.200\n3.20\n0.5378388\nNA\n5.973116e-01\n\n\nDERM_BBWQ\nMW04\n0.000000e+00\n87\n0.86781609\n0.300\n10.10\n1.3290914\nNA\n3.801918e-01\n\n\nDERM_BBWQ\nMW05\n1.666667e-02\n85\n2.83411765\n0.100\n177.00\n6.7480638\nNA\n4.738354e-01\n\n\nDERM_BBWQ\nMW13\n4.000000e-02\n87\n1.54367816\n0.600\n11.60\n0.8400386\nNA\n1.200965e-01\n\n\nDERM_BBWQ\nNO07A\n5.000000e-02\n84\n1.12500000\n0.200\n12.60\n1.4273585\n0.050000000\n5.183079e-03\n\n\nDERM_BBWQ\nOC01\n1.110223e-16\n20\n3.08500000\n0.600\n23.60\n1.6092839\nNA\n1.000000e+00\n\n\nDERM_BBWQ\nOL01\n0.000000e+00\n20\n1.28500000\n0.600\n2.60\n0.4353257\nNA\n1.000000e+00\n\n\nDERM_BBWQ\nOL02\n3.000000e-01\n30\n2.63666667\n0.800\n9.40\n0.7742273\nNA\n3.267996e-01\n\n\nDERM_BBWQ\nOL03\n1.333333e-01\n85\n2.58352941\n0.700\n15.40\n0.7746380\n0.133333333\n2.556013e-03\n\n\nDERM_BBWQ\nOSC1\n2.000000e-01\n20\n3.36000000\n0.900\n17.30\n1.1019480\nNA\n1.000000e+00\n\n\nDERM_BBWQ\nOSC2\n2.500000e+00\n20\n17.82500000\n2.900\n47.40\n0.7058379\nNA\n7.236736e-01\n\n\nDERM_BBWQ\nOSC3\n1.350000e+00\n20\n4.60500000\n0.900\n24.00\n1.1491527\nNA\n2.888444e-01\n\n\nDERM_BBWQ\nPR01\n-1.000000e-01\n21\n0.83333333\n0.500\n1.70\n0.3967871\nNA\n3.728579e-01\n\n\nDERM_BBWQ\nPR03\n5.000000e-02\n87\n1.38620690\n0.100\n19.80\n1.9811271\n0.050000000\n8.781264e-03\n\n\nDERM_BBWQ\nPR04A\n0.000000e+00\n87\n0.53678161\n0.200\n10.50\n2.1033067\nNA\n9.658224e-01\n\n\nDERM_BBWQ\nPR08\n4.000000e-02\n87\n1.46781609\n0.100\n4.30\n0.4821320\nNA\n5.151425e-01\n\n\nDERM_BBWQ\nSK01\n1.666667e-02\n85\n1.49294118\n0.600\n4.10\n0.4399328\nNA\n3.995636e-01\n\n\nDERM_BBWQ\nSK02\n1.666667e-02\n87\n1.40919540\n0.500\n16.80\n1.3094511\nNA\n2.130125e-01\n\n\nDERM_BBWQ\nSK05\n0.000000e+00\n76\n1.22631579\n0.400\n6.40\n0.8045451\nNA\n9.197083e-01\n\n\nDERM_BBWQ\nSK09\n1.666667e-02\n87\n0.92758621\n0.300\n8.70\n0.9944301\nNA\n1.701169e-01\n\n\nDERM_BBWQ\nSK10\n-5.000000e-02\n76\n0.76052632\n0.100\n10.50\n1.7508578\n-0.050000000\n1.209268e-02\n\n\nDERM_BBWQ\nSP01\n0.000000e+00\n87\n1.39310345\n0.100\n7.50\n0.7577596\nNA\n1.000000e+00\n\n\nDERM_BBWQ\nSP03\n-1.000000e-01\n20\n1.49500000\n0.700\n8.80\n1.1610953\nNA\n6.830914e-01\n\n\nDERM_BBWQ\nSP04\n5.000000e-02\n87\n1.15747126\n0.400\n5.50\n0.7140922\n0.050000000\n3.092917e-03\n\n\nDERM_BBWQ\nSP05\n-1.000000e-01\n20\n1.09500000\n0.600\n1.60\n0.2360616\nNA\n1.000000e+00\n\n\nDERM_BBWQ\nSP08\n5.000000e-02\n86\n1.23953488\n0.500\n3.30\n0.3925600\n0.050000000\n3.509290e-03\n\n\nDERM_BBWQ\nTM02\n4.000000e-02\n86\n1.43023256\n0.600\n3.70\n0.5161485\n0.040000000\n1.680571e-02\n\n\nDERM_BBWQ\nTM03A\n2.500000e-02\n87\n1.05057471\n0.100\n3.70\n0.5496602\nNA\n1.550188e-01\n\n\nDERM_BBWQ\nTM05\n1.428571e-02\n85\n1.83294118\n0.600\n25.70\n1.4818297\nNA\n6.151248e-01\n\n\nDERM_BBWQ\nTM06\n5.000000e-02\n20\n1.62500000\n0.800\n4.00\n0.5593519\nNA\n1.000000e+00\n\n\nDERM_BBWQ\nTM07A\n-1.500000e-01\n20\n1.86000000\n0.900\n3.90\n0.3643910\nNA\n7.236736e-01\n\n\nDERM_BBWQ\nTM08\n3.333333e-02\n82\n1.27317073\n0.500\n4.80\n0.5010382\nNA\n1.217302e-01\n\n\nDERM_BBWQ\nWC02\n-3.333333e-02\n85\n2.06823529\n0.500\n37.90\n2.2839665\nNA\n1.686377e-01\n\n\nDERM_BBWQ\nWC03\n-3.333333e-02\n85\n1.90000000\n0.400\n22.50\n1.6832704\nNA\n2.087792e-01\n\n\nDERM_BBWQ\nWC04\n2.000000e-01\n85\n9.25882353\n0.900\n242.40\n3.1015326\nNA\n1.459098e-01\n\n\nFIU_WQMP\n200-W\n5.000000e-03\n59\n0.25101695\n0.000\n2.38\n1.8979544\nNA\n5.297249e-01\n\n\nFIU_WQMP\n201-W\n0.000000e+00\n31\n0.44290323\n0.020\n1.81\n0.9741725\nNA\n9.154246e-01\n\n\nFIU_WQMP\n203-W\n-1.000000e-02\n31\n0.20064516\n0.000\n2.03\n1.8150393\nNA\n5.995102e-01\n\n\nFIU_WQMP\n204-W\n7.500000e-03\n32\n0.62062500\n0.030\n2.20\n0.8482751\nNA\n4.638884e-01\n\n\nFIU_WQMP\n206-W\n5.833333e-03\n32\nNA\nNA\nNA\nNA\nNA\n8.327234e-01\n\n\nFIU_WQMP\n207-W\n5.333333e-02\n31\n0.74064516\n0.040\n2.35\n0.7264718\nNA\n1.721672e-01\n\n\nFIU_WQMP\n209-W\n8.285714e-02\n30\n0.98300000\n0.270\n3.86\n0.7121817\n0.082857143\n4.023868e-02\n\n\nFIU_WQMP\n210-W\n0.000000e+00\n31\n0.16064516\n0.000\n0.74\n1.2299427\nNA\n1.000000e+00\n\n\nFIU_WQMP\n211-W\n2.875000e-02\n29\n0.61620690\n0.020\n2.25\n0.7966459\nNA\n5.556898e-01\n\n\nFIU_WQMP\n212-W\n3.500000e-02\n31\n0.61967742\n0.070\n2.76\n1.0111313\nNA\n2.100750e-01\n\n\nFIU_WQMP\n213-W\n1.000000e-02\n51\n0.09588235\n0.000\n0.39\n0.8143459\nNA\n2.653410e-01\n\n\nFIU_WQMP\n214-W\n-8.750000e-03\n31\n0.74967742\n0.080\n4.19\n1.0476988\nNA\n1.000000e+00\n\n\nFIU_WQMP\n215-W\n6.000000e-02\n31\n0.57806452\n0.010\n2.55\n0.8575243\nNA\n2.050623e-01\n\n\nFIU_WQMP\n216-W\n0.000000e+00\n30\n0.11800000\n0.000\n0.67\n1.2635461\nNA\n1.000000e+00\n\n\nFIU_WQMP\n217-W\n-5.357143e-03\n30\nNA\nNA\nNA\nNA\nNA\n9.078685e-01\n\n\nFIU_WQMP\n218-W\n1.000000e-02\n29\n0.36241379\n0.010\n2.85\n1.4837488\nNA\n1.000000e+00\n\n\nFIU_WQMP\n219-W\n5.000000e-03\n30\nNA\nNA\nNA\nNA\nNA\n7.956977e-01\n\n\nFIU_WQMP\n220-W\n1.666667e-02\n31\n0.68741935\n0.150\n2.18\n0.7408392\nNA\n6.761033e-01\n\n\nFIU_WQMP\n222-W\n-6.666667e-03\n31\n0.11451613\n0.000\n0.90\n1.4531570\nNA\n6.456304e-01\n\n\nFIU_WQMP\n223-W\n-3.000000e-03\n31\n1.02483871\n0.020\n6.21\n1.2211471\nNA\n1.000000e+00\n\n\nFIU_WQMP\n224-W\n4.514286e-02\n57\n0.40929825\n0.000\n2.07\n0.9913589\nNA\n1.615208e-01\n\n\nFIU_WQMP\n225-W\n0.000000e+00\n31\n0.18387097\n0.000\n2.26\n2.1875365\nNA\n1.000000e+00\n\n\nFIU_WQMP\n226-W\n9.000000e-02\n30\n1.16166667\n0.110\n5.83\n1.0298326\nNA\n1.028598e-01\n\n\nFIU_WQMP\n227-W\n-2.839286e-02\n29\n1.07137931\n0.050\n4.62\n1.1301391\nNA\n5.575084e-01\n\n\nFIU_WQMP\n228-W\n7.500000e-03\n31\nNA\nNA\nNA\nNA\nNA\n9.034789e-01\n\n\nFIU_WQMP\n229-W\n2.297500e-01\n31\n1.17193548\n0.000\n5.86\n1.1613691\n0.229750000\n5.188608e-03\n\n\nFIU_WQMP\n230-W\n2.333333e-02\n29\n0.88172414\n0.020\n6.15\n1.4632469\nNA\n5.983731e-01\n\n\nFIU_WQMP\n231-W\n-1.000000e-02\n30\nNA\nNA\nNA\nNA\nNA\n6.197964e-01\n\n\nFIU_WQMP\n232-W\n1.780000e-01\n30\n1.59666667\n0.000\n6.16\n1.0277051\nNA\n1.842178e-01\n\n\nFIU_WQMP\n235-W\n6.875000e-02\n30\nNA\nNA\nNA\nNA\nNA\n9.039463e-01\n\n\nFIU_WQMP\n237-W\n0.000000e+00\n56\nNA\nNA\nNA\nNA\nNA\n1.000000e+00\n\n\nFIU_WQMP\n238-W\n6.500000e-02\n31\n1.08225806\n0.180\n3.61\n0.7769126\nNA\n7.709987e-02\n\n\nFIU_WQMP\n239-W\n-2.500000e-03\n31\n0.21967742\n0.010\n1.14\n1.0994112\nNA\n9.039463e-01\n\n\nFIU_WQMP\n241-W\n8.500000e-02\n30\n0.97033333\n0.110\n3.84\n0.9814286\nNA\n2.195152e-01\n\n\nFIU_WQMP\n242-W\n2.000000e-02\n31\n0.76677419\n0.020\n4.06\n1.2754012\nNA\n1.751506e-01\n\n\nFIU_WQMP\n243-W\n2.000000e-03\n31\n0.11774194\n0.000\n0.71\n1.4099158\nNA\n5.423035e-01\n\n\nFIU_WQMP\n244-W\n1.180000e-01\n31\n0.84225806\n0.070\n2.37\n0.7537197\nNA\n1.751506e-01\n\n\nFIU_WQMP\n246-W\n1.600000e-02\n31\n0.14677419\n0.000\n0.79\n1.4550461\nNA\n1.544065e-01\n\n\nFIU_WQMP\n247-W\n-7.083333e-03\n31\n0.84032258\n0.030\n3.23\n1.0070614\nNA\n1.000000e+00\n\n\nFIU_WQMP\n248-W\n1.125000e-02\n31\n0.29903226\n0.000\n1.87\n1.4093093\nNA\n1.000000e+00\n\n\nFIU_WQMP\n249-W\n4.166667e-03\n55\n0.18690909\n0.000\n0.99\n1.2459506\nNA\n8.729594e-01\n\n\nFIU_WQMP\n250-W\n8.750000e-03\n31\n0.92612903\n0.140\n6.09\n1.1982409\nNA\n1.000000e+00\n\n\nFIU_WQMP\n252-W\n0.000000e+00\n31\n0.12064516\n0.000\n0.57\n1.1064676\nNA\n1.000000e+00\n\n\nFIU_WQMP\n253-W\n-2.333333e-02\n33\nNA\nNA\nNA\nNA\nNA\n5.962416e-01\n\n\nFIU_WQMP\n254-W\n4.600000e-02\n31\n0.63032258\n0.110\n2.53\n0.8341121\nNA\n2.893148e-01\n\n\nFIU_WQMP\n255-W\n1.285714e-02\n31\n0.39000000\n0.000\n2.50\n1.2875268\nNA\n3.495748e-01\n\n\nFIU_WQMP\n256-W\n-7.142857e-03\n30\n0.20733333\n0.000\n0.96\n1.1943196\nNA\n7.978939e-01\n\n\nFIU_WQMP\n259-W\n-6.000000e-03\n57\n0.14491228\n0.000\n0.47\n0.8618139\nNA\n5.827169e-01\n\n\nFIU_WQMP\n260-W\n2.750000e-02\n31\n1.36516129\n0.170\n2.77\n0.5833894\nNA\n5.962416e-01\n\n\nFIU_WQMP\n263-W\n2.916667e-03\n31\nNA\nNA\nNA\nNA\nNA\n8.897069e-01\n\n\nFIU_WQMP\n264-W\n0.000000e+00\n30\n0.13000000\n0.000\n0.85\n1.3772276\nNA\n1.000000e+00\n\n\nFIU_WQMP\n266-W\n9.666667e-02\n31\n1.90612903\n0.220\n5.85\n0.6729969\nNA\n3.003531e-01\n\n\nFIU_WQMP\n267-W\n1.619048e-02\n58\n0.22051724\n0.000\n0.89\n0.9490019\n0.016190476\n3.696419e-02\n\n\nFIU_WQMP\n268-W\n-6.000000e-03\n31\n0.80000000\n0.170\n2.75\n0.7272809\nNA\n8.961248e-01\n\n\nFIU_WQMP\n269-W\n1.600000e-02\n31\n0.48258065\n0.020\n1.71\n0.9058424\nNA\n4.613103e-01\n\n\nFIU_WQMP\n270-W\n2.916667e-02\n31\n0.33967742\n0.000\n1.62\n1.0578505\nNA\n4.988805e-01\n\n\nFIU_WQMP\n271-W\n4.833333e-02\n31\n0.78419355\n0.190\n2.36\n0.6125875\nNA\n1.853263e-01\n\n\nFIU_WQMP\n272-W\n8.166667e-02\n31\n0.58322581\n0.030\n1.97\n0.7062187\nNA\n9.289194e-02\n\n\nFIU_WQMP\n273-W\n1.083333e-02\n31\nNA\nNA\nNA\nNA\nNA\n7.735932e-01\n\n\nFIU_WQMP\n275-W\n9.900000e-02\n31\n0.81935484\n0.100\n2.71\n0.7390323\nNA\n9.328996e-02\n\n\nFIU_WQMP\n276-W\n1.333333e-02\n31\n0.32548387\n0.000\n1.89\n1.1385347\nNA\n7.794345e-01\n\n\nFIU_WQMP\n278-W\n1.250000e-03\n62\n0.64080645\n0.050\n2.60\n0.8638423\nNA\n9.583273e-01\n\n\nFIU_WQMP\n280-W\n6.666667e-03\n30\n0.23166667\n0.010\n0.88\n0.7812734\nNA\n5.754030e-01\n\n\nFIU_WQMP\n281-W\n5.777778e-02\n31\n0.76225806\n0.070\n1.96\n0.6913450\nNA\n2.893148e-01\n\n\nFIU_WQMP\n282-W\n1.175000e-01\n29\nNA\nNA\nNA\nNA\nNA\n1.601719e-01\n\n\nFIU_WQMP\n284-W\n5.000000e-03\n30\nNA\nNA\nNA\nNA\nNA\n5.745515e-01\n\n\nFIU_WQMP\n285-W\n1.358333e-01\n31\nNA\nNA\nNA\nNA\n0.135833333\n3.031236e-02\n\n\nFIU_WQMP\n287-W\n3.000000e-02\n31\nNA\nNA\nNA\nNA\nNA\n3.532628e-01\n\n\nFIU_WQMP\n288-W\n1.562500e-02\n31\nNA\nNA\nNA\nNA\nNA\n4.067868e-01\n\n\nFIU_WQMP\n289-W\n5.750000e-02\n30\nNA\nNA\nNA\nNA\nNA\n4.280144e-01\n\n\nFIU_WQMP\n290-W\n3.214286e-02\n31\nNA\nNA\nNA\nNA\nNA\n2.565583e-01\n\n\nFIU_WQMP\n291-W\n-1.000000e-03\n56\nNA\nNA\nNA\nNA\nNA\n9.642417e-01\n\n\nFIU_WQMP\n292-W\n2.400000e-02\n31\nNA\nNA\nNA\nNA\nNA\n9.178502e-01\n\n\nFIU_WQMP\n294-W\n4.300000e-02\n31\nNA\nNA\nNA\nNA\nNA\n3.532628e-01\n\n\nFIU_WQMP\n295-W\n-8.750000e-03\n32\nNA\nNA\nNA\nNA\nNA\n1.000000e+00\n\n\nFIU_WQMP\n296-W\n0.000000e+00\n58\n0.58827586\n0.110\n2.68\n0.8802905\nNA\n1.000000e+00\n\n\nFIU_WQMP\n298-W\nNA\n2\nNA\nNA\nNA\nNA\nNA\nNA\n\n\nFIU_WQMP\n301-W\n4.154762e-02\n31\n0.94032258\n0.310\n2.18\n0.5060162\nNA\n3.437646e-01\n\n\nFIU_WQMP\n302-W\n1.500000e-02\n31\n0.84290323\n0.030\n3.64\n0.8613840\nNA\n8.924139e-01\n\n\nFIU_WQMP\n305-W\n-3.500000e-03\n31\n1.13387097\n0.060\n5.57\n1.1656508\nNA\n8.924139e-01\n\n\nFIU_WQMP\n307-W\n5.000000e-02\n31\nNA\nNA\nNA\nNA\nNA\n8.836175e-01\n\n\nFIU_WQMP\n309-W\n3.500000e-02\n31\n1.05967742\n0.130\n6.35\n1.0721160\nNA\n3.855466e-01\n\n\nFIU_WQMP\n310-W\n4.937500e-02\n64\nNA\nNA\nNA\nNA\nNA\n2.036460e-01\n\n\nFIU_WQMP\n312-W\n5.333333e-02\n32\nNA\nNA\nNA\nNA\nNA\n3.261095e-01\n\n\nFIU_WQMP\n314-W\n3.314286e-02\n31\n1.30193548\n0.290\n4.13\n0.7444093\nNA\n3.437646e-01\n\n\nFIU_WQMP\n315-W\n6.750000e-02\n31\n1.20677419\n0.110\n9.49\n1.3979271\nNA\n5.089380e-02\n\n\nFIU_WQMP\n316-W\n3.333333e-02\n32\nNA\nNA\nNA\nNA\nNA\n3.261095e-01\n\n\nFIU_WQMP\n317-W\n1.400000e-02\n31\n0.68129032\n0.150\n2.29\n0.7642237\nNA\n1.000000e+00\n\n\nFIU_WQMP\n318-W\n5.166667e-02\n30\n0.79766667\n0.090\n4.76\n1.1237555\nNA\n7.142346e-02\n\n\nFIU_WQMP\n319-W\n1.000000e-01\n31\n0.83483871\n0.000\n5.13\n1.2879789\nNA\n1.853263e-01\n\n\nFIU_WQMP\n322-W\n3.600000e-02\n31\n0.39161290\n0.030\n1.29\n0.8075035\nNA\n1.853263e-01\n\n\nFIU_WQMP\n324-W\n9.333333e-02\n31\n1.40096774\n0.000\n19.80\n2.5244311\nNA\n3.495748e-01\n\n\nFIU_WQMP\n325-W\n2.333333e-02\n62\n0.87000000\n0.140\n4.52\n0.9788088\nNA\n2.525022e-01\n\n\nFIU_WQMP\n328-W\n1.857143e-02\n31\n0.17677419\n0.000\n0.59\n0.9583885\nNA\n1.668713e-01\n\n\nFIU_WQMP\n330-W\n2.000000e-02\n31\n0.83096774\n0.050\n4.17\n1.1003390\nNA\n7.910815e-01\n\n\nFIU_WQMP\n332-W\n1.200000e-02\n31\n0.49096774\n0.030\n2.50\n0.9612768\nNA\n5.962416e-01\n\n\nFIU_WQMP\n333-W\n3.400000e-02\n30\n0.36733333\n0.000\n2.82\n1.3681827\nNA\n5.873648e-01\n\n\nFIU_WQMP\n335-W\n1.750000e-02\n31\n0.17645161\n0.000\n0.91\n1.1173351\nNA\n1.853263e-01\n\n\nFIU_WQMP\n337-W\n1.761905e-02\n30\n0.32200000\n0.000\n2.85\n1.5568249\nNA\n6.884997e-01\n\n\nFIU_WQMP\n400-W\n-6.000000e-03\n31\n0.18064516\n0.000\n1.14\n1.4469963\nNA\n5.679724e-01\n\n\nFIU_WQMP\n401-W\n-1.250000e-03\n31\n0.17870968\n0.000\n1.24\n1.4015066\nNA\n1.000000e+00\n\n\nFIU_WQMP\n402-W\n6.000000e-03\n31\n0.20612903\n0.000\n0.85\n0.9426804\nNA\n8.955329e-01\n\n\nFIU_WQMP\n403-W\n2.285714e-02\n30\nNA\nNA\nNA\nNA\nNA\n3.675207e-01\n\n\nFIU_WQMP\n500-W\n6.458333e-02\n29\n0.96724138\n0.150\n4.90\n1.1652835\nNA\n4.496918e-01\n\n\nFIU_WQMP\n501-W\n2.000000e-02\n35\nNA\nNA\nNA\nNA\nNA\n7.236736e-01\n\n\nFIU_WQMP\n502-W\n1.732143e-01\n32\nNA\nNA\nNA\nNA\n0.173214286\n1.264853e-02\n\n\nFIU_WQMP\n503-W\n3.350000e-02\n36\nNA\nNA\nNA\nNA\nNA\n3.123214e-01\n\n\nFIU_WQMP\n504-W\n-5.000000e-03\n31\n2.68677419\n0.280\n5.85\n0.5913290\nNA\n8.983955e-01\n\n\nFIU_WQMP\n505-W\n5.500000e-02\n31\nNA\nNA\nNA\nNA\nNA\n8.255476e-01\n\n\nFIU_WQMP\n506-W\n8.000000e-02\n32\nNA\nNA\nNA\nNA\nNA\n2.893148e-01\n\n\nFIU_WQMP\n507-W\n-9.166667e-03\n33\nNA\nNA\nNA\nNA\nNA\n7.848459e-01\n\n\nFIU_WQMP\n508-W\n1.650000e-02\n33\nNA\nNA\nNA\nNA\nNA\n8.219656e-01\n\n\nFIU_WQMP\n509-W\nNA\n5\nNA\nNA\nNA\nNA\nNA\nNA\n\n\nMiamiBeach\n#1\nNA\n1\n12.90000000\n12.900\n12.90\nNA\nNA\nNA\n\n\nMiamiBeach\n#10\nNA\n1\n3.86000000\n3.860\n3.86\nNA\nNA\nNA\n\n\nMiamiBeach\n#11\nNA\n1\n1.43000000\n1.430\n1.43\nNA\nNA\nNA\n\n\nMiamiBeach\n#12\nNA\n1\n2.57000000\n2.570\n2.57\nNA\nNA\nNA\n\n\nMiamiBeach\n#13\nNA\n1\n1.98000000\n1.980\n1.98\nNA\nNA\nNA\n\n\nMiamiBeach\n#14\nNA\n1\n2.10000000\n2.100\n2.10\nNA\nNA\nNA\n\n\nMiamiBeach\n#15\nNA\n1\n2.17000000\n2.170\n2.17\nNA\nNA\nNA\n\n\nMiamiBeach\n#16\nNA\n1\n1.71000000\n1.710\n1.71\nNA\nNA\nNA\n\n\nMiamiBeach\n#17\nNA\n1\n1.57000000\n1.570\n1.57\nNA\nNA\nNA\n\n\nMiamiBeach\n#18\nNA\n1\n3.22000000\n3.220\n3.22\nNA\nNA\nNA\n\n\nMiamiBeach\n#19\nNA\n1\n2.04000000\n2.040\n2.04\nNA\nNA\nNA\n\n\nMiamiBeach\n#2\nNA\n1\n3.17000000\n3.170\n3.17\nNA\nNA\nNA\n\n\nMiamiBeach\n#20\nNA\n1\n5.93000000\n5.930\n5.93\nNA\nNA\nNA\n\n\nMiamiBeach\n#21\nNA\n1\n4.43000000\n4.430\n4.43\nNA\nNA\nNA\n\n\nMiamiBeach\n#22\nNA\n1\n4.70000000\n4.700\n4.70\nNA\nNA\nNA\n\n\nMiamiBeach\n#23\nNA\n1\n3.64000000\n3.640\n3.64\nNA\nNA\nNA\n\n\nMiamiBeach\n#24\nNA\n1\n3.53000000\n3.530\n3.53\nNA\nNA\nNA\n\n\nMiamiBeach\n#3\nNA\n1\n3.76000000\n3.760\n3.76\nNA\nNA\nNA\n\n\nMiamiBeach\n#3A\nNA\n1\n41.40000000\n41.400\n41.40\nNA\nNA\nNA\n\n\nMiamiBeach\n#3B\nNA\n1\n3.29000000\n3.290\n3.29\nNA\nNA\nNA\n\n\nMiamiBeach\n#4\nNA\n1\n37.50000000\n37.500\n37.50\nNA\nNA\nNA\n\n\nMiamiBeach\n#5\nNA\n1\n4.42000000\n4.420\n4.42\nNA\nNA\nNA\n\n\nMiamiBeach\n#6\nNA\n1\n3.96000000\n3.960\n3.96\nNA\nNA\nNA\n\n\nMiamiBeach\n#7\nNA\n1\n2.23000000\n2.230\n2.23\nNA\nNA\nNA\n\n\nMiamiBeach\n#8\nNA\n1\n2.23000000\n2.230\n2.23\nNA\nNA\nNA\n\n\nMiamiBeach\n#9\nNA\n1\n1.29000000\n1.290\n1.29\nNA\nNA\nNA\n\n\nMiamiBeach\n1\nNA\n11\n5.29454545\n2.660\n12.70\n0.5450314\nNA\nNA\n\n\nMiamiBeach\n10\nNA\n11\n2.88818182\n0.910\n8.77\n0.8123082\nNA\nNA\n\n\nMiamiBeach\n11\nNA\n11\n4.07363636\n1.170\n8.56\n0.5825281\nNA\nNA\n\n\nMiamiBeach\n12\nNA\n11\n5.34818182\n2.100\n12.50\n0.5690849\nNA\nNA\n\n\nMiamiBeach\n13\nNA\n11\n4.47636364\n1.480\n13.20\n0.6857665\nNA\nNA\n\n\nMiamiBeach\n14\nNA\n10\n5.30700000\n1.590\n10.80\n0.6263710\nNA\nNA\n\n\nMiamiBeach\n15\nNA\n11\n4.80272727\n2.300\n12.10\n0.6199021\nNA\nNA\n\n\nMiamiBeach\n16\n3.750000e-02\n56\n5.98500000\n0.600\n66.10\n1.4738182\nNA\n9.437216e-01\n\n\nMiamiBeach\n17\n-1.985714e-01\n90\n4.68355556\n0.190\n15.40\n0.5742188\nNA\n7.143882e-02\n\n\nMiamiBeach\n18\n-7.952381e-02\n56\n5.34821429\n0.110\n46.10\n1.2513871\nNA\n6.211989e-01\n\n\nMiamiBeach\n19\n6.895833e-02\n91\n3.59175824\n0.620\n16.60\n0.6753869\nNA\n6.040965e-01\n\n\nMiamiBeach\n2\n-1.992857e-01\n53\n5.32792453\n0.450\n15.30\n0.6505714\nNA\n2.366541e-01\n\n\nMiamiBeach\n20\nNA\n11\n4.61272727\n2.060\n8.79\n0.5044157\nNA\nNA\n\n\nMiamiBeach\n21\n-1.514286e-01\n52\n4.67461538\n0.240\n31.50\n1.0692904\nNA\n1.762322e-01\n\n\nMiamiBeach\n22\n-3.290476e-01\n88\n3.32500000\n0.460\n10.20\n0.5957457\n-0.329047619\n8.827328e-04\n\n\nMiamiBeach\n23\n-4.001786e-01\n53\n5.62018868\n0.250\n22.50\n0.8167415\nNA\n1.798631e-01\n\n\nMiamiBeach\n24\n-1.566667e-01\n52\n4.51480769\n0.190\n12.10\n0.6017591\nNA\n3.815124e-01\n\n\nMiamiBeach\n25\n-4.228571e-01\n51\n4.72843137\n0.330\n19.60\n0.6660564\n-0.422857143\n3.083601e-02\n\n\nMiamiBeach\n26\n-4.200000e-01\n53\n4.33169811\n0.020\n17.20\n0.7733748\n-0.420000000\n8.024019e-04\n\n\nMiamiBeach\n27\n-4.531429e-01\n53\n3.54396226\n0.020\n11.10\n0.6578928\n-0.453142857\n1.211183e-05\n\n\nMiamiBeach\n28\n-2.750000e-01\n53\n11.93849057\n0.040\n460.00\n5.2569510\n-0.275000000\n3.244589e-03\n\n\nMiamiBeach\n29\n-3.980000e-01\n53\n4.17415094\n0.020\n25.90\n0.9498142\n-0.398000000\n1.846661e-04\n\n\nMiamiBeach\n3\nNA\n11\n7.62545455\n1.930\n20.40\n0.6739256\nNA\nNA\n\n\nMiamiBeach\n30\n-4.030000e-01\n53\n3.58433962\n0.020\n14.90\n0.7110553\n-0.403000000\n2.481743e-05\n\n\nMiamiBeach\n31\n-3.957143e-01\n53\n3.58245283\n0.040\n14.27\n0.7588127\n-0.395714286\n1.846661e-04\n\n\nMiamiBeach\n32\n-3.005952e-01\n53\n3.98339623\n0.030\n38.90\n1.3346380\n-0.300595238\n2.104835e-02\n\n\nMiamiBeach\n33\n-4.214583e-01\n53\n4.05943396\n0.040\n17.60\n0.9568546\n-0.421458333\n9.689808e-05\n\n\nMiamiBeach\n34\n-3.800000e-01\n88\n2.93500000\n0.020\n7.64\n0.5657356\n-0.380000000\n1.279859e-07\n\n\nMiamiBeach\n35\n-2.266667e-01\n52\n4.86480769\n0.450\n37.20\n1.3944297\n-0.226666667\n2.748634e-02\n\n\nMiamiBeach\n36\n-1.800000e-01\n53\n3.75018868\n0.210\n11.66\n0.5702833\n-0.180000000\n9.228781e-03\n\n\nMiamiBeach\n37\n-3.151190e-01\n52\n3.86673077\n0.020\n19.10\n0.8782418\nNA\n1.208194e-01\n\n\nMiamiBeach\n38\n-2.533333e-01\n88\n3.00500000\n0.210\n15.20\n0.8043428\n-0.253333333\n1.014539e-04\n\n\nMiamiBeach\n39\n-1.957143e-01\n51\n3.68607843\n0.020\n18.40\n0.8643172\n-0.195714286\n9.282729e-03\n\n\nMiamiBeach\n3A\n3.750000e+00\n17\n9.03352941\n0.560\n31.60\n1.0539895\nNA\n4.701008e-01\n\n\nMiamiBeach\n3B\nNA\n9\n5.87222222\n2.410\n11.50\n0.4886659\nNA\nNA\n\n\nMiamiBeach\n3b\nNA\n1\n7.73000000\n7.730\n7.73\nNA\nNA\nNA\n\n\nMiamiBeach\n4\n-2.500000e-02\n88\n5.24386364\n0.460\n17.30\n0.6861449\nNA\n8.736141e-01\n\n\nMiamiBeach\n40\n-3.137500e-01\n51\n3.49705882\n0.030\n10.00\n0.7388098\n-0.313750000\n1.373431e-03\n\n\nMiamiBeach\n41\nNA\n11\n2.41272727\n0.920\n5.07\n0.5391539\nNA\nNA\n\n\nMiamiBeach\n42\n-5.400000e-01\n64\n4.21265625\n1.650\n13.40\n0.4649305\n-0.540000000\n2.659102e-04\n\n\nMiamiBeach\n45\n2.650000e-01\n28\n3.76178571\n1.400\n16.30\n0.8072234\nNA\n1.000000e+00\n\n\nMiamiBeach\n46\n-3.133333e-01\n63\n2.85730159\n0.200\n16.10\n0.8081288\n-0.313333333\n4.592775e-03\n\n\nMiamiBeach\n47\n-4.866667e-01\n63\n3.32746032\n0.200\n11.50\n0.6380006\n-0.486666667\n5.043304e-04\n\n\nMiamiBeach\n48\n-7.100000e-01\n28\n4.14250000\n1.400\n10.40\n0.5276022\nNA\n2.238603e-01\n\n\nMiamiBeach\n5\nNA\n11\n4.44181818\n1.640\n12.80\n0.7421628\nNA\nNA\n\n\nMiamiBeach\n52\n-6.112500e-01\n62\n3.44612903\n0.250\n9.83\n0.5666506\n-0.611250000\n1.254827e-04\n\n\nMiamiBeach\n54\n-3.983333e-01\n61\n4.06459016\n1.180\n9.68\n0.4077458\n-0.398333333\n2.466062e-04\n\n\nMiamiBeach\n56\n-4.225000e-01\n60\n11.43566667\n0.280\n478.00\n5.3594544\n-0.422500000\n8.575858e-03\n\n\nMiamiBeach\n59\n-2.625000e-01\n26\n4.85961538\n1.100\n15.90\n0.6390530\nNA\n8.101812e-01\n\n\nMiamiBeach\n6\nNA\n11\n3.87363636\n0.890\n11.30\n0.8654223\nNA\nNA\n\n\nMiamiBeach\n60\n-6.400000e-01\n60\n4.04833333\n1.100\n12.80\n0.5888909\n-0.640000000\n5.320055e-04\n\n\nMiamiBeach\n61\n-3.700000e-01\n21\n5.19761905\n1.790\n10.00\n0.4495030\nNA\n7.594629e-01\n\n\nMiamiBeach\n62\n-9.000000e-01\n22\n6.57681818\n1.880\n48.30\n1.4874153\nNA\n3.427817e-01\n\n\nMiamiBeach\n63\n-4.200000e-01\n56\n2.99196429\n0.450\n11.70\n0.6657641\n-0.420000000\n1.613264e-04\n\n\nMiamiBeach\n64\nNA\n6\n4.87333333\n3.380\n6.09\n0.2214571\nNA\nNA\n\n\nMiamiBeach\n66\n3.200000e-01\n35\n2.51857143\n0.660\n6.51\n0.5387483\nNA\n2.260335e-01\n\n\nMiamiBeach\n67\n4.000000e-01\n36\n3.22055556\n0.300\n15.20\n0.7776378\nNA\n1.475014e-01\n\n\nMiamiBeach\n68\n5.500000e-01\n36\n2.99000000\n0.480\n10.70\n0.7546879\nNA\n1.475014e-01\n\n\nMiamiBeach\n69\n1.650000e-01\n36\n4.92000000\n1.280\n16.40\n0.6331358\nNA\n8.836175e-01\n\n\nMiamiBeach\n7\nNA\n11\n3.67272727\n0.850\n11.50\n0.7898932\nNA\nNA\n\n\nMiamiBeach\n70\n-2.000000e-02\n36\n3.44666667\n0.800\n10.30\n0.6882423\nNA\n1.000000e+00\n\n\nMiamiBeach\n71\n1.950000e-01\n36\n3.19277778\n0.660\n7.49\n0.6056451\nNA\n7.720590e-01\n\n\nMiamiBeach\n74\n-7.500000e-02\n36\n2.67666667\n0.470\n8.40\n0.6222600\nNA\n1.000000e+00\n\n\nMiamiBeach\n78\n7.550000e-01\n35\n6.50171429\n0.810\n24.40\n0.8338015\nNA\n2.152142e-01\n\n\nMiamiBeach\n79\n-2.030000e+00\n22\n9.79636364\n1.800\n30.20\n0.8468536\nNA\n7.664327e-01\n\n\nMiamiBeach\n8\nNA\n11\n4.27363636\n0.860\n14.30\n0.8539109\nNA\nNA\n\n\nMiamiBeach\n81\n1.240000e+00\n14\n4.48571429\n2.370\n9.60\n0.4085173\nNA\n4.795001e-01\n\n\nMiamiBeach\n82\n-4.200000e-01\n15\n5.66600000\n1.650\n25.20\n1.0120315\nNA\n1.000000e+00\n\n\nMiamiBeach\n83\nNA\n7\n6.26857143\n3.480\n16.60\n0.7496139\nNA\nNA\n\n\nMiamiBeach\n84\nNA\n11\n17.19636364\n1.860\n46.80\n0.7804934\nNA\nNA\n\n\nMiamiBeach\n9\n-7.750000e-01\n89\n5.36146067\n0.020\n16.40\n0.7216446\n-0.775000000\n2.237680e-08\n\n\nPALMBEACH\n10\nNA\n1\n1.70000000\n1.700\n1.70\nNA\nNA\nNA\n\n\nPALMBEACH\n11\n-1.000000e-01\n142\nNaN\nNaN\nNaN\nNA\n-0.100000000\n2.330108e-02\n\n\nPALMBEACH\n12A\n0.000000e+00\n93\n4.12817204\n0.330\n50.00\n1.2276920\nNA\n9.431531e-01\n\n\nPALMBEACH\n13\n-1.500000e-01\n138\nNaN\nNaN\nNaN\nNA\n-0.150000000\n6.247242e-03\n\n\nPALMBEACH\n14\nNA\n4\n2.20000000\n1.500\n2.70\n0.2405228\nNA\nNA\n\n\nPALMBEACH\n15\n-1.000000e-02\n96\nNaN\nNaN\nNaN\nNA\nNA\n4.296715e-01\n\n\nPALMBEACH\n16\n1.000000e-01\n93\n2.41634409\n0.310\n10.20\n0.6881622\nNA\n3.957499e-01\n\n\nPALMBEACH\n18A\nNA\n6\n5.18333333\n2.800\n7.60\n0.3044118\nNA\nNA\n\n\nPALMBEACH\n18C\n-1.350000e+00\n174\nNaN\nNaN\nNaN\nNA\n-1.350000000\n1.175767e-02\n\n\nPALMBEACH\n18D\n-9.000000e-01\n155\nNaN\nNaN\nNaN\nNA\n-0.900000000\n7.111383e-05\n\n\nPALMBEACH\n22\n-3.600000e-01\n79\n2.94287342\n0.310\n13.00\n0.6833504\n-0.360000000\n3.636538e-02\n\n\nPALMBEACH\n24\n-3.000000e-01\n93\n3.36586022\n0.050\n11.40\n0.6263451\nNA\n5.664836e-02\n\n\nPALMBEACH\n27A\n-5.000000e-02\n98\n3.09204082\n0.100\n25.00\n1.0502468\nNA\n7.530703e-01\n\n\nPALMBEACH\n27B\n1.100000e-01\n87\n4.33367816\n0.250\n13.00\n0.6177549\nNA\n7.950122e-01\n\n\nPALMBEACH\n28\n-8.750000e-02\n64\n2.25250000\n0.100\n12.00\n0.7985211\nNA\n5.854093e-01\n\n\nPALMBEACH\n28A\nNA\n5\n4.54600000\n2.200\n7.73\n0.4847202\nNA\nNA\n\n\nPALMBEACH\n31B\n-1.000000e-01\n63\n2.29698413\n0.110\n7.00\n0.6232713\nNA\n6.065629e-02\n\n\nPALMBEACH\n31C\n1.000000e-01\n89\n2.70078652\n0.140\n13.31\n0.6798787\nNA\n4.624327e-01\n\n\nPALMBEACH\n31D\nNA\n4\n2.90000000\n1.700\n4.30\n0.4634907\nNA\nNA\n\n\nPALMBEACH\n31E\n5.833333e-02\n86\n3.99290698\n0.220\n13.50\n0.6101780\nNA\n7.545349e-01\n\n\nPALMBEACH\n37B\n-5.000000e-02\n103\nNaN\nNaN\nNaN\nNA\nNA\n7.067850e-01\n\n\nPALMBEACH\n38B\n-8.000000e-01\n116\n15.69482759\n0.450\n95.00\n1.0054244\nNA\n1.359173e-01\n\n\nPALMBEACH\n39\n-2.333333e-01\n43\n10.93488372\n0.500\n45.00\n1.0664562\nNA\n7.862976e-01\n\n\nPALMBEACH\n43\n-2.000000e-02\n43\n10.42906977\n0.450\n50.00\n1.0082750\nNA\n8.916728e-01\n\n\nPALMBEACH\n52\nNA\n34\nNaN\nNaN\nNaN\nNA\nNA\nNA\n\n\nPALMBEACH\n57\nNA\n30\n3.39600000\n0.240\n13.60\n0.7069458\nNA\nNA\n\n\nPALMBEACH\n61\nNA\n31\n4.10161290\n0.260\n11.50\n0.8080290\nNA\nNA\n\n\nPALMBEACH\n62\nNA\n32\n4.63906250\n0.280\n14.70\n0.7350311\nNA\nNA\n\n\nPALMBEACH\n63\nNA\n30\n3.84833333\n0.310\n7.90\n0.4986778\nNA\nNA\n\n\nPALMBEACH\n64\nNA\n32\n3.81031250\n0.470\n7.80\n0.5120967\nNA\nNA\n\n\nPALMBEACH\n65\nNA\n32\n4.61968750\n0.300\n19.80\n0.9198329\nNA\nNA\n\n\nPALMBEACH\n66\nNA\n27\n4.61407407\n0.390\n18.00\n0.7701946\nNA\nNA\n\n\nPALMBEACH\n67\nNA\n1\n1.60000000\n1.600\n1.60\nNA\nNA\nNA\n\n\nPALMBEACH\n68\nNA\n31\n3.49838710\n0.240\n11.10\n0.6423175\nNA\nNA\n\n\nPALMBEACH\n69\nNA\n31\n4.06483871\n0.210\n16.20\n0.8355412\nNA\nNA\n\n\nPALMBEACH\n7\nNA\n4\n1.05000000\n0.550\n1.60\n0.4312088\nNA\nNA\n\n\nPALMBEACH\n70\nNA\n33\nNaN\nNaN\nNaN\nNA\nNA\nNA\n\n\nPALMBEACH\nG92\nNA\n6\n0.95500000\n0.720\n1.30\n0.2194211\nNA\nNA\n\n\n\n\n\n\n\n\n\nReporting Programs:\n\n\ndisplay reporting programs\nlibrary(ggplot2)\nggplot(df, aes(x = program)) +\n  geom_bar() +\n  labs(title = \"Reporting Programs\", x = \"Program\", y = \"Count\")"
  },
  {
    "objectID": "analyte_reports/analyte_reports/Total_Kjeldahl_Nitrogen.html",
    "href": "analyte_reports/analyte_reports/Total_Kjeldahl_Nitrogen.html",
    "title": "Total_Kjeldahl_Nitrogen Report",
    "section": "",
    "text": "get data across all programs, filter for analyte\nlibrary('here')\nlibrary('dplyr')\nsource(here(\"R/getAllData.R\"))\nfull_df &lt;- getAllData()\ndf &lt;- filter(full_df, DEP.Analyte.Name == params$analyte)\n\n\n\n\ncreate .csv of analyte data\n# save df to csv\n# reduce to only cols we need & save to csv\ndf %&gt;%\n  mutate(\n    source = program,\n    site = Monitoring.Location.ID,\n    datetime = Activity.Start.Date.Time,\n    analyte = DEP.Analyte.Name,\n    value = DEP.Result.Value.Number,\n    units = DEP.Result.Unit,\n    latitude = Org.Decimal.Latitude,\n    longitude = Org.Decimal.Longitude,\n    sample_depth = Activity.Depth,\n    .keep = \"none\"\n) %&gt;%\n  write.csv(here(\"data\", \"exports\", \"unified-wq-db-samples\", paste0(params$analyte, \".csv\")))\n\n\nDownload data for this analyte here\n\nHistogram of DEP.Result.Value.Number:\n\n\ndisplay histogram of values\nlibrary(ggplot2)\nggplot(df, aes(x = DEP.Result.Value.Number)) +\n  geom_histogram(bins = 30, fill = \"blue\", color = \"black\") +\n  labs(title = \"Histogram of Values\", x = \"Value\", y = \"Count\")\n\n\n\n\n\n\n\n\n\n\n\nStation Statistics:\n\n\ncreate station statistics dataframe\nsource(here(\"R/seasonalMannKendall.R\"))\nlibrary(lubridate)  # for mdy_hms()\nlibrary(pander)  # for display\n\n# create table of samples for each station\nsamples_df &lt;- df %&gt;%\n  select(\n    program, \n    Monitoring.Location.ID, \n    Activity.Start.Date.Time,\n    analyte = DEP.Analyte.Name,\n    DEP.Result.Value.Number, \n    DEP.Result.Unit,\n    latitude = Org.Decimal.Latitude,\n    longitude = Org.Decimal.Longitude,\n    sample_depth = Activity.Depth\n    ) %&gt;%\n  # drop any with empty Monitoring.Location.ID\n  filter(!is.na(Monitoring.Location.ID)) %&gt;%\n  # drop any with empty Activity.Start.Date.Time\n  filter(!is.na(Activity.Start.Date.Time)) %&gt;%\n  # parse the \"MM/DD/YYYY HH:MM:SS\" strings into POSIXct\n  mutate(Activity.Start.Date.Time = mdy_hms(\n          Activity.Start.Date.Time,\n          tz = \"UTC\")) %&gt;%\n  distinct()\n\n\n# add statistics for each station\nsample_stats_df &lt;- samples_df %&gt;%\n  group_by(program, Monitoring.Location.ID) %&gt;%\n  reframe(\n    {\n      tmp &lt;- seasonalMannKendallVectorized(\n        Activity.Start.Date.Time,\n        DEP.Result.Value.Number\n      )\n    },\n    n_values = n(),\n    mean = mean(DEP.Result.Value.Number),\n    min = min(DEP.Result.Value.Number),\n    max = max(DEP.Result.Value.Number),\n    coefficient.of.variation = sd(DEP.Result.Value.Number) / mean(DEP.Result.Value.Number)\n  ) %&gt;%\n  mutate(\n    # create column significant_slope\n    significant_slope = ifelse(z &lt;= 0.05, slope, NA_real_),\n    pvalue = z\n  ) %&gt;%\n  # drop unwanted columns added by seasonalMannKendall\n  select(\n    -z,\n    -tau,\n    -chi_square\n  )\n\n\n\n# print(head(sample_stats_df))\n# # display sample_stats_df with pander\n# pander(sample_stats_df)\n\n\n\n\nsave stats to csv\nsample_stats_df %&gt;%\n  write.csv(here(\n    \"data\", \"exports\", \"seasonal-mann-kendall-stats\", paste0(params$analyte, \".csv\")))\n\n\nDownload data for this analyte’s statistics here\n\n\ndisplay with gt\nlibrary(gt)\nlibrary(scales)\nlibrary(tidyselect)  # for all_of()\nlibrary(RColorBrewer) # for brewer.pal()\n\n# ── color_column() ─────────────────────────────────────────────────────────────\n# gt_tbl   : a gt object that you’ve already created (e.g. `sample_stats_df %&gt;% gt()`)\n# df       : the original data.frame (must contain the column you want to color)\n# column   : a string, e.g. \"slope\" or \"n_values\"\n# palette  : a character vector of colours to feed to col_numeric()\n#\ncolor_column &lt;- function(gt_tbl, df, column, \n                         palette = c(\"red\", \"orange\", \"yellow\", \"green\", \"blue\", \"violet\"),\n                         domain = NULL) {\n  # 1) Pull out that column’s numeric values\n  vals &lt;- df[[column]]\n  if (!is.numeric(vals)) {\n    stop(sprintf(\"`%s` is not numeric; data_color() requires a numeric column.\", column))\n  }\n  \n  # 2) Compute its min and max (ignoring NA)\n  min_val &lt;- min(vals, na.rm = TRUE)\n  max_val &lt;- max(vals, na.rm = TRUE)\n  if (is.null(domain)) {\n    domain &lt;- c(min_val, max_val)\n  }\n  \n  # 3) Call data_color() on the gt table for that single column\n  gt_tbl %&gt;%\n    data_color(\n      columns = all_of(column),\n      colors  = col_numeric(\n        palette = palette,\n        domain  = domain\n      )\n    )\n}\nlibrary(dplyr)\nlibrary(gt)\n\n# 1) First build your gt table as usual:\ngt_tbl &lt;- sample_stats_df %&gt;% \n  gt()\n\n# slope blue (-) to red (+) (0 centered)\ntryCatch({\n  min_slope &lt;- min(sample_stats_df$slope,  na.rm = TRUE)\n  max_slope &lt;- max(sample_stats_df$slope,  na.rm = TRUE)\n  max_abs_slope &lt;- max(abs(min_slope), abs(max_slope))\n  gt_tbl &lt;- color_column(\n    gt_tbl, \n    df     = sample_stats_df, \n    column = \"slope\",\n    palette = rev(brewer.pal(11, \"RdBu\")),\n    domain  = c(-max_abs_slope, max_abs_slope)\n  )\n}, error = function(e) {\n  print(\"Error in slope color column\")\n  print(e)\n})\n\n\n[1] \"Error in slope color column\"\n&lt;rlang_error in col_numeric(palette = palette, domain = domain): Wasn't able to determine range of `domain`&gt;\n\n\ndisplay with gt\ntryCatch({\n  # pvalue Z\n  gt_tbl &lt;- color_column(\n    gt_tbl, \n    df      = sample_stats_df, \n    column  = \"z\", \n    palette = scales::brewer_pal(palette = \"Blues\")(9)\n  )\n}, error = function(e) {\n  print(\"Error in z color column\")\n  print(e)\n})\n\n\n[1] \"Error in z color column\"\n&lt;simpleError in color_column(gt_tbl, df = sample_stats_df, column = \"z\", palette = (scales::brewer_pal(palette = \"Blues\"))(9)): `z` is not numeric; data_color() requires a numeric column.&gt;\n\n\ndisplay with gt\n# slope blue (-) to red (+) (0 centered)\ntryCatch({\n  min_slope &lt;- min(sample_stats_df$significant_slope,  na.rm = TRUE)\n  max_slope &lt;- max(sample_stats_df$significant_slope,  na.rm = TRUE)\n  max_abs_slope &lt;- max(abs(min_slope), abs(max_slope))\n  gt_tbl &lt;- color_column(\n    gt_tbl, \n    df     = sample_stats_df, \n    column = \"significant_slope\",\n    palette = rev(brewer.pal(11, \"RdBu\")),\n    domain  = c(-max_abs_slope, max_abs_slope)\n  )\n}, error = function(e) {\n  print(\"Error in significant_slope color column\")\n  print(e)\n})\n\n\n[1] \"Error in significant_slope color column\"\n&lt;simpleError in color_column(gt_tbl, df = sample_stats_df, column = \"significant_slope\",     palette = rev(brewer.pal(11, \"RdBu\")), domain = c(-max_abs_slope,         max_abs_slope)): `significant_slope` is not numeric; data_color() requires a numeric column.&gt;\n\n\ndisplay with gt\ntryCatch({\n  # mean values blue to red (0 centered)\n  min_mean &lt;- min(sample_stats_df$mean,  na.rm = TRUE)\n  max_mean &lt;- max(sample_stats_df$mean,  na.rm = TRUE)\n  max_abs_mean &lt;- max(abs(min_mean), abs(max_mean))\n  gt_tbl &lt;- color_column(\n    gt_tbl, \n    df     = sample_stats_df, \n    column = \"mean\",\n    palette = rev(brewer.pal(11, \"RdBu\")),\n    domain  = c(-max_abs_mean, max_abs_mean)\n  )\n}, error = function(e) {\n  print(\"Error in mean color column\")\n  print(e)\n})\n\n\n[1] \"Error in mean color column\"\n&lt;rlang_error in col_numeric(palette = palette, domain = domain): Wasn't able to determine range of `domain`&gt;\n\n\ndisplay with gt\ntryCatch({\n  # n values white to green\n  gt_tbl &lt;- color_column(\n    gt_tbl, \n    df      = sample_stats_df, \n    column  = \"n_values\", \n    palette = scales::brewer_pal(palette = \"Greens\")(9)\n  )\n}, error = function(e) {\n  print(\"Error in n_values color column\")\n  print(e)\n})\n\n\n[1] \"Error in n_values color column\"\n&lt;rlang_error in col_numeric(palette = palette, domain = domain): Wasn't able to determine range of `domain`&gt;\n\n\ndisplay with gt\ntryCatch({\n  # min\n  gt_tbl &lt;- color_column(\n    gt_tbl, \n    df      = sample_stats_df, \n    column  = \"min\", \n    palette = scales::brewer_pal(palette = \"Blues\")(9)\n  )\n}, error = function(e) {\n  print(\"Error in min color column\")\n  print(e)\n})\n\n\n[1] \"Error in min color column\"\n&lt;rlang_error in col_numeric(palette = palette, domain = domain): Wasn't able to determine range of `domain`&gt;\n\n\ndisplay with gt\ntryCatch({\n  # max\n  gt_tbl &lt;- color_column(\n    gt_tbl, \n    df      = sample_stats_df, \n    column  = \"max\", \n    palette = scales::brewer_pal(palette = \"Blues\")(9)\n  )\n}, error = function(e) {\n  print(\"Error in max color column\")\n  print(e)\n})\n\n\n[1] \"Error in max color column\"\n&lt;rlang_error in col_numeric(palette = palette, domain = domain): Wasn't able to determine range of `domain`&gt;\n\n\ndisplay with gt\ntryCatch({\n  # coefficient.of.variation\n  gt_tbl &lt;- color_column(\n    gt_tbl, \n    df      = sample_stats_df, \n    column  = \"coefficient.of.variation\", \n    palette = scales::brewer_pal(palette = \"Blues\")(9)\n  )\n}, error = function(e) {\n  print(\"Error in coefficient.of.variation color column\")\n  print(e)\n})\n\n\n[1] \"Error in coefficient.of.variation color column\"\n&lt;rlang_error in col_numeric(palette = palette, domain = domain): Wasn't able to determine range of `domain`&gt;\n\n\ndisplay with gt\n# 4) Render/display:\ngt_tbl\n\n\n\n\n\n\n\n\nprogram\nMonitoring.Location.ID\nslope\nn_values\nmean\nmin\nmax\ncoefficient.of.variation\nsignificant_slope\npvalue\n\n\n\n\n\n\n\n\n\n\n\nReporting Programs:\n\n\ndisplay reporting programs\nlibrary(ggplot2)\nggplot(df, aes(x = program)) +\n  geom_bar() +\n  labs(title = \"Reporting Programs\", x = \"Program\", y = \"Count\")"
  },
  {
    "objectID": "analyte_reports/analyte_reports/Specific_Conductivity.html",
    "href": "analyte_reports/analyte_reports/Specific_Conductivity.html",
    "title": "Specific_Conductivity Report",
    "section": "",
    "text": "get data across all programs, filter for analyte\nlibrary('here')\nlibrary('dplyr')\nsource(here(\"R/getAllData.R\"))\nfull_df &lt;- getAllData()\ndf &lt;- filter(full_df, DEP.Analyte.Name == params$analyte)\n\n\n\n\ncreate .csv of analyte data\n# save df to csv\n# reduce to only cols we need & save to csv\ndf %&gt;%\n  mutate(\n    source = program,\n    site = Monitoring.Location.ID,\n    datetime = Activity.Start.Date.Time,\n    analyte = DEP.Analyte.Name,\n    value = DEP.Result.Value.Number,\n    units = DEP.Result.Unit,\n    latitude = Org.Decimal.Latitude,\n    longitude = Org.Decimal.Longitude,\n    sample_depth = Activity.Depth,\n    .keep = \"none\"\n) %&gt;%\n  write.csv(here(\"data\", \"exports\", \"unified-wq-db-samples\", paste0(params$analyte, \".csv\")))\n\n\nDownload data for this analyte here\n\nHistogram of DEP.Result.Value.Number:\n\n\ndisplay histogram of values\nlibrary(ggplot2)\nggplot(df, aes(x = DEP.Result.Value.Number)) +\n  geom_histogram(bins = 30, fill = \"blue\", color = \"black\") +\n  labs(title = \"Histogram of Values\", x = \"Value\", y = \"Count\")\n\n\n\n\n\n\n\n\n\n\n\nStation Statistics:\n\n\ncreate station statistics dataframe\nsource(here(\"R/seasonalMannKendall.R\"))\nlibrary(lubridate)  # for mdy_hms()\nlibrary(pander)  # for display\n\n# create table of samples for each station\nsamples_df &lt;- df %&gt;%\n  select(\n    program, \n    Monitoring.Location.ID, \n    Activity.Start.Date.Time,\n    analyte = DEP.Analyte.Name,\n    DEP.Result.Value.Number, \n    DEP.Result.Unit,\n    latitude = Org.Decimal.Latitude,\n    longitude = Org.Decimal.Longitude,\n    sample_depth = Activity.Depth\n    ) %&gt;%\n  # drop any with empty Monitoring.Location.ID\n  filter(!is.na(Monitoring.Location.ID)) %&gt;%\n  # drop any with empty Activity.Start.Date.Time\n  filter(!is.na(Activity.Start.Date.Time)) %&gt;%\n  # parse the \"MM/DD/YYYY HH:MM:SS\" strings into POSIXct\n  mutate(Activity.Start.Date.Time = mdy_hms(\n          Activity.Start.Date.Time,\n          tz = \"UTC\")) %&gt;%\n  distinct()\n\n\n# add statistics for each station\nsample_stats_df &lt;- samples_df %&gt;%\n  group_by(program, Monitoring.Location.ID) %&gt;%\n  reframe(\n    {\n      tmp &lt;- seasonalMannKendallVectorized(\n        Activity.Start.Date.Time,\n        DEP.Result.Value.Number\n      )\n    },\n    n_values = n(),\n    mean = mean(DEP.Result.Value.Number),\n    min = min(DEP.Result.Value.Number),\n    max = max(DEP.Result.Value.Number),\n    coefficient.of.variation = sd(DEP.Result.Value.Number) / mean(DEP.Result.Value.Number)\n  ) %&gt;%\n  mutate(\n    # create column significant_slope\n    significant_slope = ifelse(z &lt;= 0.05, slope, NA_real_),\n    pvalue = z\n  ) %&gt;%\n  # drop unwanted columns added by seasonalMannKendall\n  select(\n    -z,\n    -tau,\n    -chi_square\n  )\n\n\n\n# print(head(sample_stats_df))\n# # display sample_stats_df with pander\n# pander(sample_stats_df)\n\n\n\n\nsave stats to csv\nsample_stats_df %&gt;%\n  write.csv(here(\n    \"data\", \"exports\", \"seasonal-mann-kendall-stats\", paste0(params$analyte, \".csv\")))\n\n\nDownload data for this analyte’s statistics here\n\n\ndisplay with gt\nlibrary(gt)\nlibrary(scales)\nlibrary(tidyselect)  # for all_of()\nlibrary(RColorBrewer) # for brewer.pal()\n\n# ── color_column() ─────────────────────────────────────────────────────────────\n# gt_tbl   : a gt object that you’ve already created (e.g. `sample_stats_df %&gt;% gt()`)\n# df       : the original data.frame (must contain the column you want to color)\n# column   : a string, e.g. \"slope\" or \"n_values\"\n# palette  : a character vector of colours to feed to col_numeric()\n#\ncolor_column &lt;- function(gt_tbl, df, column, \n                         palette = c(\"red\", \"orange\", \"yellow\", \"green\", \"blue\", \"violet\"),\n                         domain = NULL) {\n  # 1) Pull out that column’s numeric values\n  vals &lt;- df[[column]]\n  if (!is.numeric(vals)) {\n    stop(sprintf(\"`%s` is not numeric; data_color() requires a numeric column.\", column))\n  }\n  \n  # 2) Compute its min and max (ignoring NA)\n  min_val &lt;- min(vals, na.rm = TRUE)\n  max_val &lt;- max(vals, na.rm = TRUE)\n  if (is.null(domain)) {\n    domain &lt;- c(min_val, max_val)\n  }\n  \n  # 3) Call data_color() on the gt table for that single column\n  gt_tbl %&gt;%\n    data_color(\n      columns = all_of(column),\n      colors  = col_numeric(\n        palette = palette,\n        domain  = domain\n      )\n    )\n}\nlibrary(dplyr)\nlibrary(gt)\n\n# 1) First build your gt table as usual:\ngt_tbl &lt;- sample_stats_df %&gt;% \n  gt()\n\n# slope blue (-) to red (+) (0 centered)\ntryCatch({\n  min_slope &lt;- min(sample_stats_df$slope,  na.rm = TRUE)\n  max_slope &lt;- max(sample_stats_df$slope,  na.rm = TRUE)\n  max_abs_slope &lt;- max(abs(min_slope), abs(max_slope))\n  gt_tbl &lt;- color_column(\n    gt_tbl, \n    df     = sample_stats_df, \n    column = \"slope\",\n    palette = rev(brewer.pal(11, \"RdBu\")),\n    domain  = c(-max_abs_slope, max_abs_slope)\n  )\n}, error = function(e) {\n  print(\"Error in slope color column\")\n  print(e)\n})\n\n\n[1] \"Error in slope color column\"\n&lt;rlang_error in col_numeric(palette = palette, domain = domain): Wasn't able to determine range of `domain`&gt;\n\n\ndisplay with gt\ntryCatch({\n  # pvalue Z\n  gt_tbl &lt;- color_column(\n    gt_tbl, \n    df      = sample_stats_df, \n    column  = \"z\", \n    palette = scales::brewer_pal(palette = \"Blues\")(9)\n  )\n}, error = function(e) {\n  print(\"Error in z color column\")\n  print(e)\n})\n\n\n[1] \"Error in z color column\"\n&lt;simpleError in color_column(gt_tbl, df = sample_stats_df, column = \"z\", palette = (scales::brewer_pal(palette = \"Blues\"))(9)): `z` is not numeric; data_color() requires a numeric column.&gt;\n\n\ndisplay with gt\n# slope blue (-) to red (+) (0 centered)\ntryCatch({\n  min_slope &lt;- min(sample_stats_df$significant_slope,  na.rm = TRUE)\n  max_slope &lt;- max(sample_stats_df$significant_slope,  na.rm = TRUE)\n  max_abs_slope &lt;- max(abs(min_slope), abs(max_slope))\n  gt_tbl &lt;- color_column(\n    gt_tbl, \n    df     = sample_stats_df, \n    column = \"significant_slope\",\n    palette = rev(brewer.pal(11, \"RdBu\")),\n    domain  = c(-max_abs_slope, max_abs_slope)\n  )\n}, error = function(e) {\n  print(\"Error in significant_slope color column\")\n  print(e)\n})\n\n\n[1] \"Error in significant_slope color column\"\n&lt;simpleError in color_column(gt_tbl, df = sample_stats_df, column = \"significant_slope\",     palette = rev(brewer.pal(11, \"RdBu\")), domain = c(-max_abs_slope,         max_abs_slope)): `significant_slope` is not numeric; data_color() requires a numeric column.&gt;\n\n\ndisplay with gt\ntryCatch({\n  # mean values blue to red (0 centered)\n  min_mean &lt;- min(sample_stats_df$mean,  na.rm = TRUE)\n  max_mean &lt;- max(sample_stats_df$mean,  na.rm = TRUE)\n  max_abs_mean &lt;- max(abs(min_mean), abs(max_mean))\n  gt_tbl &lt;- color_column(\n    gt_tbl, \n    df     = sample_stats_df, \n    column = \"mean\",\n    palette = rev(brewer.pal(11, \"RdBu\")),\n    domain  = c(-max_abs_mean, max_abs_mean)\n  )\n}, error = function(e) {\n  print(\"Error in mean color column\")\n  print(e)\n})\n\n\n[1] \"Error in mean color column\"\n&lt;rlang_error in col_numeric(palette = palette, domain = domain): Wasn't able to determine range of `domain`&gt;\n\n\ndisplay with gt\ntryCatch({\n  # n values white to green\n  gt_tbl &lt;- color_column(\n    gt_tbl, \n    df      = sample_stats_df, \n    column  = \"n_values\", \n    palette = scales::brewer_pal(palette = \"Greens\")(9)\n  )\n}, error = function(e) {\n  print(\"Error in n_values color column\")\n  print(e)\n})\n\n\n[1] \"Error in n_values color column\"\n&lt;rlang_error in col_numeric(palette = palette, domain = domain): Wasn't able to determine range of `domain`&gt;\n\n\ndisplay with gt\ntryCatch({\n  # min\n  gt_tbl &lt;- color_column(\n    gt_tbl, \n    df      = sample_stats_df, \n    column  = \"min\", \n    palette = scales::brewer_pal(palette = \"Blues\")(9)\n  )\n}, error = function(e) {\n  print(\"Error in min color column\")\n  print(e)\n})\n\n\n[1] \"Error in min color column\"\n&lt;rlang_error in col_numeric(palette = palette, domain = domain): Wasn't able to determine range of `domain`&gt;\n\n\ndisplay with gt\ntryCatch({\n  # max\n  gt_tbl &lt;- color_column(\n    gt_tbl, \n    df      = sample_stats_df, \n    column  = \"max\", \n    palette = scales::brewer_pal(palette = \"Blues\")(9)\n  )\n}, error = function(e) {\n  print(\"Error in max color column\")\n  print(e)\n})\n\n\n[1] \"Error in max color column\"\n&lt;rlang_error in col_numeric(palette = palette, domain = domain): Wasn't able to determine range of `domain`&gt;\n\n\ndisplay with gt\ntryCatch({\n  # coefficient.of.variation\n  gt_tbl &lt;- color_column(\n    gt_tbl, \n    df      = sample_stats_df, \n    column  = \"coefficient.of.variation\", \n    palette = scales::brewer_pal(palette = \"Blues\")(9)\n  )\n}, error = function(e) {\n  print(\"Error in coefficient.of.variation color column\")\n  print(e)\n})\n\n\n[1] \"Error in coefficient.of.variation color column\"\n&lt;rlang_error in col_numeric(palette = palette, domain = domain): Wasn't able to determine range of `domain`&gt;\n\n\ndisplay with gt\n# 4) Render/display:\ngt_tbl\n\n\n\n\n\n\n\n\nprogram\nMonitoring.Location.ID\nslope\nn_values\nmean\nmin\nmax\ncoefficient.of.variation\nsignificant_slope\npvalue\n\n\n\n\n\n\n\n\n\n\n\nReporting Programs:\n\n\ndisplay reporting programs\nlibrary(ggplot2)\nggplot(df, aes(x = program)) +\n  geom_bar() +\n  labs(title = \"Reporting Programs\", x = \"Program\", y = \"Count\")"
  },
  {
    "objectID": "analyte_reports/analyte_reports/Salinity.html",
    "href": "analyte_reports/analyte_reports/Salinity.html",
    "title": "Salinity Report",
    "section": "",
    "text": "get data across all programs, filter for analyte\nlibrary('here')\nlibrary('dplyr')\nsource(here(\"R/getAllData.R\"))\nfull_df &lt;- getAllData()\ndf &lt;- filter(full_df, DEP.Analyte.Name == params$analyte)\n\n\n\n\ncreate .csv of analyte data\n# save df to csv\n# reduce to only cols we need & save to csv\ndf %&gt;%\n  mutate(\n    source = program,\n    site = Monitoring.Location.ID,\n    datetime = Activity.Start.Date.Time,\n    analyte = DEP.Analyte.Name,\n    value = DEP.Result.Value.Number,\n    units = DEP.Result.Unit,\n    latitude = Org.Decimal.Latitude,\n    longitude = Org.Decimal.Longitude,\n    sample_depth = Activity.Depth,\n    .keep = \"none\"\n) %&gt;%\n  write.csv(here(\"data\", \"exports\", \"unified-wq-db-samples\", paste0(params$analyte, \".csv\")))\n\n\nDownload data for this analyte here\n\nHistogram of DEP.Result.Value.Number:\n\n\ndisplay histogram of values\nlibrary(ggplot2)\nggplot(df, aes(x = DEP.Result.Value.Number)) +\n  geom_histogram(bins = 30, fill = \"blue\", color = \"black\") +\n  labs(title = \"Histogram of Values\", x = \"Value\", y = \"Count\")\n\n\n\n\n\n\n\n\n\n\n\nStation Statistics:\n\n\ncreate station statistics dataframe\nsource(here(\"R/seasonalMannKendall.R\"))\nlibrary(lubridate)  # for mdy_hms()\nlibrary(pander)  # for display\n\n# create table of samples for each station\nsamples_df &lt;- df %&gt;%\n  select(\n    program, \n    Monitoring.Location.ID, \n    Activity.Start.Date.Time,\n    analyte = DEP.Analyte.Name,\n    DEP.Result.Value.Number, \n    DEP.Result.Unit,\n    latitude = Org.Decimal.Latitude,\n    longitude = Org.Decimal.Longitude,\n    sample_depth = Activity.Depth\n    ) %&gt;%\n  # drop any with empty Monitoring.Location.ID\n  filter(!is.na(Monitoring.Location.ID)) %&gt;%\n  # drop any with empty Activity.Start.Date.Time\n  filter(!is.na(Activity.Start.Date.Time)) %&gt;%\n  # parse the \"MM/DD/YYYY HH:MM:SS\" strings into POSIXct\n  mutate(Activity.Start.Date.Time = mdy_hms(\n          Activity.Start.Date.Time,\n          tz = \"UTC\")) %&gt;%\n  distinct()\n\n\n# add statistics for each station\nsample_stats_df &lt;- samples_df %&gt;%\n  group_by(program, Monitoring.Location.ID) %&gt;%\n  reframe(\n    {\n      tmp &lt;- seasonalMannKendallVectorized(\n        Activity.Start.Date.Time,\n        DEP.Result.Value.Number\n      )\n    },\n    n_values = n(),\n    mean = mean(DEP.Result.Value.Number),\n    min = min(DEP.Result.Value.Number),\n    max = max(DEP.Result.Value.Number),\n    coefficient.of.variation = sd(DEP.Result.Value.Number) / mean(DEP.Result.Value.Number)\n  ) %&gt;%\n  mutate(\n    # create column significant_slope\n    significant_slope = ifelse(z &lt;= 0.05, slope, NA_real_),\n    pvalue = z\n  ) %&gt;%\n  # drop unwanted columns added by seasonalMannKendall\n  select(\n    -z,\n    -tau,\n    -chi_square\n  )\n\n\n\n# print(head(sample_stats_df))\n# # display sample_stats_df with pander\n# pander(sample_stats_df)\n\n\n\n\nsave stats to csv\nsample_stats_df %&gt;%\n  write.csv(here(\n    \"data\", \"exports\", \"seasonal-mann-kendall-stats\", paste0(params$analyte, \".csv\")))\n\n\nDownload data for this analyte’s statistics here\n\n\ndisplay with gt\nlibrary(gt)\nlibrary(scales)\nlibrary(tidyselect)  # for all_of()\nlibrary(RColorBrewer) # for brewer.pal()\n\n# ── color_column() ─────────────────────────────────────────────────────────────\n# gt_tbl   : a gt object that you’ve already created (e.g. `sample_stats_df %&gt;% gt()`)\n# df       : the original data.frame (must contain the column you want to color)\n# column   : a string, e.g. \"slope\" or \"n_values\"\n# palette  : a character vector of colours to feed to col_numeric()\n#\ncolor_column &lt;- function(gt_tbl, df, column, \n                         palette = c(\"red\", \"orange\", \"yellow\", \"green\", \"blue\", \"violet\"),\n                         domain = NULL) {\n  # 1) Pull out that column’s numeric values\n  vals &lt;- df[[column]]\n  if (!is.numeric(vals)) {\n    stop(sprintf(\"`%s` is not numeric; data_color() requires a numeric column.\", column))\n  }\n  \n  # 2) Compute its min and max (ignoring NA)\n  min_val &lt;- min(vals, na.rm = TRUE)\n  max_val &lt;- max(vals, na.rm = TRUE)\n  if (is.null(domain)) {\n    domain &lt;- c(min_val, max_val)\n  }\n  \n  # 3) Call data_color() on the gt table for that single column\n  gt_tbl %&gt;%\n    data_color(\n      columns = all_of(column),\n      colors  = col_numeric(\n        palette = palette,\n        domain  = domain\n      )\n    )\n}\nlibrary(dplyr)\nlibrary(gt)\n\n# 1) First build your gt table as usual:\ngt_tbl &lt;- sample_stats_df %&gt;% \n  gt()\n\n# slope blue (-) to red (+) (0 centered)\ntryCatch({\n  min_slope &lt;- min(sample_stats_df$slope,  na.rm = TRUE)\n  max_slope &lt;- max(sample_stats_df$slope,  na.rm = TRUE)\n  max_abs_slope &lt;- max(abs(min_slope), abs(max_slope))\n  gt_tbl &lt;- color_column(\n    gt_tbl, \n    df     = sample_stats_df, \n    column = \"slope\",\n    palette = rev(brewer.pal(11, \"RdBu\")),\n    domain  = c(-max_abs_slope, max_abs_slope)\n  )\n}, error = function(e) {\n  print(\"Error in slope color column\")\n  print(e)\n})\n\ntryCatch({\n  # pvalue Z\n  gt_tbl &lt;- color_column(\n    gt_tbl, \n    df      = sample_stats_df, \n    column  = \"z\", \n    palette = scales::brewer_pal(palette = \"Blues\")(9)\n  )\n}, error = function(e) {\n  print(\"Error in z color column\")\n  print(e)\n})\n\n\n[1] \"Error in z color column\"\n&lt;simpleError in color_column(gt_tbl, df = sample_stats_df, column = \"z\", palette = (scales::brewer_pal(palette = \"Blues\"))(9)): `z` is not numeric; data_color() requires a numeric column.&gt;\n\n\ndisplay with gt\n# slope blue (-) to red (+) (0 centered)\ntryCatch({\n  min_slope &lt;- min(sample_stats_df$significant_slope,  na.rm = TRUE)\n  max_slope &lt;- max(sample_stats_df$significant_slope,  na.rm = TRUE)\n  max_abs_slope &lt;- max(abs(min_slope), abs(max_slope))\n  gt_tbl &lt;- color_column(\n    gt_tbl, \n    df     = sample_stats_df, \n    column = \"significant_slope\",\n    palette = rev(brewer.pal(11, \"RdBu\")),\n    domain  = c(-max_abs_slope, max_abs_slope)\n  )\n}, error = function(e) {\n  print(\"Error in significant_slope color column\")\n  print(e)\n})\n\ntryCatch({\n  # mean values blue to red (0 centered)\n  min_mean &lt;- min(sample_stats_df$mean,  na.rm = TRUE)\n  max_mean &lt;- max(sample_stats_df$mean,  na.rm = TRUE)\n  max_abs_mean &lt;- max(abs(min_mean), abs(max_mean))\n  gt_tbl &lt;- color_column(\n    gt_tbl, \n    df     = sample_stats_df, \n    column = \"mean\",\n    palette = rev(brewer.pal(11, \"RdBu\")),\n    domain  = c(-max_abs_mean, max_abs_mean)\n  )\n}, error = function(e) {\n  print(\"Error in mean color column\")\n  print(e)\n})\n\ntryCatch({\n  # n values white to green\n  gt_tbl &lt;- color_column(\n    gt_tbl, \n    df      = sample_stats_df, \n    column  = \"n_values\", \n    palette = scales::brewer_pal(palette = \"Greens\")(9)\n  )\n}, error = function(e) {\n  print(\"Error in n_values color column\")\n  print(e)\n})\n\ntryCatch({\n  # min\n  gt_tbl &lt;- color_column(\n    gt_tbl, \n    df      = sample_stats_df, \n    column  = \"min\", \n    palette = scales::brewer_pal(palette = \"Blues\")(9)\n  )\n}, error = function(e) {\n  print(\"Error in min color column\")\n  print(e)\n})\n\ntryCatch({\n  # max\n  gt_tbl &lt;- color_column(\n    gt_tbl, \n    df      = sample_stats_df, \n    column  = \"max\", \n    palette = scales::brewer_pal(palette = \"Blues\")(9)\n  )\n}, error = function(e) {\n  print(\"Error in max color column\")\n  print(e)\n})\n\ntryCatch({\n  # coefficient.of.variation\n  gt_tbl &lt;- color_column(\n    gt_tbl, \n    df      = sample_stats_df, \n    column  = \"coefficient.of.variation\", \n    palette = scales::brewer_pal(palette = \"Blues\")(9)\n  )\n}, error = function(e) {\n  print(\"Error in coefficient.of.variation color column\")\n  print(e)\n})\n\n# 4) Render/display:\ngt_tbl\n\n\n\n\n\n\n\n\nprogram\nMonitoring.Location.ID\nslope\nn_values\nmean\nmin\nmax\ncoefficient.of.variation\nsignificant_slope\npvalue\n\n\n\n\nBBAP\nBB14\nNA\n3\n30.1800000\n27.2200\n31.94000\n8.544340e-02\nNA\nNA\n\n\nBBAP\nDM08\nNA\n2\n28.3250000\n25.2400\n31.41000\n1.540282e-01\nNA\nNA\n\n\nBBAP\nJFK03\nNA\n2\n28.7950000\n25.4000\n32.19000\n1.667392e-01\nNA\nNA\n\n\nBBAP\nJT61\nNA\n3\n29.9433333\n28.3900\n32.61000\n7.747489e-02\nNA\nNA\n\n\nBBAP\nJT66\nNA\n1\n32.7900000\n32.7900\n32.79000\nNA\nNA\nNA\n\n\nBBAP\nJT71\nNA\n1\n32.6100000\n32.6100\n32.61000\nNA\nNA\nNA\n\n\nBBAP\nLR03\nNA\n3\n2.4100000\n1.0800\n3.79000\n5.625277e-01\nNA\nNA\n\n\nBBAP\nVR01\nNA\n1\n32.7400000\n32.7400\n32.74000\nNA\nNA\nNA\n\n\nBBAP\nVR11\nNA\n1\n33.2600000\n33.2600\n33.26000\nNA\nNA\nNA\n\n\nBROWARD\n1\n-0.2500000000\n83\nNaN\nNaN\nNaN\nNA\nNA\n1.000000e+00\n\n\nBROWARD\n10\n-0.6800000000\n78\nNaN\nNaN\nNaN\nNA\nNA\n4.941245e-01\n\n\nBROWARD\n109\nNA\n4\nNaN\nNaN\nNaN\nNA\nNA\nNA\n\n\nBROWARD\n11\n-0.0150000000\n111\nNaN\nNaN\nNaN\nNA\nNA\n1.643703e-01\n\n\nBROWARD\n110\n-0.0050000000\n46\nNaN\nNaN\nNaN\nNA\nNA\n1.824224e-01\n\n\nBROWARD\n111\n-0.2500000000\n82\nNaN\nNaN\nNaN\nNA\nNA\n6.783025e-01\n\n\nBROWARD\n112\n-0.1357142857\n85\nNaN\nNaN\nNaN\nNA\nNA\n4.655122e-01\n\n\nBROWARD\n114\nNA\n20\nNaN\nNaN\nNaN\nNA\nNA\nNA\n\n\nBROWARD\n12\n-0.0033333333\n44\nNaN\nNaN\nNaN\nNA\nNA\n1.965328e-01\n\n\nBROWARD\n120\n0.0760000000\n47\n10.5529787\n0.0200\n28.80000\n9.227497e-01\nNA\n8.295733e-01\n\n\nBROWARD\n121\n-0.0100000000\n68\n0.1860294\n0.1100\n0.30000\n2.429229e-01\n-0.010000000\n6.286171e-03\n\n\nBROWARD\n122\n0.0025000000\n56\n0.3142857\n0.2300\n0.43000\n1.316599e-01\nNA\n6.994263e-01\n\n\nBROWARD\n123\n-0.9133333333\n41\n6.3834146\n0.4600\n23.20000\n1.003155e+00\nNA\n1.753081e-01\n\n\nBROWARD\n124\n-0.0050000000\n68\n0.3030294\n0.2500\n0.37000\n1.085422e-01\n-0.005000000\n3.162518e-02\n\n\nBROWARD\n125\n-0.7500000000\n40\n21.5512500\n11.2000\n31.20000\n2.939158e-01\nNA\n3.552399e-01\n\n\nBROWARD\n126\nNA\n8\n0.2737500\n0.1800\n0.38000\n2.726212e-01\nNA\nNA\n\n\nBROWARD\n127\nNA\n6\n18.3683333\n2.3600\n29.20000\n6.298101e-01\nNA\nNA\n\n\nBROWARD\n128\n1.2100000000\n24\n7.9058333\n0.3500\n21.50000\n9.304918e-01\nNA\n1.908210e-01\n\n\nBROWARD\n129\n-0.0840000000\n24\n7.2526667\n0.5600\n22.30000\n7.688662e-01\nNA\n8.844342e-01\n\n\nBROWARD\n13\nNA\n3\nNaN\nNaN\nNaN\nNA\nNA\nNA\n\n\nBROWARD\n14\n-0.0014285714\n44\nNaN\nNaN\nNaN\nNA\nNA\n5.184436e-01\n\n\nBROWARD\n15\n-0.6278571429\n96\n16.3911458\n0.2170\n35.10000\n6.726970e-01\nNA\n6.653658e-01\n\n\nBROWARD\n16\n-0.7600000000\n73\nNaN\nNaN\nNaN\nNA\nNA\n9.703930e-02\n\n\nBROWARD\n17\n-0.0100000000\n28\nNaN\nNaN\nNaN\nNA\nNA\n9.044070e-01\n\n\nBROWARD\n18\nNA\n2\nNaN\nNaN\nNaN\nNA\nNA\nNA\n\n\nBROWARD\n19\n-0.4600000000\n92\n9.4431848\n0.2040\n30.30000\n9.271847e-01\nNA\n2.214689e-01\n\n\nBROWARD\n2\n-0.0016666667\n49\nNaN\nNaN\nNaN\nNA\nNA\n8.262384e-01\n\n\nBROWARD\n20\n-0.0647619048\n90\nNaN\nNaN\nNaN\nNA\nNA\n2.790670e-01\n\n\nBROWARD\n21\nNA\n15\nNaN\nNaN\nNaN\nNA\nNA\nNA\n\n\nBROWARD\n22\n0.0025000000\n58\nNaN\nNaN\nNaN\nNA\nNA\n4.503513e-01\n\n\nBROWARD\n23\n-0.0008333333\n102\nNaN\nNaN\nNaN\nNA\nNA\n5.445578e-01\n\n\nBROWARD\n24\n-0.6000000000\n77\n22.2606494\n2.3500\n35.50000\n3.766109e-01\nNA\n5.151812e-01\n\n\nBROWARD\n25\n-0.3250000000\n80\n13.0638750\n1.6600\n30.10000\n5.968053e-01\nNA\n7.434207e-01\n\n\nBROWARD\n26\n-0.0250000000\n76\nNaN\nNaN\nNaN\nNA\nNA\n1.000000e+00\n\n\nBROWARD\n27\nNA\n11\nNaN\nNaN\nNaN\nNA\nNA\nNA\n\n\nBROWARD\n28\n-0.0033333333\n56\nNaN\nNaN\nNaN\nNA\nNA\n5.200505e-01\n\n\nBROWARD\n29\n0.0000000000\n61\nNaN\nNaN\nNaN\nNA\nNA\n7.393988e-01\n\n\nBROWARD\n3\n-0.0080000000\n59\nNaN\nNaN\nNaN\nNA\nNA\n2.723606e-01\n\n\nBROWARD\n31\n0.0000000000\n43\nNaN\nNaN\nNaN\nNA\nNA\n3.640033e-01\n\n\nBROWARD\n32\n0.0000000000\n65\nNaN\nNaN\nNaN\nNA\nNA\n8.255476e-01\n\n\nBROWARD\n33\n-0.2571428571\n77\n21.4720779\n1.9100\n36.30000\n4.655401e-01\nNA\n6.668337e-01\n\n\nBROWARD\n34\n-0.2000000000\n68\n31.8529412\n14.4000\n37.30000\n1.734955e-01\n-0.200000000\n2.300710e-02\n\n\nBROWARD\n35\n-0.2575000000\n125\nNaN\nNaN\nNaN\nNA\nNA\n1.104573e-01\n\n\nBROWARD\n36\n-0.8000000000\n77\n21.2163636\n5.2900\n33.50000\n4.236873e-01\nNA\n1.044190e-01\n\n\nBROWARD\n37\n-0.5500000000\n75\nNaN\nNaN\nNaN\nNA\nNA\n2.742793e-01\n\n\nBROWARD\n38\n-0.4000000000\n74\nNaN\nNaN\nNaN\nNA\nNA\n1.714602e-01\n\n\nBROWARD\n39\n0.0600000000\n64\n31.5104688\n21.5000\n36.40000\n9.886046e-02\nNA\n1.000000e+00\n\n\nBROWARD\n4\n0.0000000000\n104\nNaN\nNaN\nNaN\nNA\nNA\n1.000000e+00\n\n\nBROWARD\n40\n-0.1250000000\n108\n31.7309259\n22.1000\n36.40000\n8.362093e-02\nNA\n6.396830e-01\n\n\nBROWARD\n41\n-0.2000000000\n83\n27.0147084\n0.0250\n37.30000\n2.546306e-01\nNA\n4.941245e-01\n\n\nBROWARD\n47\nNA\n6\n30.2166667\n23.0000\n35.00000\n1.530149e-01\nNA\nNA\n\n\nBROWARD\n49\nNA\n36\nNaN\nNaN\nNaN\nNA\nNA\nNA\n\n\nBROWARD\n5\n-0.3666666667\n74\nNaN\nNaN\nNaN\nNA\nNA\n3.480826e-01\n\n\nBROWARD\n6\n-0.0050000000\n50\nNaN\nNaN\nNaN\nNA\nNA\n8.339354e-01\n\n\nBROWARD\n64\n-0.0712500000\n83\nNaN\nNaN\nNaN\nNA\nNA\n1.943176e-01\n\n\nBROWARD\n7\n0.0000000000\n46\nNaN\nNaN\nNaN\nNA\nNA\n1.000000e+00\n\n\nBROWARD\n8\n-0.0033333333\n56\nNaN\nNaN\nNaN\nNA\nNA\n3.183042e-01\n\n\nBROWARD\n89\n0.0000000000\n59\nNaN\nNaN\nNaN\nNA\nNA\n1.000000e+00\n\n\nBROWARD\n90\nNA\n45\n7.6377333\n0.1370\n28.20000\n1.094842e+00\nNA\nNA\n\n\nDEP\nBAK020\nNA\n3\n32.4333333\n29.9500\n34.59000\n7.206120e-02\nNA\nNA\n\n\nDEP\nBAK021\nNA\n3\n34.6000000\n32.7600\n36.63000\n5.612669e-02\nNA\nNA\n\n\nDEP\nBAK022\nNA\n3\n34.7533333\n33.7500\n36.62000\n4.655944e-02\nNA\nNA\n\n\nDEP\nBAK023\nNA\n3\n32.7700000\n31.5600\n34.65000\n5.036203e-02\nNA\nNA\n\n\nDEP\nBAK024\nNA\n3\n35.5566667\n34.4400\n36.41000\n2.843505e-02\nNA\nNA\n\n\nDEP\nBAK025\nNA\n3\n35.3733333\n33.6800\n36.52000\n4.231552e-02\nNA\nNA\n\n\nDEP\nBAK026\nNA\n3\n35.4566667\n34.2800\n36.24000\n2.926144e-02\nNA\nNA\n\n\nDEP\nBAK027\nNA\n3\n35.6566667\n34.8600\n36.35000\n2.104390e-02\nNA\nNA\n\n\nDEP\nBAK028\nNA\n3\n35.9200000\n34.9600\n36.90000\n2.700876e-02\nNA\nNA\n\n\nDEP\nBAK029\nNA\n3\n35.9166667\n34.7800\n36.88000\n2.953158e-02\nNA\nNA\n\n\nDEP\nBAK030\nNA\n3\n35.1633333\n33.6300\n36.71000\n4.379685e-02\nNA\nNA\n\n\nDEP\nBAK031\nNA\n3\n34.9566667\n33.2100\n36.75000\n5.064732e-02\nNA\nNA\n\n\nDEP\nBAK032\nNA\n3\n35.2666667\n33.7900\n36.81000\n4.284792e-02\nNA\nNA\n\n\nDEP\nBAK033\nNA\n3\n35.4200000\n34.2500\n36.77000\n3.584433e-02\nNA\nNA\n\n\nDEP\nBOC070\nNA\n3\n29.1566667\n27.2200\n30.52000\n5.909758e-02\nNA\nNA\n\n\nDEP\nBOC071\nNA\n3\n33.0000000\n30.0100\n36.06000\n9.168507e-02\nNA\nNA\n\n\nDEP\nBOC072\nNA\n3\n34.3266667\n32.1500\n36.75000\n6.729168e-02\nNA\nNA\n\n\nDEP\nBOC073\nNA\n3\n33.2633333\n30.7500\n36.71000\n9.282517e-02\nNA\nNA\n\n\nDEP\nBOC074\nNA\n3\n34.9833333\n32.9000\n36.69000\n5.496535e-02\nNA\nNA\n\n\nDEP\nBOC075\nNA\n3\n35.2866667\n33.3500\n36.49000\n4.799507e-02\nNA\nNA\n\n\nDEP\nBOC076\nNA\n3\n32.9833333\n30.8100\n34.38000\n5.783285e-02\nNA\nNA\n\n\nDEP\nBOC077\nNA\n3\n34.9400000\n33.1700\n36.12000\n4.467640e-02\nNA\nNA\n\n\nDEP\nBOC078\nNA\n3\n35.1566667\n33.2700\n36.47000\n4.765159e-02\nNA\nNA\n\n\nDEP\nBOC079\nNA\n3\n35.0000000\n33.1300\n36.43000\n4.838367e-02\nNA\nNA\n\n\nDEP\nBOC080\nNA\n3\n35.9300000\n35.0800\n36.64000\n2.196958e-02\nNA\nNA\n\n\nDEP\nBOC081\nNA\n3\n35.8100000\n34.5400\n36.72000\n3.165905e-02\nNA\nNA\n\n\nDEP\nBOC082\nNA\n3\n35.6966667\n34.1500\n36.72000\n3.817116e-02\nNA\nNA\n\n\nDEP\nBOC083\nNA\n3\n35.0733333\n32.3200\n36.72000\n6.841934e-02\nNA\nNA\n\n\nDEP\nBOY090\nNA\n3\n32.0266667\n24.0400\n36.49000\n2.164636e-01\nNA\nNA\n\n\nDEP\nBOY091\nNA\n3\n33.5900000\n31.2500\n36.93000\n8.839261e-02\nNA\nNA\n\n\nDEP\nBOY092\nNA\n3\n34.8333333\n32.4000\n36.39000\n6.127982e-02\nNA\nNA\n\n\nDEP\nBOY093\nNA\n3\n31.5333333\n28.5000\n36.92000\n1.483308e-01\nNA\nNA\n\n\nDEP\nBOY094\nNA\n3\n35.7966667\n34.7500\n36.96000\n3.099757e-02\nNA\nNA\n\n\nDEP\nBOY095\nNA\n3\n36.3566667\n35.8900\n36.95000\n1.488677e-02\nNA\nNA\n\n\nDEP\nBOY096\nNA\n3\n36.0366667\n35.5900\n36.83000\n1.911564e-02\nNA\nNA\n\n\nDEP\nBOY097\nNA\n3\n36.3000000\n35.6900\n36.96000\n1.753374e-02\nNA\nNA\n\n\nDEP\nBOY098\nNA\n3\n36.4333333\n36.1700\n36.90000\n1.112325e-02\nNA\nNA\n\n\nDEP\nBOY099\nNA\n3\n36.4000000\n36.0600\n36.91000\n1.235653e-02\nNA\nNA\n\n\nDEP\nBOY100\nNA\n3\n36.3600000\n36.0600\n36.91000\n1.311798e-02\nNA\nNA\n\n\nDEP\nBOY101\nNA\n3\n34.5233333\n31.8600\n36.96000\n7.408162e-02\nNA\nNA\n\n\nDEP\nGOC001\nNA\n3\n34.6033333\n34.0400\n35.05000\n1.488319e-02\nNA\nNA\n\n\nDEP\nGOC002\nNA\n3\n33.9900000\n31.2400\n35.62000\n7.046727e-02\nNA\nNA\n\n\nDEP\nGOC003\nNA\n3\n34.0500000\n31.2200\n35.74000\n7.242972e-02\nNA\nNA\n\n\nDEP\nGOC004\nNA\n3\n35.4933333\n34.8100\n36.09000\n1.815513e-02\nNA\nNA\n\n\nDEP\nGOC005\nNA\n3\n35.4533333\n34.6600\n36.10000\n2.062198e-02\nNA\nNA\n\n\nDEP\nGOC006\nNA\n3\n35.2800000\n33.9200\n35.98000\n3.338901e-02\nNA\nNA\n\n\nDEP\nGOC007\nNA\n3\n35.3866667\n34.5000\n36.06000\n2.265208e-02\nNA\nNA\n\n\nDEP\nGOC008\nNA\n3\n35.4166667\n34.3500\n36.32000\n2.809707e-02\nNA\nNA\n\n\nDEP\nGOC009\nNA\n3\n35.7633333\n34.4400\n36.88000\n3.447829e-02\nNA\nNA\n\n\nDEP\nGOC010\nNA\n3\n36.1066667\n35.3600\n36.95000\n2.213983e-02\nNA\nNA\n\n\nDEP\nGOC011\nNA\n3\n35.4133333\n33.7100\n36.44000\n4.194675e-02\nNA\nNA\n\n\nDEP\nGOC012\nNA\n3\n36.0000000\n35.4100\n36.76000\n1.919081e-02\nNA\nNA\n\n\nDEP\nGOC013\nNA\n3\n35.7966667\n34.6400\n36.92000\n3.185675e-02\nNA\nNA\n\n\nDEP\nGOC014\nNA\n3\n34.9866667\n33.7300\n35.96000\n3.263186e-02\nNA\nNA\n\n\nDEP\nGOC015\nNA\n3\n35.6833333\n34.8900\n36.40000\n2.123999e-02\nNA\nNA\n\n\nDEP\nHIL050\nNA\n4\n31.5500000\n31.0000\n32.15000\n1.663346e-02\nNA\nNA\n\n\nDEP\nHIL051\nNA\n4\n35.7575000\n35.4500\n36.25000\n9.851541e-03\nNA\nNA\n\n\nDEP\nHIL052\nNA\n4\n31.1300000\n27.8300\n33.34000\n7.610501e-02\nNA\nNA\n\n\nDEP\nHIL053\nNA\n4\n35.5025000\n34.4600\n36.48000\n2.449547e-02\nNA\nNA\n\n\nDEP\nHIL054\nNA\n4\n35.3825000\n34.6200\n35.69000\n1.440628e-02\nNA\nNA\n\n\nDEP\nHIL055\nNA\n4\n35.5225000\n34.7600\n36.72000\n2.427144e-02\nNA\nNA\n\n\nDEP\nHIL056\nNA\n4\n34.3875000\n32.8300\n35.21000\n3.167165e-02\nNA\nNA\n\n\nDEP\nHIL057\nNA\n4\n33.3950000\n30.7600\n34.61000\n5.339356e-02\nNA\nNA\n\n\nDEP\nHIL058\nNA\n4\n34.8400000\n33.2200\n36.79000\n4.843239e-02\nNA\nNA\n\n\nDEP\nHIL059\nNA\n4\n35.4675000\n34.5500\n36.09000\n1.950187e-02\nNA\nNA\n\n\nDEP\nHIL060\nNA\n4\n35.5675000\n33.9200\n36.32000\n3.120478e-02\nNA\nNA\n\n\nDEP\nHIL061\nNA\n4\n36.0500000\n35.0400\n37.01000\n2.240649e-02\nNA\nNA\n\n\nDEP\nHIL062\nNA\n4\n35.7050000\n33.6700\n36.95000\n3.962511e-02\nNA\nNA\n\n\nDEP\nHIL063\nNA\n4\n35.6400000\n33.3800\n36.95000\n4.369724e-02\nNA\nNA\n\n\nDEP\nILW110\nNA\n3\n34.6900000\n32.2500\n35.95000\n6.092478e-02\nNA\nNA\n\n\nDEP\nILW111\nNA\n3\n36.3366667\n36.0200\n36.88000\n1.300855e-02\nNA\nNA\n\n\nDEP\nILW112\nNA\n3\n36.2766667\n35.9400\n36.89000\n1.466532e-02\nNA\nNA\n\n\nDEP\nILW113\nNA\n3\n36.1433333\n35.8900\n36.52000\n9.202690e-03\nNA\nNA\n\n\nDEP\nILW114\nNA\n3\n36.2900000\n35.9600\n36.88000\n1.411277e-02\nNA\nNA\n\n\nDEP\nILW115\nNA\n3\n36.2966667\n35.9600\n36.86000\n1.352608e-02\nNA\nNA\n\n\nDEP\nILW116\nNA\n3\n36.2800000\n35.9200\n36.89000\n1.463977e-02\nNA\nNA\n\n\nDEP\nILW117\nNA\n3\n36.1766667\n35.8400\n36.78000\n1.447543e-02\nNA\nNA\n\n\nDEP\nILW118\nNA\n3\n36.3200000\n35.9700\n36.90000\n1.392802e-02\nNA\nNA\n\n\nDEP\nILW119\nNA\n3\n36.3033333\n35.9700\n36.87000\n1.358796e-02\nNA\nNA\n\n\nDEP\nJUP120\nNA\n3\n30.2366667\n29.7500\n31.07000\n2.397998e-02\nNA\nNA\n\n\nDEP\nJUP121\nNA\n3\n34.6866667\n33.4500\n36.89000\n5.514835e-02\nNA\nNA\n\n\nDEP\nJUP122\nNA\n3\n32.7633333\n30.4100\n34.42000\n6.390706e-02\nNA\nNA\n\n\nDEP\nJUP123\nNA\n3\n32.1233333\n30.0100\n34.34000\n6.745404e-02\nNA\nNA\n\n\nDEP\nJUP124\nNA\n3\n35.6633333\n34.6700\n36.63000\n2.748683e-02\nNA\nNA\n\n\nDEP\nJUP125\nNA\n3\n35.7866667\n34.7900\n36.80000\n2.808598e-02\nNA\nNA\n\n\nDEP\nJUP126\nNA\n3\n35.8866667\n35.1300\n36.77000\n2.305327e-02\nNA\nNA\n\n\nDEP\nJUP127\nNA\n3\n35.8933333\n35.1400\n36.78000\n2.307086e-02\nNA\nNA\n\n\nDEP\nJUP128\nNA\n3\n35.9200000\n35.1400\n36.84000\n2.390322e-02\nNA\nNA\n\n\nDEP\nJUP129\nNA\n3\n35.9133333\n35.1800\n36.79000\n2.267999e-02\nNA\nNA\n\n\nDEP\nPEV040\nNA\n3\n33.7900000\n32.8200\n35.25000\n3.808740e-02\nNA\nNA\n\n\nDEP\nPEV041\nNA\n3\n33.9600000\n32.6100\n35.16000\n3.773853e-02\nNA\nNA\n\n\nDEP\nPEV042\nNA\n3\n34.9733333\n32.9200\n36.79000\n5.563738e-02\nNA\nNA\n\n\nDEP\nPEV043\nNA\n3\n34.6233333\n33.2400\n35.63000\n3.577710e-02\nNA\nNA\n\n\nDEP\nPEV044\nNA\n3\n35.3233333\n33.7200\n36.77000\n4.334312e-02\nNA\nNA\n\n\nDEP\nPEV045\nNA\n3\n34.9166667\n33.7500\n36.50000\n4.071294e-02\nNA\nNA\n\n\nDEP\nPEV046\nNA\n3\n35.0966667\n32.9600\n36.83000\n5.602452e-02\nNA\nNA\n\n\nDEP\nPEV047\nNA\n3\n35.1600000\n33.9800\n36.70000\n3.968367e-02\nNA\nNA\n\n\nDEP\nPEV048\nNA\n3\n35.3333333\n33.6100\n36.64000\n4.407680e-02\nNA\nNA\n\n\nDEP\nPEV049\nNA\n3\n35.6833333\n34.6100\n36.57000\n2.783495e-02\nNA\nNA\n\n\nDEP\nPEV050\nNA\n3\n35.9700000\n35.4200\n36.69000\n1.812187e-02\nNA\nNA\n\n\nDEP\nPEV051\nNA\n3\n35.9266667\n35.4300\n36.68000\n1.846400e-02\nNA\nNA\n\n\nDEP\nPEV052\nNA\n3\n36.1566667\n35.7800\n36.65000\n1.235124e-02\nNA\nNA\n\n\nDEP\nPEV053\nNA\n3\n36.2800000\n35.9300\n36.57000\n8.935813e-03\nNA\nNA\n\n\nDEP\nSTL161\nNA\n3\n28.4666667\n20.8100\n34.96000\n2.510435e-01\nNA\nNA\n\n\nDEP\nSTL162\nNA\n3\n32.2666667\n29.9700\n35.88000\n9.816230e-02\nNA\nNA\n\n\nDEP\nSTL163\nNA\n3\n33.7966667\n30.0900\n36.75000\n1.004036e-01\nNA\nNA\n\n\nDEP\nSTL164\nNA\n3\n35.7066667\n34.8700\n36.30000\n2.087588e-02\nNA\nNA\n\n\nDEP\nSTL165\nNA\n3\n35.8366667\n35.4000\n36.32000\n1.288546e-02\nNA\nNA\n\n\nDEP\nSTL166\nNA\n3\n33.2200000\n29.8300\n35.65000\n9.110276e-02\nNA\nNA\n\n\nDEP\nSTL167\nNA\n3\n34.5100000\n33.2500\n36.72000\n5.564133e-02\nNA\nNA\n\n\nDEP\nSTL168\nNA\n3\n35.1233333\n33.4200\n36.10000\n4.214909e-02\nNA\nNA\n\n\nDEP\nSTL169\nNA\n3\n32.8166667\n31.3300\n35.20000\n6.353485e-02\nNA\nNA\n\n\nDEP\nSTL170\nNA\n3\n35.6233333\n35.1500\n35.98000\n1.198995e-02\nNA\nNA\n\n\nDEP\nSTL171\nNA\n3\n32.9033333\n29.9600\n35.63000\n8.635000e-02\nNA\nNA\n\n\nDEP\nSTL172\nNA\n3\n35.4866667\n34.5000\n36.12000\n2.439991e-02\nNA\nNA\n\n\nDERM_BBWQ\nAC01\n-0.3087500000\n170\n30.7218235\n11.1700\n36.60000\n1.261179e-01\n-0.308750000\n1.166686e-03\n\n\nDERM_BBWQ\nAC02\n-3.3350000000\n38\n27.7965789\n14.7400\n32.94000\n1.472983e-01\nNA\n1.876828e-01\n\n\nDERM_BBWQ\nAC03\n0.0100000000\n197\n19.7782741\n0.9400\n36.69000\n5.015089e-01\nNA\n9.617494e-01\n\n\nDERM_BBWQ\nAC06\n0.7333333333\n208\n14.8847596\n0.3100\n32.25000\n6.606067e-01\n0.733333333\n1.582567e-02\n\n\nDERM_BBWQ\nAR03\n0.0000000000\n174\n0.4441379\n0.1700\n17.16000\n3.257063e+00\nNA\n1.448802e-01\n\n\nDERM_BBWQ\nBB01A\n0.4800000000\n38\n24.4460526\n13.2100\n34.85000\n2.764069e-01\nNA\n6.559105e-01\n\n\nDERM_BBWQ\nBB02\n-0.2966666667\n170\n25.0800588\n2.9000\n35.67000\n3.152694e-01\nNA\n9.627881e-02\n\n\nDERM_BBWQ\nBB04\n-0.0667857143\n174\n30.5628161\n10.0700\n36.71000\n1.675542e-01\nNA\n7.216901e-01\n\n\nDERM_BBWQ\nBB05A\n-0.0663333333\n208\n32.2602885\n15.7400\n36.84000\n1.163765e-01\nNA\n2.419250e-01\n\n\nDERM_BBWQ\nBB08\n-0.5595833333\n161\n27.8024224\n11.9700\n36.47000\n1.851702e-01\n-0.559583333\n2.989218e-03\n\n\nDERM_BBWQ\nBB09\n-0.3400000000\n174\n29.6668391\n7.8700\n36.90000\n1.664162e-01\n-0.340000000\n3.903350e-02\n\n\nDERM_BBWQ\nBB10\n-0.1850000000\n152\n30.6377632\n17.0900\n36.85000\n1.191842e-01\nNA\n2.224458e-01\n\n\nDERM_BBWQ\nBB11\n-0.2770000000\n174\n28.5236782\n14.0200\n36.73000\n1.518605e-01\n-0.277000000\n6.332813e-03\n\n\nDERM_BBWQ\nBB13\nNA\n5\n27.3040000\n24.6000\n28.43000\n5.672605e-02\nNA\nNA\n\n\nDERM_BBWQ\nBB13A\n-0.3750000000\n78\n27.9412821\n16.4400\n32.97000\n1.362388e-01\nNA\n3.487725e-01\n\n\nDERM_BBWQ\nBB14\n-0.2233333333\n199\n30.3046734\n20.8800\n36.71000\n1.067615e-01\n-0.223333333\n7.233536e-04\n\n\nDERM_BBWQ\nBB15\n-0.4766666667\n83\n30.5545783\n21.3200\n34.54000\n8.559739e-02\n-0.476666667\n2.153580e-02\n\n\nDERM_BBWQ\nBB15A\n-0.1500000000\n153\n28.5303268\n12.6900\n36.42000\n1.370768e-01\nNA\n9.022976e-02\n\n\nDERM_BBWQ\nBB17\n-0.1520000000\n176\n31.3602273\n21.0700\n36.84000\n8.974336e-02\nNA\n1.070875e-01\n\n\nDERM_BBWQ\nBB18\n-0.2066666667\n152\n31.9018421\n14.2300\n36.56000\n8.384354e-02\n-0.206666667\n4.115199e-02\n\n\nDERM_BBWQ\nBB22\n-0.1140000000\n174\n32.9982184\n23.2900\n37.07000\n7.761962e-02\n-0.114000000\n1.810599e-02\n\n\nDERM_BBWQ\nBB24\n-0.0710000000\n174\n34.1704598\n22.3100\n38.40000\n7.368096e-02\nNA\n2.649755e-01\n\n\nDERM_BBWQ\nBB25\n0.0440000000\n103\n33.9742718\n26.5600\n37.67000\n6.798571e-02\nNA\n5.604031e-01\n\n\nDERM_BBWQ\nBB26\n-0.3083333333\n132\n32.1089394\n26.2800\n36.78000\n7.054036e-02\n-0.308333333\n7.746956e-04\n\n\nDERM_BBWQ\nBB28\n-0.0425000000\n105\n34.1506667\n28.5500\n37.70000\n6.556165e-02\nNA\n1.387861e-01\n\n\nDERM_BBWQ\nBB31\n-0.1616666667\n169\n32.4393491\n26.5900\n38.37000\n7.460105e-02\n-0.161666667\n1.184344e-02\n\n\nDERM_BBWQ\nBB32\n0.0200000000\n106\n32.7000000\n24.2900\n37.70000\n6.540178e-02\nNA\n8.279929e-01\n\n\nDERM_BBWQ\nBB34\n-0.4566666667\n174\n30.0598851\n0.2400\n39.61000\n1.469855e-01\n-0.456666667\n3.887293e-05\n\n\nDERM_BBWQ\nBB37\n-0.0133333333\n168\n35.1300000\n30.3200\n37.85000\n4.499905e-02\nNA\n7.076661e-01\n\n\nDERM_BBWQ\nBB38\n-0.3029166667\n169\n35.2070414\n24.6700\n38.52000\n6.502436e-02\n-0.302916667\n2.996007e-06\n\n\nDERM_BBWQ\nBB39A\n-0.3212500000\n175\n29.1200000\n7.0000\n41.09000\n1.625316e-01\n-0.321250000\n1.865893e-02\n\n\nDERM_BBWQ\nBB41\n-0.4608333333\n174\n33.2085057\n21.0700\n40.89000\n1.170918e-01\n-0.460833333\n1.415587e-06\n\n\nDERM_BBWQ\nBB47\n-0.6183333333\n170\n33.4459412\n24.3600\n39.14000\n1.070688e-01\n-0.618333333\n1.544249e-07\n\n\nDERM_BBWQ\nBB48\n-1.2695833333\n152\n32.3505921\n22.6500\n40.64000\n1.290819e-01\n-1.269583333\n4.001100e-13\n\n\nDERM_BBWQ\nBB50\n-1.0633333333\n168\n30.5829762\n3.6800\n41.44000\n1.704513e-01\n-1.063333333\n6.456494e-07\n\n\nDERM_BBWQ\nBB51\n-1.1125000000\n170\n26.4109412\n8.4900\n41.65000\n2.442214e-01\n-1.112500000\n2.331907e-04\n\n\nDERM_BBWQ\nBB52\n1.7300000000\n29\n25.1513793\n14.9900\n37.04000\n2.439823e-01\nNA\n2.355335e-01\n\n\nDERM_BBWQ\nBB53\n-1.5500000000\n19\n20.9957895\n12.6900\n41.65000\n4.721226e-01\nNA\n7.277235e-01\n\n\nDERM_BBWQ\nBBKB1\n0.0383333333\n106\n32.5910377\n27.7400\n37.52000\n5.864486e-02\nNA\n9.255901e-01\n\n\nDERM_BBWQ\nBBMB1\n-0.1345000000\n174\n33.1937931\n25.5600\n37.83000\n7.880530e-02\nNA\n9.612171e-02\n\n\nDERM_BBWQ\nBBMB2\n-0.2790000000\n152\n31.7225000\n22.2000\n36.78000\n7.782284e-02\n-0.279000000\n5.527359e-06\n\n\nDERM_BBWQ\nBBMB3\n-0.2433333333\n159\n31.1258491\n18.6900\n36.78000\n8.809963e-02\n-0.243333333\n2.103680e-02\n\n\nDERM_BBWQ\nBBMB4\n-0.2287500000\n152\n31.0994737\n18.2200\n37.10000\n8.747110e-02\n-0.228750000\n1.387249e-02\n\n\nDERM_BBWQ\nBBOR1\n-0.5300000000\n94\n32.2182979\n23.8600\n37.30000\n9.748101e-02\n-0.530000000\n8.358927e-05\n\n\nDERM_BBWQ\nBBOR2\n-1.4350000000\n93\n30.9331183\n22.4000\n37.13000\n1.107103e-01\n-1.435000000\n3.105346e-05\n\n\nDERM_BBWQ\nBBY1\n0.9000000000\n38\n28.1157895\n21.8700\n33.13000\n9.238113e-02\nNA\n6.582534e-01\n\n\nDERM_BBWQ\nBBY4\n2.2400000000\n40\n30.3662500\n26.2200\n38.28000\n8.972399e-02\nNA\n6.773916e-01\n\n\nDERM_BBWQ\nBISC101\n-0.4950000000\n183\n28.5407104\n13.5100\n41.52000\n2.008896e-01\n-0.495000000\n8.514403e-03\n\n\nDERM_BBWQ\nBISC121\n-0.5100000000\n170\n33.9721765\n24.7500\n38.44000\n9.583827e-02\n-0.510000000\n1.516372e-09\n\n\nDERM_BBWQ\nBISC122\n-0.5200000000\n181\n32.4131492\n17.3400\n39.17000\n1.490522e-01\n-0.520000000\n1.515903e-04\n\n\nDERM_BBWQ\nBISC127\n-0.2870000000\n174\n32.4302874\n20.2700\n39.83000\n1.045317e-01\n-0.287000000\n3.733597e-02\n\n\nDERM_BBWQ\nBL01\n-0.1666666667\n129\n14.3259690\n0.4200\n37.77000\n6.694263e-01\nNA\n6.495207e-01\n\n\nDERM_BBWQ\nBL02\n-0.7116666667\n65\n9.3484615\n0.3300\n31.09000\n9.915465e-01\nNA\n4.210638e-01\n\n\nDERM_BBWQ\nBL03\n0.0028571429\n173\n0.4272832\n0.1800\n23.70000\n4.235535e+00\n0.002857143\n1.752611e-03\n\n\nDERM_BBWQ\nBL04\n-0.0100000000\n40\n0.2655000\n0.2200\n0.45000\n1.743734e-01\nNA\n1.336144e-01\n\n\nDERM_BBWQ\nBL05\n-0.0100000000\n41\n0.2787805\n0.2300\n0.67000\n3.265197e-01\nNA\n1.318124e-01\n\n\nDERM_BBWQ\nBL06\n-0.0025000000\n151\n0.2671523\n0.2300\n0.29000\n5.264952e-02\n-0.002500000\n2.212008e-07\n\n\nDERM_BBWQ\nBL12\n-0.0016666667\n163\n0.3722699\n0.2000\n7.03000\n2.088328e+00\nNA\n5.444651e-02\n\n\nDERM_BBWQ\nBS01\n-0.5700000000\n174\n22.5209195\n0.4300\n36.23000\n4.997359e-01\n-0.570000000\n1.165842e-02\n\n\nDERM_BBWQ\nBS04\n-0.0025000000\n173\n0.8971098\n0.2300\n31.09000\n3.643558e+00\nNA\n4.971666e-01\n\n\nDERM_BBWQ\nBS07\n-0.0025000000\n165\n0.2417576\n0.1400\n0.55000\n2.129306e-01\n-0.002500000\n9.039753e-07\n\n\nDERM_BBWQ\nBS08\n0.0000000000\n40\n0.2282500\n0.2200\n0.24000\n2.786388e-02\nNA\n1.000000e+00\n\n\nDERM_BBWQ\nBS09\n0.0000000000\n40\n0.2305000\n0.2200\n0.24000\n2.185820e-02\nNA\n1.296346e-01\n\n\nDERM_BBWQ\nBS10\n-0.0016666667\n170\n0.2733294\n0.1800\n0.30000\n6.431862e-02\n-0.001666667\n2.106311e-06\n\n\nDERM_BBWQ\nBS11\n-0.0040000000\n166\n0.2630723\n0.2000\n0.46000\n1.691011e-01\n-0.004000000\n2.330857e-04\n\n\nDERM_BBWQ\nCD01A\n-0.2300000000\n220\n27.2015000\n4.0900\n38.43000\n1.711304e-01\nNA\n9.818978e-02\n\n\nDERM_BBWQ\nCD02\n0.0016666667\n168\n0.3122619\n0.1900\n0.63000\n2.246142e-01\nNA\n1.069142e-01\n\n\nDERM_BBWQ\nCD03A\n0.0100000000\n40\n0.3065000\n0.2400\n0.50000\n1.955563e-01\nNA\n1.371995e-01\n\n\nDERM_BBWQ\nCD04A\n-0.0200000000\n41\n0.2282927\n0.1600\n0.27000\n1.133411e-01\n-0.020000000\n1.140706e-03\n\n\nDERM_BBWQ\nCD05\n-0.0033333333\n174\n0.3015517\n0.1600\n7.80000\n2.690240e+00\n-0.003333333\n1.734491e-04\n\n\nDERM_BBWQ\nCD09\n-0.0025000000\n162\n0.2406173\n0.1600\n0.28000\n6.896832e-02\n-0.002500000\n2.262885e-11\n\n\nDERM_BBWQ\nCG01\n-0.1533333333\n174\n27.3708621\n11.5800\n36.41000\n1.605977e-01\nNA\n1.770026e-01\n\n\nDERM_BBWQ\nCG02\n2.9300000000\n40\n17.7812500\n0.1300\n34.13000\n4.157732e-01\nNA\n6.812251e-01\n\n\nDERM_BBWQ\nCG02A\n-0.2116666667\n160\n11.0060000\n2.2600\n28.55000\n5.902204e-01\nNA\n7.028225e-01\n\n\nDERM_BBWQ\nCG03\n0.0000000000\n41\n0.3212195\n0.2200\n1.11000\n6.620519e-01\nNA\n1.000000e+00\n\n\nDERM_BBWQ\nCG07\n0.0000000000\n170\n0.2423529\n0.1600\n0.28000\n7.200096e-02\n0.000000000\n1.882377e-03\n\n\nDERM_BBWQ\nCM02\n0.0050000000\n181\n1.5850276\n0.1300\n32.92000\n3.317855e+00\nNA\n6.088317e-02\n\n\nDERM_BBWQ\nCM04\n-0.0100000000\n49\n0.2165306\n0.1700\n0.31000\n1.384045e-01\nNA\n1.389888e-01\n\n\nDERM_BBWQ\nDDC1\n0.0000000000\n40\n0.2265000\n0.0300\n0.24000\n1.436902e-01\nNA\n5.838824e-01\n\n\nDERM_BBWQ\nDDC2\n-0.0100000000\n37\n0.2262162\n0.2100\n0.24000\n2.825034e-02\n-0.010000000\n1.383791e-03\n\n\nDERM_BBWQ\nFC03\n0.0000000000\n170\n0.3365882\n0.2600\n0.64000\n2.133397e-01\nNA\n3.311588e-01\n\n\nDERM_BBWQ\nFC15\n0.0000000000\n154\n0.2620130\n0.2000\n0.29000\n5.909113e-02\nNA\n8.600952e-02\n\n\nDERM_BBWQ\nFC16\n0.0000000000\n33\n0.2609091\n0.2000\n0.30000\n1.110687e-01\nNA\n7.003114e-01\n\n\nDERM_BBWQ\nGL02\n-0.0566666667\n198\n15.6234848\n0.8500\n32.92000\n5.344725e-01\nNA\n5.819382e-01\n\n\nDERM_BBWQ\nGL03\n0.0300000000\n146\n1.0815753\n0.3100\n2.12000\n3.376498e-01\nNA\n5.460398e-02\n\n\nDERM_BBWQ\nIC01\n-0.9450000000\n38\n33.2652632\n26.6300\n36.77000\n8.572019e-02\nNA\n1.403687e-01\n\n\nDERM_BBWQ\nIC02\n-0.3700000000\n38\n31.1339474\n25.9900\n36.26000\n1.041507e-01\nNA\n4.609948e-01\n\n\nDERM_BBWQ\nL31E1\n0.0700000000\n172\n3.6535465\n0.3100\n13.63000\n8.055908e-01\nNA\n3.559345e-01\n\n\nDERM_BBWQ\nLR01\n-0.8050000000\n174\n19.1266667\n0.4800\n35.87000\n5.568128e-01\n-0.805000000\n4.004391e-03\n\n\nDERM_BBWQ\nLR05\n-0.0018333333\n174\n0.2481034\n0.2000\n0.30000\n8.007045e-02\n-0.001833333\n9.823631e-04\n\n\nDERM_BBWQ\nLR06\n0.0000000000\n173\n0.2775145\n0.0000\n1.18000\n3.712213e-01\n0.000000000\n2.193878e-03\n\n\nDERM_BBWQ\nLR07\n0.0200000000\n41\n0.2512195\n0.2100\n0.29000\n9.172420e-02\nNA\n8.832026e-01\n\n\nDERM_BBWQ\nLR08\n0.0000000000\n174\n0.2576437\n0.2100\n0.30000\n7.645897e-02\n0.000000000\n2.559440e-02\n\n\nDERM_BBWQ\nLR10\n0.0000000000\n179\n0.2748603\n0.2000\n0.31000\n6.126340e-02\nNA\n1.713861e-01\n\n\nDERM_BBWQ\nMI01\n0.7450000000\n16\n16.8481250\n2.5500\n25.24000\n3.890056e-01\nNA\n1.175249e-01\n\n\nDERM_BBWQ\nMI02\n0.0508333333\n171\n3.7852632\n0.3200\n32.92000\n1.809674e+00\n0.050833333\n3.810649e-02\n\n\nDERM_BBWQ\nMI03\n0.0063333333\n169\n1.9714793\n0.1700\n32.92000\n2.507591e+00\nNA\n3.604607e-01\n\n\nDERM_BBWQ\nMR01\n-0.5051785714\n174\n25.1325287\n6.6200\n36.26000\n3.095411e-01\n-0.505178571\n2.150198e-02\n\n\nDERM_BBWQ\nMR02\n-2.4400000000\n40\n8.2862500\n1.4000\n23.05000\n6.626768e-01\nNA\n3.347643e-01\n\n\nDERM_BBWQ\nMR03\n-0.1058333333\n174\n9.0904598\n0.5900\n32.92000\n9.402241e-01\nNA\n3.346915e-01\n\n\nDERM_BBWQ\nMR04\n-1.0900000000\n40\n5.5450000\n0.5400\n18.39000\n7.869931e-01\nNA\n3.347643e-01\n\n\nDERM_BBWQ\nMR05\n-0.0880000000\n170\n6.9355294\n0.3100\n32.92000\n1.137229e+00\nNA\n3.845988e-01\n\n\nDERM_BBWQ\nMR06\n0.0950000000\n40\n2.4675000\n0.2100\n16.28000\n1.429138e+00\nNA\n3.285650e-01\n\n\nDERM_BBWQ\nMR07\n-0.0033333333\n170\n4.8277059\n0.2400\n32.91000\n1.308613e+00\nNA\n1.485323e-01\n\n\nDERM_BBWQ\nMR08\n-0.0015476190\n175\n0.2652000\n0.1800\n0.62000\n1.881395e-01\n-0.001547619\n3.081510e-03\n\n\nDERM_BBWQ\nMR11\n0.0050000000\n40\n0.2870000\n0.2200\n0.36000\n9.924395e-02\nNA\n2.838765e-01\n\n\nDERM_BBWQ\nMR15\n0.0000000000\n173\n1.0206358\n0.2600\n32.92000\n4.670305e+00\nNA\n8.844066e-01\n\n\nDERM_BBWQ\nMW01\n-1.1850000000\n65\n6.4909231\n0.2900\n42.01000\n1.588178e+00\n-1.185000000\n4.949888e-04\n\n\nDERM_BBWQ\nMW04\n0.0260000000\n174\n0.6814368\n0.1900\n2.17000\n5.473618e-01\n0.026000000\n4.921039e-04\n\n\nDERM_BBWQ\nMW05\n-0.0050000000\n174\n0.2898276\n0.2400\n0.32000\n7.169395e-02\n-0.005000000\n6.330624e-19\n\n\nDERM_BBWQ\nMW13\n0.0000000000\n173\n0.2706358\n0.2100\n0.39000\n1.069987e-01\nNA\n2.455408e-01\n\n\nDERM_BBWQ\nNO07A\n-0.0020000000\n179\n0.2902235\n0.2200\n0.35000\n5.657671e-02\n-0.002000000\n9.044254e-05\n\n\nDERM_BBWQ\nOC01\n0.0000000000\n41\n0.1931707\n0.1700\n0.24000\n8.540806e-02\nNA\n4.068205e-01\n\n\nDERM_BBWQ\nOL01\n5.1850000000\n51\n14.9941176\n0.2000\n37.12000\n7.288616e-01\nNA\n6.598606e-02\n\n\nDERM_BBWQ\nOL02\n-0.5625000000\n183\n11.6286885\n0.1500\n32.92000\n7.569130e-01\n-0.562500000\n2.829269e-03\n\n\nDERM_BBWQ\nOL03\n-0.1614285714\n206\n4.9510194\n0.0000\n22.29000\n1.039541e+00\n-0.161428571\n7.625286e-03\n\n\nDERM_BBWQ\nOSC1\n0.0000000000\n52\n0.2001923\n0.1800\n0.22000\n7.028892e-02\nNA\n8.497758e-02\n\n\nDERM_BBWQ\nOSC2\n0.0200000000\n55\n0.2198182\n0.1900\n0.25000\n6.976061e-02\n0.020000000\n3.817974e-05\n\n\nDERM_BBWQ\nOSC3\n0.0000000000\n40\n0.2290000\n0.2000\n0.26000\n4.824315e-02\nNA\n7.755617e-02\n\n\nDERM_BBWQ\nPR01\n-0.1042857143\n56\n4.1226786\n0.3100\n38.92000\n1.968183e+00\n-0.104285714\n8.388816e-03\n\n\nDERM_BBWQ\nPR03\n0.0033333333\n173\n0.3304046\n0.2100\n0.52000\n1.521494e-01\n0.003333333\n2.851892e-02\n\n\nDERM_BBWQ\nPR04A\n0.0000000000\n176\n0.3103409\n0.2900\n0.39000\n3.561568e-02\n0.000000000\n1.058467e-10\n\n\nDERM_BBWQ\nPR08\n0.0000000000\n176\n0.2684659\n0.2000\n0.39000\n1.134311e-01\nNA\n1.291374e-01\n\n\nDERM_BBWQ\nSK01\n-0.1837500000\n170\n17.5753529\n0.2600\n35.25000\n6.793814e-01\nNA\n2.929368e-01\n\n\nDERM_BBWQ\nSK02\n0.0033333333\n174\n1.2268391\n0.2300\n32.92000\n3.863959e+00\nNA\n2.119375e-01\n\n\nDERM_BBWQ\nSK05\n0.0000000000\n151\n0.2533113\n0.2000\n0.31000\n1.057046e-01\nNA\n9.602603e-02\n\n\nDERM_BBWQ\nSK09\n-0.0025000000\n174\n0.2655172\n0.1600\n0.31000\n1.051709e-01\n-0.002500000\n4.739633e-06\n\n\nDERM_BBWQ\nSK10\n0.0040000000\n152\n0.3042105\n0.2500\n0.35000\n6.481504e-02\n0.004000000\n1.294246e-10\n\n\nDERM_BBWQ\nSP01\n-0.4441666667\n172\n15.2733140\n0.3900\n36.06000\n7.750876e-01\nNA\n6.446076e-02\n\n\nDERM_BBWQ\nSP03\n0.0000000000\n40\n0.2520000\n0.2300\n0.28000\n4.328388e-02\nNA\n1.296346e-01\n\n\nDERM_BBWQ\nSP04\n0.0000000000\n174\n0.2535632\n0.1600\n0.40000\n8.585652e-02\nNA\n5.682260e-01\n\n\nDERM_BBWQ\nSP05\n0.0000000000\n40\n0.2505000\n0.2200\n0.28000\n4.864064e-02\nNA\n5.612758e-01\n\n\nDERM_BBWQ\nSP08\n0.0000000000\n174\n0.2524138\n0.1600\n0.30000\n5.536478e-02\nNA\n7.730471e-01\n\n\nDERM_BBWQ\nTM02\n-0.0033333333\n170\n3.4627059\n0.0800\n20.22000\n1.571251e+00\n-0.003333333\n3.364907e-02\n\n\nDERM_BBWQ\nTM03A\n0.0000000000\n179\n0.4966480\n0.1500\n16.76000\n3.467248e+00\n0.000000000\n3.451333e-02\n\n\nDERM_BBWQ\nTM05\n0.0000000000\n168\n0.9954167\n0.2000\n32.92000\n4.865449e+00\nNA\n5.658249e-01\n\n\nDERM_BBWQ\nTM06\n0.0000000000\n40\n0.2405000\n0.2200\n0.26000\n5.066312e-02\nNA\n5.612758e-01\n\n\nDERM_BBWQ\nTM07A\n-0.0050000000\n40\n0.2470000\n0.2300\n0.27000\n4.510175e-02\n-0.005000000\n3.315999e-02\n\n\nDERM_BBWQ\nTM08\n0.0000000000\n167\n0.6140120\n0.2100\n31.09000\n5.443437e+00\n0.000000000\n9.993259e-03\n\n\nDERM_BBWQ\nWC02\n0.0300000000\n172\n7.3477326\n0.8200\n31.09000\n9.132231e-01\nNA\n5.422967e-01\n\n\nDERM_BBWQ\nWC03\n0.1733333333\n188\n5.5806915\n0.0700\n24.42000\n1.012030e+00\n0.173333333\n5.194145e-04\n\n\nDERM_BBWQ\nWC04\n0.0963333333\n194\n3.1209278\n0.0900\n13.81000\n1.018689e+00\n0.096333333\n2.697130e-02\n\n\nFIU_WQMP\n200-W\n-0.0250000000\n31\n35.9994065\n34.3400\n36.64000\n1.550351e-02\nNA\n5.995102e-01\n\n\nFIU_WQMP\n201-W\n-0.0866666667\n31\n35.9725613\n33.6500\n37.28000\n2.897156e-02\nNA\n2.962699e-01\n\n\nFIU_WQMP\n203-W\n-0.0050000000\n31\n35.9664194\n34.1200\n36.57000\n1.667446e-02\nNA\n4.033953e-01\n\n\nFIU_WQMP\n204-W\n-0.0398333333\n32\n36.0878250\n33.8800\n37.34000\n2.851560e-02\nNA\n2.548666e-01\n\n\nFIU_WQMP\n206-W\n-0.0175000000\n32\n35.9852594\n34.1700\n36.55000\n1.537290e-02\nNA\n8.351215e-01\n\n\nFIU_WQMP\n207-W\n-0.0290000000\n31\n35.8487161\n34.1020\n37.34000\n2.698116e-02\nNA\n4.033953e-01\n\n\nFIU_WQMP\n209-W\n0.0640000000\n30\n36.6563100\n33.8000\n39.37000\n3.361679e-02\nNA\n9.086767e-01\n\n\nFIU_WQMP\n210-W\n-0.0469000000\n31\n35.9759290\n34.2200\n36.55000\n1.488185e-02\nNA\n2.100750e-01\n\n\nFIU_WQMP\n211-W\n0.0150000000\n29\n35.8190552\n30.8200\n37.48000\n3.997377e-02\nNA\n9.061856e-01\n\n\nFIU_WQMP\n212-W\n-0.0366666667\n31\n35.9656645\n33.1400\n36.92000\n2.475104e-02\nNA\n7.527138e-01\n\n\nFIU_WQMP\n213-W\n-0.0166666667\n29\n35.9761000\n34.2200\n36.63000\n1.512872e-02\nNA\n4.884223e-01\n\n\nFIU_WQMP\n214-W\n-0.0380000000\n31\n35.9413419\n32.7500\n38.26000\n3.838841e-02\nNA\n5.308693e-01\n\n\nFIU_WQMP\n215-W\n-0.0502875000\n31\n35.9082871\n33.3000\n37.29000\n2.977997e-02\nNA\n5.308693e-01\n\n\nFIU_WQMP\n216-W\n-0.0085714286\n31\n36.0214097\n34.4900\n36.60000\n1.396217e-02\nNA\n1.000000e+00\n\n\nFIU_WQMP\n217-W\n-0.1170750000\n31\n35.8990613\n32.3300\n37.92000\n3.845451e-02\nNA\n4.033953e-01\n\n\nFIU_WQMP\n218-W\n-0.0650000000\n29\n35.9992621\n34.4400\n36.64000\n1.636397e-02\nNA\n1.030639e-01\n\n\nFIU_WQMP\n219-W\n-0.0225000000\n30\n35.9655733\n33.5100\n36.55000\n1.671998e-02\nNA\n2.932707e-01\n\n\nFIU_WQMP\n220-W\n-0.0400000000\n31\n36.0137871\n33.7898\n37.28000\n2.915036e-02\nNA\n4.033953e-01\n\n\nFIU_WQMP\n222-W\n-0.0100000000\n31\n35.9994871\n33.6500\n36.56000\n1.598796e-02\nNA\n9.090729e-01\n\n\nFIU_WQMP\n223-W\n-0.0328833333\n31\n36.0627452\n33.9000\n38.82000\n2.921448e-02\nNA\n7.373157e-01\n\n\nFIU_WQMP\n224-W\n-0.0060000000\n31\n35.9848452\n34.1500\n36.71000\n1.638695e-02\nNA\n9.053088e-01\n\n\nFIU_WQMP\n225-W\n0.0107142857\n31\n35.9962290\n33.7900\n36.57000\n1.545937e-02\nNA\n6.317723e-01\n\n\nFIU_WQMP\n226-W\n-0.1050000000\n30\n36.1791400\n33.8330\n37.85000\n3.161022e-02\nNA\n2.439771e-01\n\n\nFIU_WQMP\n227-W\n-0.0466666667\n29\n36.0216586\n34.3262\n37.01000\n1.961901e-02\nNA\n1.969111e-01\n\n\nFIU_WQMP\n228-W\n0.0133333333\n31\n36.0174871\n34.1000\n36.62000\n1.413870e-02\nNA\n7.211867e-01\n\n\nFIU_WQMP\n229-W\n-0.1149885714\n31\n36.1049097\n29.8400\n38.23000\n4.513056e-02\nNA\n2.187580e-01\n\n\nFIU_WQMP\n230-W\n-0.0466666667\n29\n35.9516897\n32.6700\n37.24000\n2.766857e-02\nNA\n4.294622e-01\n\n\nFIU_WQMP\n231-W\n0.0020000000\n30\n36.0404567\n34.2000\n36.61000\n1.386647e-02\nNA\n7.173273e-01\n\n\nFIU_WQMP\n232-W\n-0.1031000000\n30\n35.7897033\n31.2800\n37.63000\n3.634338e-02\nNA\n1.213353e-01\n\n\nFIU_WQMP\n235-W\n-0.0571428571\n30\n35.9636567\n32.0000\n38.05000\n3.944668e-02\nNA\n2.439771e-01\n\n\nFIU_WQMP\n237-W\n-0.0025333333\n31\n36.0082065\n34.4000\n36.69000\n1.479637e-02\nNA\n9.078685e-01\n\n\nFIU_WQMP\n238-W\n-0.0960000000\n31\n36.1980935\n32.4200\n38.68000\n3.941768e-02\nNA\n2.418354e-01\n\n\nFIU_WQMP\n239-W\n-0.0313400000\n31\n36.0370774\n34.7600\n36.88000\n1.578042e-02\nNA\n4.050116e-01\n\n\nFIU_WQMP\n241-W\n-0.0900000000\n30\n35.9067400\n31.8000\n37.86000\n4.067706e-02\nNA\n6.233364e-01\n\n\nFIU_WQMP\n242-W\n-0.0500000000\n31\n35.9415806\n31.7800\n37.69000\n3.551608e-02\nNA\n2.585330e-01\n\n\nFIU_WQMP\n243-W\n-0.0233333333\n31\n35.9312484\n33.8700\n36.65000\n1.997275e-02\nNA\n2.418354e-01\n\n\nFIU_WQMP\n244-W\n-0.1200000000\n31\n36.1167710\n32.6200\n39.04000\n4.002215e-02\nNA\n1.751506e-01\n\n\nFIU_WQMP\n246-W\n-0.0257142857\n31\n35.9423839\n34.2700\n36.65000\n1.723892e-02\nNA\n3.424043e-01\n\n\nFIU_WQMP\n247-W\n-0.0853571429\n31\n36.0170839\n33.4400\n38.06000\n3.203175e-02\nNA\n8.782510e-02\n\n\nFIU_WQMP\n248-W\n-0.0500000000\n31\n36.0064161\n34.2700\n36.89000\n1.709389e-02\nNA\n2.373018e-01\n\n\nFIU_WQMP\n249-W\n-0.0277071429\n30\n36.0040967\n34.3300\n36.84000\n1.655183e-02\nNA\n6.867278e-01\n\n\nFIU_WQMP\n250-W\n0.0125770833\n31\n36.1667129\n32.1000\n38.36070\n3.523790e-02\nNA\n6.936406e-01\n\n\nFIU_WQMP\n252-W\n-0.0268571429\n31\n35.9616806\n34.4100\n36.66000\n1.549794e-02\nNA\n5.114818e-01\n\n\nFIU_WQMP\n253-W\n0.0395000000\n33\n36.1357000\n33.9000\n37.47000\n2.261874e-02\nNA\n4.150612e-01\n\n\nFIU_WQMP\n254-W\n0.0400000000\n31\n36.0337903\n33.5600\n37.24000\n2.519864e-02\nNA\n1.000000e+00\n\n\nFIU_WQMP\n255-W\n-0.0125000000\n31\n35.9956548\n34.4000\n36.98000\n1.922339e-02\nNA\n7.910815e-01\n\n\nFIU_WQMP\n256-W\n-0.0256714286\n30\n35.9366500\n33.7057\n36.88000\n1.940198e-02\nNA\n3.056959e-01\n\n\nFIU_WQMP\n259-W\n0.0083888889\n31\n35.9853387\n34.0864\n36.72000\n1.719377e-02\nNA\n6.884997e-01\n\n\nFIU_WQMP\n260-W\n0.1150000000\n31\n36.2974903\n33.6000\n38.79000\n2.878793e-02\nNA\n2.893148e-01\n\n\nFIU_WQMP\n263-W\n0.0157142857\n31\n35.9530903\n34.1259\n36.60000\n1.795020e-02\nNA\n4.267767e-01\n\n\nFIU_WQMP\n264-W\n0.0134285714\n31\n36.0239452\n34.0400\n36.63000\n1.413615e-02\nNA\n7.211867e-01\n\n\nFIU_WQMP\n266-W\n0.1000000000\n31\n36.3409935\n33.9400\n38.78000\n3.161253e-02\nNA\n1.203002e-01\n\n\nFIU_WQMP\n267-W\n0.0446666667\n32\n35.9927875\n34.0051\n36.72000\n1.691884e-02\nNA\n2.399850e-01\n\n\nFIU_WQMP\n268-W\n0.0828500000\n31\n36.1837258\n33.5700\n37.61000\n2.686974e-02\nNA\n4.373020e-01\n\n\nFIU_WQMP\n269-W\n0.0400000000\n31\n36.1755968\n34.3766\n37.77000\n1.885959e-02\nNA\n6.233364e-01\n\n\nFIU_WQMP\n270-W\n-0.0003333333\n31\n36.0501355\n33.8291\n36.79000\n1.758676e-02\nNA\n1.000000e+00\n\n\nFIU_WQMP\n271-W\n-0.0100000000\n31\n36.0377258\n34.0400\n37.24000\n2.280508e-02\nNA\n5.962416e-01\n\n\nFIU_WQMP\n272-W\n0.0154285714\n31\n36.0284065\n34.3800\n37.46000\n1.830122e-02\nNA\n4.880741e-01\n\n\nFIU_WQMP\n273-W\n-0.0087500000\n31\n36.0233097\n33.5499\n36.68000\n1.808695e-02\nNA\n7.794345e-01\n\n\nFIU_WQMP\n275-W\n-0.0346666667\n31\n36.0440903\n34.2900\n37.42000\n1.892132e-02\nNA\n5.186050e-01\n\n\nFIU_WQMP\n276-W\n-0.0190357143\n31\n36.0750355\n34.2900\n36.84000\n1.537975e-02\nNA\n4.008142e-01\n\n\nFIU_WQMP\n278-W\n-0.0322750000\n31\n36.0387677\n34.5200\n37.16000\n1.769178e-02\nNA\n3.316851e-01\n\n\nFIU_WQMP\n280-W\n-0.0241000000\n30\n36.0976767\n34.4500\n36.69000\n1.526909e-02\nNA\n4.008142e-01\n\n\nFIU_WQMP\n281-W\n-0.0231833333\n31\n36.1110871\n34.6400\n37.09000\n1.621716e-02\nNA\n4.267767e-01\n\n\nFIU_WQMP\n282-W\n-0.0135000000\n29\n36.4930655\n29.9300\n40.22310\n6.146699e-02\nNA\n1.000000e+00\n\n\nFIU_WQMP\n284-W\n0.0594666667\n30\n35.9009000\n28.6300\n40.36000\n7.563995e-02\nNA\n1.000000e+00\n\n\nFIU_WQMP\n285-W\n0.0209555556\n31\n36.5252581\n32.3500\n40.29570\n4.281317e-02\nNA\n9.211266e-01\n\n\nFIU_WQMP\n287-W\n-0.0808500000\n31\n36.1011129\n29.6400\n40.61000\n6.676529e-02\nNA\n4.882447e-01\n\n\nFIU_WQMP\n288-W\n0.0100000000\n31\n36.0460065\n30.9300\n39.02000\n5.267620e-02\nNA\n9.211266e-01\n\n\nFIU_WQMP\n289-W\n-0.0638916667\n30\n36.2772033\n29.5100\n39.29620\n5.242009e-02\nNA\n5.897738e-01\n\n\nFIU_WQMP\n290-W\n0.0019500000\n31\n35.7344258\n32.3300\n37.85280\n3.830713e-02\nNA\n1.000000e+00\n\n\nFIU_WQMP\n291-W\n-0.1124000000\n31\n36.1474032\n30.5500\n39.52000\n5.112051e-02\nNA\n2.760823e-01\n\n\nFIU_WQMP\n292-W\n-0.0843750000\n31\n36.4770097\n30.7200\n39.07140\n4.994641e-02\nNA\n3.728579e-01\n\n\nFIU_WQMP\n294-W\n-0.1400000000\n31\n36.1857581\n30.1700\n39.81000\n5.412527e-02\nNA\n3.728579e-01\n\n\nFIU_WQMP\n295-W\n-0.1035714286\n32\n36.0942531\n33.4500\n38.34000\n2.670747e-02\nNA\n1.509623e-01\n\n\nFIU_WQMP\n296-W\n-0.0358000000\n31\n36.1202742\n33.3200\n38.73000\n3.129309e-02\nNA\n8.030889e-01\n\n\nFIU_WQMP\n298-W\nNA\n2\n36.7200000\n35.8600\n37.58000\n3.312156e-02\nNA\nNA\n\n\nFIU_WQMP\n301-W\n-0.0369944444\n31\n36.1997452\n33.7800\n38.15000\n3.120934e-02\nNA\n4.988805e-01\n\n\nFIU_WQMP\n302-W\n-0.0128119048\n31\n36.0219323\n33.8800\n37.63000\n2.280848e-02\nNA\n8.924139e-01\n\n\nFIU_WQMP\n305-W\n-0.0279250000\n31\n36.0139839\n33.9300\n37.55000\n2.344379e-02\nNA\n4.988805e-01\n\n\nFIU_WQMP\n307-W\n-0.0479666667\n31\n36.1197194\n31.9900\n37.99000\n3.257983e-02\nNA\n3.437646e-01\n\n\nFIU_WQMP\n309-W\n0.0157142857\n31\n36.0365613\n34.2000\n37.59000\n2.157934e-02\nNA\n1.000000e+00\n\n\nFIU_WQMP\n310-W\n0.0651500000\n35\n36.4879657\n32.4400\n38.21000\n3.097058e-02\nNA\n6.633788e-01\n\n\nFIU_WQMP\n312-W\n0.0120000000\n32\n35.9565562\n34.1300\n37.21000\n1.960542e-02\nNA\n1.000000e+00\n\n\nFIU_WQMP\n314-W\n-0.0392857143\n31\n36.1469935\n31.8500\n38.26000\n3.559173e-02\nNA\n3.437646e-01\n\n\nFIU_WQMP\n315-W\n-0.0320000000\n31\n36.0124226\n34.1800\n37.99000\n2.206892e-02\nNA\n1.000000e+00\n\n\nFIU_WQMP\n316-W\n-0.0157142857\n32\n36.2358844\n34.5300\n37.58000\n2.291433e-02\nNA\n6.810956e-01\n\n\nFIU_WQMP\n317-W\n0.0599250000\n31\n36.3800000\n34.5400\n39.05000\n2.628386e-02\nNA\n2.780757e-01\n\n\nFIU_WQMP\n318-W\n0.0995833333\n30\n35.9377467\n34.1700\n37.26000\n1.974326e-02\nNA\n3.316851e-01\n\n\nFIU_WQMP\n319-W\n0.0220333333\n31\n36.0223484\n34.6700\n37.06000\n1.583180e-02\nNA\n7.910815e-01\n\n\nFIU_WQMP\n322-W\n-0.0325000000\n31\n36.0570258\n34.6380\n36.72000\n1.580568e-02\nNA\n4.267767e-01\n\n\nFIU_WQMP\n324-W\n0.0157500000\n31\n35.9755452\n31.8259\n37.10000\n2.578153e-02\nNA\n7.910815e-01\n\n\nFIU_WQMP\n325-W\n0.0133333333\n31\n36.2502484\n34.9577\n37.54000\n1.667183e-02\nNA\n7.910815e-01\n\n\nFIU_WQMP\n328-W\n-0.0350000000\n31\n36.0777677\n34.6355\n36.55000\n1.334832e-02\nNA\n1.415789e-01\n\n\nFIU_WQMP\n330-W\n0.0080000000\n31\n36.0400484\n34.9767\n36.69000\n1.339691e-02\nNA\n7.910815e-01\n\n\nFIU_WQMP\n332-W\n0.0008500000\n31\n36.1019226\n34.5800\n36.66000\n1.395260e-02\nNA\n1.000000e+00\n\n\nFIU_WQMP\n333-W\n-0.0133500000\n30\n36.0889033\n34.9447\n36.63000\n1.284151e-02\nNA\n5.873648e-01\n\n\nFIU_WQMP\n335-W\n-0.0191857143\n31\n36.1034903\n34.8057\n36.59000\n1.288890e-02\nNA\n1.415789e-01\n\n\nFIU_WQMP\n337-W\n-0.0177166667\n30\n36.0780700\n34.6500\n36.57000\n1.342710e-02\nNA\n6.884997e-01\n\n\nFIU_WQMP\n400-W\n-0.0128571429\n31\n36.0219645\n33.7800\n36.59000\n1.579843e-02\nNA\n7.318812e-01\n\n\nFIU_WQMP\n401-W\n-0.0028571429\n31\n36.0436032\n34.3900\n36.92000\n1.634372e-02\nNA\n1.000000e+00\n\n\nFIU_WQMP\n402-W\n-0.0407555556\n31\n36.0962871\n34.3900\n37.04000\n1.542843e-02\nNA\n3.580197e-01\n\n\nFIU_WQMP\n403-W\n-0.0150000000\n30\n36.0926000\n33.4364\n36.92000\n1.870384e-02\nNA\n3.814706e-01\n\n\nFIU_WQMP\n500-W\n-0.0485714286\n30\n35.8438700\n30.1500\n38.00000\n5.532632e-02\nNA\n8.112024e-01\n\n\nFIU_WQMP\n501-W\n-0.2158333333\n38\n34.9194342\n23.3000\n44.16000\n1.248129e-01\nNA\n5.420709e-01\n\n\nFIU_WQMP\n502-W\n-0.1225000000\n35\n35.9775000\n27.9300\n38.65000\n5.179107e-02\nNA\n1.182959e-01\n\n\nFIU_WQMP\n503-W\n-0.3485714286\n37\n36.8218595\n32.6900\n40.81000\n5.378485e-02\nNA\n2.668156e-01\n\n\nFIU_WQMP\n504-W\n-0.1312130952\n32\n35.9736438\n32.8000\n38.24000\n4.070879e-02\nNA\n8.610316e-02\n\n\nFIU_WQMP\n505-W\n-0.0097125000\n31\n36.2711194\n32.7700\n38.31000\n3.431060e-02\nNA\n1.000000e+00\n\n\nFIU_WQMP\n506-W\n0.1037500000\n32\n36.5650094\n30.2900\n39.11000\n4.533813e-02\n0.103750000\n2.865573e-02\n\n\nFIU_WQMP\n507-W\n-0.0939333333\n34\n36.4945059\n28.7300\n39.52000\n5.676696e-02\nNA\n4.136862e-01\n\n\nFIU_WQMP\n508-W\n0.0454000000\n33\n36.3368970\n32.8700\n38.70000\n3.313233e-02\nNA\n2.099542e-01\n\n\nFIU_WQMP\n509-W\n-0.4241666667\n9\n36.4381778\n35.0100\n37.33000\n1.918545e-02\nNA\n4.795001e-01\n\n\nMiamiBeach\n#1\nNA\n1\n37.6000000\n37.6000\n37.60000\nNA\nNA\nNA\n\n\nMiamiBeach\n#10\nNA\n1\n34.4000000\n34.4000\n34.40000\nNA\nNA\nNA\n\n\nMiamiBeach\n#11\nNA\n1\n34.0000000\n34.0000\n34.00000\nNA\nNA\nNA\n\n\nMiamiBeach\n#12\nNA\n1\n35.4000000\n35.4000\n35.40000\nNA\nNA\nNA\n\n\nMiamiBeach\n#13\nNA\n1\n35.6000000\n35.6000\n35.60000\nNA\nNA\nNA\n\n\nMiamiBeach\n#14\nNA\n1\n37.1000000\n37.1000\n37.10000\nNA\nNA\nNA\n\n\nMiamiBeach\n#15\nNA\n1\n37.0000000\n37.0000\n37.00000\nNA\nNA\nNA\n\n\nMiamiBeach\n#16\nNA\n1\n35.8000000\n35.8000\n35.80000\nNA\nNA\nNA\n\n\nMiamiBeach\n#17\nNA\n1\n34.9000000\n34.9000\n34.90000\nNA\nNA\nNA\n\n\nMiamiBeach\n#18\nNA\n1\n36.5000000\n36.5000\n36.50000\nNA\nNA\nNA\n\n\nMiamiBeach\n#19\nNA\n1\n36.3000000\n36.3000\n36.30000\nNA\nNA\nNA\n\n\nMiamiBeach\n#2\nNA\n1\n37.5000000\n37.5000\n37.50000\nNA\nNA\nNA\n\n\nMiamiBeach\n#20\nNA\n1\n37.4000000\n37.4000\n37.40000\nNA\nNA\nNA\n\n\nMiamiBeach\n#21\nNA\n1\n37.0000000\n37.0000\n37.00000\nNA\nNA\nNA\n\n\nMiamiBeach\n#22\nNA\n1\n37.2000000\n37.2000\n37.20000\nNA\nNA\nNA\n\n\nMiamiBeach\n#23\nNA\n1\n37.5000000\n37.5000\n37.50000\nNA\nNA\nNA\n\n\nMiamiBeach\n#24\nNA\n1\n37.7000000\n37.7000\n37.70000\nNA\nNA\nNA\n\n\nMiamiBeach\n#3\nNA\n1\n37.8000000\n37.8000\n37.80000\nNA\nNA\nNA\n\n\nMiamiBeach\n#3A\nNA\n1\n9.5000000\n9.5000\n9.50000\nNA\nNA\nNA\n\n\nMiamiBeach\n#3B\nNA\n1\n37.7000000\n37.7000\n37.70000\nNA\nNA\nNA\n\n\nMiamiBeach\n#4\nNA\n1\n37.7000000\n37.7000\n37.70000\nNA\nNA\nNA\n\n\nMiamiBeach\n#5\nNA\n1\n35.9000000\n35.9000\n35.90000\nNA\nNA\nNA\n\n\nMiamiBeach\n#6\nNA\n1\n35.1000000\n35.1000\n35.10000\nNA\nNA\nNA\n\n\nMiamiBeach\n#7\nNA\n1\n35.2000000\n35.2000\n35.20000\nNA\nNA\nNA\n\n\nMiamiBeach\n#8\nNA\n1\n34.1000000\n34.1000\n34.10000\nNA\nNA\nNA\n\n\nMiamiBeach\n#9\nNA\n1\n34.0000000\n34.0000\n34.00000\nNA\nNA\nNA\n\n\nMiamiBeach\n1\nNA\n11\n33.0545455\n29.1000\n36.70000\n7.821871e-02\nNA\nNA\n\n\nMiamiBeach\n10\nNA\n11\n31.5545455\n13.7000\n37.80000\n2.184868e-01\nNA\nNA\n\n\nMiamiBeach\n11\nNA\n11\n32.9363636\n25.2000\n37.30000\n1.203657e-01\nNA\nNA\n\n\nMiamiBeach\n12\nNA\n11\n32.4181818\n23.0000\n36.40000\n1.238403e-01\nNA\nNA\n\n\nMiamiBeach\n13\nNA\n11\n32.4181818\n23.9000\n35.80000\n1.105147e-01\nNA\nNA\n\n\nMiamiBeach\n14\nNA\n11\n32.2545455\n26.0000\n36.80000\n9.887468e-02\nNA\nNA\n\n\nMiamiBeach\n15\nNA\n11\n32.3545455\n25.3000\n36.20000\n9.820984e-02\nNA\nNA\n\n\nMiamiBeach\n16\n0.4523809524\n55\n30.2254545\n19.2000\n40.00000\n1.434083e-01\n0.452380952\n3.538882e-02\n\n\nMiamiBeach\n17\n0.3166666667\n90\n29.0622222\n7.0000\n37.50000\n1.933720e-01\nNA\n6.505185e-02\n\n\nMiamiBeach\n18\n0.4767857143\n56\n29.6946429\n7.0000\n39.20000\n1.837768e-01\nNA\n1.382191e-01\n\n\nMiamiBeach\n19\n0.4500000000\n91\n29.3692308\n14.2000\n39.10000\n1.877536e-01\n0.450000000\n3.807243e-02\n\n\nMiamiBeach\n2\n0.1297619048\n51\n31.8450980\n19.0000\n40.30000\n1.255080e-01\nNA\n5.531667e-01\n\n\nMiamiBeach\n20\nNA\n11\n32.8545455\n27.5000\n36.20000\n8.046436e-02\nNA\nNA\n\n\nMiamiBeach\n21\n0.0214285714\n50\n31.4060000\n21.1000\n39.70000\n1.364213e-01\nNA\n1.000000e+00\n\n\nMiamiBeach\n22\n0.3250000000\n86\n31.1790698\n16.5000\n39.60000\n1.509135e-01\n0.325000000\n1.996732e-02\n\n\nMiamiBeach\n23\n0.2187500000\n52\n31.4692308\n20.9000\n40.00000\n1.417452e-01\nNA\n1.613489e-01\n\n\nMiamiBeach\n24\n0.0791666667\n51\n31.5647059\n21.1000\n39.90000\n1.428917e-01\nNA\n6.099547e-01\n\n\nMiamiBeach\n25\n0.4285714286\n50\n31.6380000\n7.0000\n39.90000\n1.827612e-01\nNA\n2.270802e-01\n\n\nMiamiBeach\n26\n0.1937500000\n52\n31.8346154\n21.0000\n39.60000\n1.371871e-01\nNA\n1.859483e-01\n\n\nMiamiBeach\n27\n0.1366666667\n52\n32.0576923\n22.4000\n39.60000\n1.333269e-01\nNA\n8.047877e-01\n\n\nMiamiBeach\n28\n0.0900000000\n52\n32.0769231\n22.5000\n39.90000\n1.327616e-01\nNA\n8.047877e-01\n\n\nMiamiBeach\n29\n0.2937500000\n52\n31.7346154\n20.6000\n39.70000\n1.480275e-01\nNA\n2.471384e-01\n\n\nMiamiBeach\n3\nNA\n11\n32.5181818\n27.1000\n35.60000\n8.013034e-02\nNA\nNA\n\n\nMiamiBeach\n30\n0.3145833333\n52\n32.1903846\n21.7000\n40.50000\n1.395423e-01\nNA\n1.584944e-01\n\n\nMiamiBeach\n31\n0.3404761905\n52\n32.2000000\n21.1000\n38.40000\n1.337717e-01\nNA\n1.613489e-01\n\n\nMiamiBeach\n32\n0.2166666667\n52\n31.9461538\n20.8000\n39.30000\n1.403920e-01\nNA\n3.648100e-01\n\n\nMiamiBeach\n33\n0.6500000000\n52\n30.9711538\n7.0000\n40.10000\n1.899516e-01\n0.650000000\n1.688638e-02\n\n\nMiamiBeach\n34\n0.6166666667\n87\n31.4873563\n15.7000\n40.20000\n1.592201e-01\n0.616666667\n1.360221e-04\n\n\nMiamiBeach\n35\n0.5869047619\n52\n31.6173077\n20.2000\n39.50000\n1.618930e-01\nNA\n6.896362e-02\n\n\nMiamiBeach\n36\n0.3988095238\n52\n32.1788462\n20.2000\n40.00000\n1.427301e-01\nNA\n2.841657e-01\n\n\nMiamiBeach\n37\n0.8666666667\n52\n49.3019231\n7.0000\n933.00000\n2.537354e+00\n0.866666667\n3.933027e-03\n\n\nMiamiBeach\n38\n0.9000000000\n88\n32.0102273\n13.1000\n39.70000\n1.692107e-01\n0.900000000\n1.603719e-06\n\n\nMiamiBeach\n39\n0.4166666667\n51\n33.2607843\n21.7000\n39.90000\n1.429346e-01\nNA\n1.049515e-01\n\n\nMiamiBeach\n3A\n-5.1000000000\n16\n20.5937500\n8.4000\n32.60000\n3.962497e-01\nNA\n6.985354e-01\n\n\nMiamiBeach\n3B\nNA\n9\n32.5444444\n28.1000\n36.00000\n8.684326e-02\nNA\nNA\n\n\nMiamiBeach\n3b\nNA\n1\n32.5000000\n32.5000\n32.50000\nNA\nNA\nNA\n\n\nMiamiBeach\n4\n0.3428571429\n88\n30.2852273\n15.4000\n39.70000\n1.804812e-01\nNA\n5.589415e-02\n\n\nMiamiBeach\n40\n0.4452380952\n51\n33.1254902\n21.2000\n39.60000\n1.402150e-01\n0.445238095\n3.418063e-02\n\n\nMiamiBeach\n41\nNA\n11\n36.6454545\n34.4000\n38.90000\n4.198112e-02\nNA\nNA\n\n\nMiamiBeach\n42\n0.1733333333\n66\n30.7772727\n17.8000\n40.30000\n1.668702e-01\nNA\n5.843923e-01\n\n\nMiamiBeach\n45\n-2.0500000000\n28\n30.7392857\n21.9000\n41.10000\n1.647304e-01\nNA\n1.048527e-01\n\n\nMiamiBeach\n46\n0.8000000000\n63\n31.9904762\n19.9000\n40.70000\n1.652626e-01\nNA\n9.037691e-02\n\n\nMiamiBeach\n47\n0.5875000000\n64\n31.8921875\n19.1000\n40.20000\n1.682964e-01\n0.587500000\n2.665374e-02\n\n\nMiamiBeach\n48\n-1.7000000000\n28\n31.4321429\n23.0000\n40.10000\n1.714930e-01\nNA\n1.048527e-01\n\n\nMiamiBeach\n5\nNA\n11\n32.2454545\n23.5000\n36.30000\n1.170548e-01\nNA\nNA\n\n\nMiamiBeach\n52\n0.5875000000\n64\n31.3218750\n16.9000\n40.00000\n1.755187e-01\nNA\n5.694628e-02\n\n\nMiamiBeach\n54\n0.0000000000\n63\n31.2206349\n17.6000\n40.10000\n1.652341e-01\nNA\n1.000000e+00\n\n\nMiamiBeach\n56\n0.1500000000\n60\n31.8500000\n16.6000\n40.20000\n1.549661e-01\nNA\n7.820214e-01\n\n\nMiamiBeach\n59\n-0.8500000000\n26\n31.5000000\n7.0000\n48.90000\n2.402770e-01\nNA\n8.101812e-01\n\n\nMiamiBeach\n6\nNA\n11\n32.0545455\n22.6000\n36.10000\n1.306426e-01\nNA\nNA\n\n\nMiamiBeach\n60\n0.2000000000\n60\n31.4716667\n7.0000\n40.40000\n1.797521e-01\nNA\n2.123694e-01\n\n\nMiamiBeach\n61\n-0.3500000000\n21\n30.2000000\n18.3000\n44.70000\n2.082252e-01\nNA\n1.000000e+00\n\n\nMiamiBeach\n62\n-0.9500000000\n22\n29.2454545\n20.3000\n40.10000\n1.867122e-01\nNA\n7.518296e-01\n\n\nMiamiBeach\n63\n1.1375000000\n57\n30.2789474\n16.0000\n39.70000\n1.885275e-01\n1.137500000\n1.303649e-02\n\n\nMiamiBeach\n64\nNA\n6\n28.5166667\n25.0000\n35.10000\n1.221511e-01\nNA\nNA\n\n\nMiamiBeach\n66\n3.5500000000\n36\n28.0694444\n14.8000\n36.60000\n2.178137e-01\n3.550000000\n6.354614e-04\n\n\nMiamiBeach\n67\n3.0333333333\n37\n28.2000000\n14.8000\n37.60000\n2.296234e-01\n3.033333333\n4.816663e-03\n\n\nMiamiBeach\n68\n4.0000000000\n37\n27.5081081\n7.0000\n38.20000\n2.772284e-01\n4.000000000\n2.475709e-04\n\n\nMiamiBeach\n69\n3.8500000000\n37\n27.6405405\n10.8000\n38.10000\n2.625009e-01\n3.850000000\n4.473649e-03\n\n\nMiamiBeach\n7\nNA\n11\n32.3000000\n25.0000\n36.60000\n1.111365e-01\nNA\nNA\n\n\nMiamiBeach\n70\n4.6500000000\n37\n27.9648649\n14.3000\n38.20000\n2.652348e-01\n4.650000000\n5.395294e-03\n\n\nMiamiBeach\n71\n3.5000000000\n37\n28.0513514\n10.9000\n37.70000\n2.651655e-01\n3.500000000\n7.116834e-04\n\n\nMiamiBeach\n74\n0.4250000000\n36\n18.1444444\n7.0000\n37.00000\n5.275672e-01\nNA\n4.475209e-01\n\n\nMiamiBeach\n78\n0.0000000000\n36\n8.5027778\n7.0000\n28.70000\n5.978571e-01\nNA\n1.824224e-01\n\n\nMiamiBeach\n79\n0.0000000000\n22\n7.5500000\n7.0000\n19.10000\n3.416859e-01\nNA\n1.000000e+00\n\n\nMiamiBeach\n8\nNA\n11\n32.4000000\n25.0000\n36.20000\n1.193451e-01\nNA\nNA\n\n\nMiamiBeach\n81\n-0.2500000000\n14\n31.7571429\n25.4000\n35.20000\n9.444848e-02\nNA\n1.000000e+00\n\n\nMiamiBeach\n82\n-0.9000000000\n15\n33.5466667\n28.0000\n38.10000\n9.093988e-02\nNA\n1.000000e+00\n\n\nMiamiBeach\n83\nNA\n7\n31.4285714\n28.2000\n34.30000\n7.163719e-02\nNA\nNA\n\n\nMiamiBeach\n84\nNA\n12\n14.5416667\n7.0000\n35.90000\n7.324081e-01\nNA\nNA\n\n\nMiamiBeach\n9\n0.7750000000\n88\n29.8409091\n14.9000\n39.20000\n1.850615e-01\n0.775000000\n6.003489e-04\n\n\nPALMBEACH\n10\nNA\n3\n34.5833333\n33.2200\n35.30000\n3.415518e-02\nNA\nNA\n\n\nPALMBEACH\n11\n-0.2933333333\n194\nNA\nNA\nNA\nNA\nNA\n1.604008e-01\n\n\nPALMBEACH\n12A\nNA\n1\nNA\nNA\nNA\nNA\nNA\nNA\n\n\nPALMBEACH\n13\n-0.6850000000\n193\n26.8962176\n0.6300\n38.30000\n2.866053e-01\nNA\n1.667579e-01\n\n\nPALMBEACH\n14\nNA\n2\n37.1250000\n35.9100\n38.34000\n4.628335e-02\nNA\nNA\n\n\nPALMBEACH\n15\nNA\n1\nNA\nNA\nNA\nNA\nNA\nNA\n\n\nPALMBEACH\n16\nNA\n1\nNA\nNA\nNA\nNA\nNA\nNA\n\n\nPALMBEACH\n18A\nNA\n6\n28.9550000\n13.3000\n35.28000\n2.934353e-01\nNA\nNA\n\n\nPALMBEACH\n18C\n-1.4640000000\n190\n23.9438421\n4.7400\n36.90000\n3.808814e-01\n-1.464000000\n7.158042e-03\n\n\nPALMBEACH\n18D\n-1.1300000000\n176\n26.5513636\n7.6000\n36.12000\n2.735073e-01\n-1.130000000\n2.242086e-03\n\n\nPALMBEACH\n22\nNA\n1\nNA\nNA\nNA\nNA\nNA\nNA\n\n\nPALMBEACH\n24\nNA\n1\nNA\nNA\nNA\nNA\nNA\nNA\n\n\nPALMBEACH\n28A\nNA\n5\n31.5160000\n23.7500\n35.81000\n1.558439e-01\nNA\nNA\n\n\nPALMBEACH\n31D\nNA\n3\n30.0300000\n23.9900\n34.17000\n1.781337e-01\nNA\nNA\n\n\nSFER\n1\n-0.0205555556\n55\n35.5710182\n33.6490\n36.83000\n2.576400e-02\nNA\n6.716308e-01\n\n\nSFER\n10\n-0.0331250000\n52\n36.1513269\n31.1810\n39.04000\n4.374574e-02\nNA\n1.957576e-01\n\n\nSFER\n11\n-0.0414285714\n55\n35.9834364\n33.5290\n37.52300\n2.116481e-02\nNA\n1.576450e-01\n\n\nSFER\n12\n-0.0238214286\n55\n36.0235453\n34.6830\n36.71932\n1.373522e-02\nNA\n1.834306e-01\n\n\nSFER\n13\n-0.0391250000\n54\n35.9909259\n33.8100\n37.75300\n2.391913e-02\nNA\n4.232250e-01\n\n\nSFER\n14\n-0.0367500000\n55\n36.0709091\n34.8000\n37.23000\n1.592631e-02\nNA\n6.621765e-02\n\n\nSFER\n15\n-0.0184444444\n55\n36.0264727\n34.7560\n37.00000\n1.308592e-02\nNA\n2.034680e-01\n\n\nSFER\n15.5\n-0.0258750000\n53\n35.9750755\n34.6940\n36.79000\n1.314940e-02\n-0.025875000\n3.096357e-02\n\n\nSFER\n16\n-0.0150000000\n55\n36.3023273\n33.1200\n39.34000\n3.044654e-02\nNA\n7.737829e-01\n\n\nSFER\n17\n0.0033333333\n56\n35.9313929\n32.8250\n37.26000\n2.066019e-02\nNA\n1.000000e+00\n\n\nSFER\n18\n-0.0202857143\n56\n36.0710196\n34.7330\n36.71000\n1.205438e-02\nNA\n6.712072e-02\n\n\nSFER\n19\n0.0110000000\n56\n36.1461786\n27.5800\n37.89900\n4.047487e-02\nNA\n4.374395e-01\n\n\nSFER\n2\n-0.0316666667\n55\n36.0083764\n34.1090\n36.69000\n1.410103e-02\n-0.031666667\n4.790038e-02\n\n\nSFER\n20\n-0.0250000000\n56\n36.0271250\n33.5300\n37.44000\n1.899840e-02\nNA\n3.981027e-01\n\n\nSFER\n21.25\nNA\n1\n35.6460000\n35.6460\n35.64600\nNA\nNA\nNA\n\n\nSFER\n21.5\n0.0037500000\n54\n36.0120741\n33.6600\n36.93600\n1.447032e-02\nNA\n7.158448e-01\n\n\nSFER\n21LK\n-0.0165000000\n57\n36.0861333\n34.5400\n36.73000\n1.176466e-02\nNA\n9.386040e-02\n\n\nSFER\n22\n-0.0038571429\n57\n36.0034807\n33.8410\n37.06000\n1.419150e-02\nNA\n6.869509e-01\n\n\nSFER\n22.5\n-0.0017083333\n53\n35.9852453\n33.8150\n37.06000\n1.495246e-02\nNA\n1.000000e+00\n\n\nSFER\n23\n0.0015416667\n57\n36.0481930\n34.5170\n37.32000\n1.511206e-02\nNA\n8.931400e-01\n\n\nSFER\n24\n-0.0547083333\n57\n36.1965596\n34.3910\n38.41100\n2.015355e-02\n-0.054708333\n1.070113e-02\n\n\nSFER\n3\n-0.0215000000\n55\n35.9345091\n34.4040\n36.81000\n1.339146e-02\nNA\n1.576450e-01\n\n\nSFER\n30\n0.0413750000\n54\n36.0802926\n34.2440\n36.84300\n1.278644e-02\n0.041375000\n2.334220e-02\n\n\nSFER\n30.5\n0.0603333333\n54\n35.8523704\n34.2170\n37.09000\n1.527362e-02\n0.060333333\n1.125360e-02\n\n\nSFER\n31\n0.0891041667\n55\n35.8357691\n32.9780\n38.46500\n2.100011e-02\n0.089104167\n3.087191e-03\n\n\nSFER\n32\n0.0762857143\n56\n35.1508750\n32.6800\n37.35700\n2.456682e-02\nNA\n9.262497e-02\n\n\nSFER\n33\n0.0414000000\n56\n35.0308375\n33.1490\n37.19400\n2.478826e-02\nNA\n4.834823e-01\n\n\nSFER\n34\n0.0768333333\n56\n34.4791250\n30.0950\n37.27000\n3.577831e-02\nNA\n6.847727e-02\n\n\nSFER\n39\n0.0302500000\n48\n31.8426042\n23.1800\n37.67400\n1.109825e-01\nNA\n8.039164e-01\n\n\nSFER\n4\n-0.0377291667\n44\n36.0060682\n33.6330\n37.67400\n2.972863e-02\nNA\n3.071008e-01\n\n\nSFER\n40\n0.0773750000\n52\n33.5273269\n22.6380\n37.74000\n7.964121e-02\nNA\n3.252901e-01\n\n\nSFER\n41\n0.0717000000\n54\n34.6010296\n28.9340\n37.31700\n4.305015e-02\nNA\n2.190700e-01\n\n\nSFER\n42\n0.0860000000\n55\n35.4008727\n32.5010\n37.99900\n2.514634e-02\n0.086000000\n5.739147e-03\n\n\nSFER\n45\n0.0260000000\n55\n35.3126364\n31.6800\n38.26200\n2.968306e-02\nNA\n3.988811e-01\n\n\nSFER\n46\n0.0577571429\n56\n34.9010179\n29.6020\n37.63000\n3.694230e-02\nNA\n2.975352e-01\n\n\nSFER\n47\n0.0751666667\n56\n34.4341429\n28.5040\n37.31300\n4.848140e-02\nNA\n5.319447e-01\n\n\nSFER\n48\n0.0212500000\n55\n33.7739818\n27.9880\n37.90000\n5.799865e-02\nNA\n7.749106e-01\n\n\nSFER\n49\n-0.1117000000\n53\n33.0271189\n24.2200\n37.29600\n6.987749e-02\nNA\n3.514678e-01\n\n\nSFER\n5\n-0.0059761905\n44\n36.0728636\n33.9100\n37.15200\n1.815350e-02\nNA\n7.805956e-01\n\n\nSFER\n5.5\n-0.0135714286\n45\n35.9386667\n34.1730\n36.78000\n1.566593e-02\nNA\n3.917522e-01\n\n\nSFER\n50\n0.0068750000\n54\n35.0469815\n29.3540\n37.58500\n4.064317e-02\nNA\n7.702951e-01\n\n\nSFER\n51\n0.0483750000\n56\n34.7560875\n28.1100\n37.43000\n4.536225e-02\nNA\n4.449042e-01\n\n\nSFER\n52\n-0.0042500000\n53\n33.6765849\n28.7170\n37.71000\n6.231239e-02\nNA\n8.813884e-01\n\n\nSFER\n53\n-0.0100000000\n50\n33.0547400\n28.7750\n36.85200\n6.057605e-02\nNA\n1.000000e+00\n\n\nSFER\n54\n0.0261805556\n68\n32.1863235\n21.9040\n37.26700\n9.084556e-02\nNA\n9.140156e-01\n\n\nSFER\n55\n-0.0973125000\n70\n33.6971571\n27.1290\n37.35300\n6.909317e-02\nNA\n2.701485e-01\n\n\nSFER\n56\n-0.0745000000\n71\n34.4853944\n28.4630\n37.73900\n6.129774e-02\nNA\n6.448830e-01\n\n\nSFER\n57\n-0.1111875000\n72\n34.9993472\n29.9960\n37.73600\n5.255399e-02\nNA\n1.416352e-01\n\n\nSFER\n57.1\n-0.0125333333\n72\n35.5214583\n31.5830\n37.83700\n3.572392e-02\nNA\n7.999580e-01\n\n\nSFER\n57.2\n0.0455000000\n71\n35.8269183\n33.7320\n38.05700\n2.214507e-02\nNA\n1.086254e-01\n\n\nSFER\n57.3\n0.0677500000\n68\n35.9372412\n34.3750\n37.67900\n1.777955e-02\n0.067750000\n3.818842e-02\n\n\nSFER\n58\n0.0945208333\n53\n35.9272453\n30.8900\n37.25800\n2.532537e-02\n0.094520833\n3.906780e-03\n\n\nSFER\n59\n0.0781142857\n53\n35.8280943\n33.8270\n37.92600\n2.460402e-02\nNA\n1.065721e-01\n\n\nSFER\n6\n-0.0195000000\n47\n35.9547447\n34.4850\n36.74000\n1.350088e-02\nNA\n4.424942e-01\n\n\nSFER\n6.5\n-0.0112500000\n47\n35.9507021\n34.2480\n36.73000\n1.316438e-02\nNA\n2.270802e-01\n\n\nSFER\n60\n0.0391250000\n56\n35.4867518\n30.9430\n37.67900\n4.273070e-02\nNA\n5.181742e-01\n\n\nSFER\n61\n0.0365000000\n56\n35.1105179\n29.5890\n38.34800\n5.461662e-02\nNA\n5.181742e-01\n\n\nSFER\n62\n0.0248392857\n56\n34.9164286\n28.9720\n38.55800\n6.121211e-02\nNA\n9.427644e-01\n\n\nSFER\n63\n-0.1004861111\n54\n34.6759537\n28.1180\n38.74000\n7.395261e-02\nNA\n1.931587e-01\n\n\nSFER\n64\n-0.0862936508\n48\n34.3349375\n27.7850\n39.20000\n9.394162e-02\nNA\n6.576955e-01\n\n\nSFER\n65\n-0.0244375000\n51\n35.0073529\n28.1100\n39.91900\n8.974127e-02\nNA\n8.683848e-01\n\n\nSFER\n66\n-0.0594166667\n52\n34.9212308\n28.6370\n38.47000\n7.650583e-02\nNA\n5.735308e-01\n\n\nSFER\n67\n-0.0225000000\n52\n35.3580000\n30.1100\n38.33000\n6.250246e-02\nNA\n1.000000e+00\n\n\nSFER\n68\n0.0054444444\n55\n36.1361709\n31.2400\n39.88300\n4.612440e-02\nNA\n1.000000e+00\n\n\nSFER\n69\n-0.1053333333\n42\n35.9060000\n31.8300\n38.90200\n4.967214e-02\nNA\n1.577084e-01\n\n\nSFER\n7\n0.0073333333\n55\n36.1400727\n33.6580\n38.77000\n2.576825e-02\nNA\n8.894426e-01\n\n\nSFER\n70\n-0.0802500000\n42\n35.7373095\n31.6850\n38.81400\n5.402430e-02\nNA\n2.319058e-01\n\n\nSFER\n71\nNA\n1\n32.9760000\n32.9760\n32.97600\nNA\nNA\nNA\n\n\nSFER\n8\n-0.0022500000\n57\n36.0470526\n34.1100\n37.03000\n1.615953e-02\nNA\n9.464576e-01\n\n\nSFER\n9\n-0.0165071429\n57\n36.0375105\n34.5930\n36.81800\n1.380608e-02\nNA\n4.610216e-01\n\n\nSFER\n9.5\n-0.0216000000\n53\n36.0580189\n34.5200\n37.18100\n1.265577e-02\nNA\n2.386098e-01\n\n\nSFER\n9.6\nNA\n1\n34.1800000\n34.1800\n34.18000\nNA\nNA\nNA\n\n\nSFER\n9.7\nNA\n1\n33.4580000\n33.4580\n33.45800\nNA\nNA\nNA\n\n\nSFER\n9.8\nNA\n1\n36.1290000\n36.1290\n36.12900\nNA\nNA\nNA\n\n\nSFER\nAC1\nNA\n1\n33.3840000\n33.3840\n33.38400\nNA\nNA\nNA\n\n\nSFER\nAC2\nNA\n1\n34.4180000\n34.4180\n34.41800\nNA\nNA\nNA\n\n\nSFER\nAC3\nNA\n1\n34.7050000\n34.7050\n34.70500\nNA\nNA\nNA\n\n\nSFER\nAC4\nNA\n1\n35.0520000\n35.0520\n35.05200\nNA\nNA\nNA\n\n\nSFER\nAC5\nNA\n1\n35.4390000\n35.4390\n35.43900\nNA\nNA\nNA\n\n\nSFER\nAC6\nNA\n1\n36.5320000\n36.5320\n36.53200\nNA\nNA\nNA\n\n\nSFER\nAMI1\n0.2690000000\n26\n34.8171154\n33.1520\n36.69900\n3.014727e-02\nNA\n3.973214e-01\n\n\nSFER\nAMI2\n0.1800000000\n26\n35.1838846\n34.0230\n36.99000\n2.194769e-02\nNA\n3.973214e-01\n\n\nSFER\nAMI3\n-0.0440000000\n26\n35.5827692\n34.5030\n36.96500\n1.580587e-02\nNA\n6.721440e-01\n\n\nSFER\nAMI4\n0.2350000000\n25\n35.9551600\n34.9700\n37.04000\n1.459452e-02\nNA\n7.123907e-02\n\n\nSFER\nAMI5\n0.1910000000\n26\n36.1348077\n34.7490\n37.01400\n1.259671e-02\nNA\n2.042193e-01\n\n\nSFER\nAMI6\n0.1520000000\n26\n36.1899615\n34.8460\n36.93100\n1.130983e-02\n0.152000000\n1.110922e-02\n\n\nSFER\nAMI7\n0.0630000000\n26\n36.1987308\n35.6320\n36.62400\n7.737345e-03\nNA\n5.134833e-02\n\n\nSFER\nAMI8\n0.1060000000\n26\n36.1713462\n35.1940\n36.60300\n8.708570e-03\n0.106000000\n3.434167e-02\n\n\nSFER\nAMI9\n0.0795000000\n26\n36.2066154\n35.7280\n36.60100\n6.963964e-03\n0.079500000\n3.434167e-02\n\n\nSFER\nBG1\n-0.4380000000\n24\n33.7348333\n28.7950\n36.93200\n5.473467e-02\nNA\n1.760675e-01\n\n\nSFER\nBG10\nNA\n1\n36.4740000\n36.4740\n36.47400\nNA\nNA\nNA\n\n\nSFER\nBG11\nNA\n1\n36.5670000\n36.5670\n36.56700\nNA\nNA\nNA\n\n\nSFER\nBG12\nNA\n1\n36.6210000\n36.6210\n36.62100\nNA\nNA\nNA\n\n\nSFER\nBG13\nNA\n2\n36.6008500\n36.5997\n36.60200\n4.443464e-05\nNA\nNA\n\n\nSFER\nBG14\nNA\n1\n35.7300000\n35.7300\n35.73000\nNA\nNA\nNA\n\n\nSFER\nBG15\nNA\n2\n36.1245000\n36.0940\n36.15500\n1.194024e-03\nNA\nNA\n\n\nSFER\nBG16\nNA\n1\n36.1360000\n36.1360\n36.13600\nNA\nNA\nNA\n\n\nSFER\nBG17\nNA\n2\n35.8215000\n35.8180\n35.82500\n1.381781e-04\nNA\nNA\n\n\nSFER\nBG18\nNA\n1\n36.3390000\n36.3390\n36.33900\nNA\nNA\nNA\n\n\nSFER\nBG2\n-0.2280000000\n30\n34.6566333\n32.2620\n36.96400\n3.268133e-02\nNA\n2.389475e-01\n\n\nSFER\nBG20\nNA\n2\n36.2045000\n36.2030\n36.20600\n5.859273e-05\nNA\nNA\n\n\nSFER\nBG3\n0.1702500000\n30\n34.9645000\n25.2470\n37.33400\n6.446956e-02\nNA\n6.137731e-01\n\n\nSFER\nBG4\n0.0537000000\n30\n35.9037333\n33.7160\n37.14200\n1.831160e-02\nNA\n8.664010e-01\n\n\nSFER\nBG6\n0.0220000000\n11\n36.4136364\n35.7890\n36.90200\n7.251230e-03\nNA\n1.000000e+00\n\n\nSFER\nBG7\n-0.0330000000\n12\n36.3952500\n35.9500\n36.74900\n6.172389e-03\nNA\n1.000000e+00\n\n\nSFER\nBG8\nNA\n1\n36.5530000\n36.5530\n36.55300\nNA\nNA\nNA\n\n\nSFER\nBG9\nNA\n1\n36.4800000\n36.4800\n36.48000\nNA\nNA\nNA\n\n\nSFER\nBK1\nNA\n1\n34.9360000\n34.9360\n34.93600\nNA\nNA\nNA\n\n\nSFER\nCAL1\n0.0855000000\n33\n33.1799091\n27.5670\n35.73900\n5.201556e-02\nNA\n5.754030e-01\n\n\nSFER\nCAL2\n0.0568833333\n34\n34.4989912\n29.5280\n36.80100\n3.784945e-02\nNA\n8.936947e-01\n\n\nSFER\nCAL3\n0.0668333333\n34\n35.0651324\n31.7240\n37.74000\n3.158046e-02\nNA\n6.884997e-01\n\n\nSFER\nCAL4\n0.2511250000\n34\n35.4926353\n33.9770\n37.12600\n2.103539e-02\nNA\n1.415789e-01\n\n\nSFER\nCAL5\n0.2132500000\n34\n35.7972265\n34.7010\n36.97200\n1.606340e-02\nNA\n8.235222e-02\n\n\nSFER\nCAL6\n0.0154500000\n28\n36.2052857\n35.4980\n37.02400\n9.369166e-03\nNA\n8.551321e-01\n\n\nSFER\nCAL7\nNA\n1\n35.5040000\n35.5040\n35.50400\nNA\nNA\nNA\n\n\nSFER\nCAL8\nNA\n1\n35.2932000\n35.2932\n35.29320\nNA\nNA\nNA\n\n\nSFER\nCALA\nNA\n1\n36.3460000\n36.3460\n36.34600\nNA\nNA\nNA\n\n\nSFER\nCK1\nNA\n1\n35.4250000\n35.4250\n35.42500\nNA\nNA\nNA\n\n\nSFER\nCK2\nNA\n1\n35.9800000\n35.9800\n35.98000\nNA\nNA\nNA\n\n\nSFER\nCW1\n-1.1030000000\n16\n34.7508125\n32.4900\n37.16000\n3.813987e-02\nNA\n3.081795e-01\n\n\nSFER\nCW2\n-0.4950000000\n16\n34.8784500\n32.8720\n36.83900\n3.395214e-02\nNA\n7.340952e-01\n\n\nSFER\nCW3\n0.2220000000\n17\n35.0362882\n33.2100\n36.77800\n2.769390e-02\nNA\n7.787290e-01\n\n\nSFER\nCW4\n-0.6060000000\n16\n35.4401437\n33.9800\n36.74500\n2.292730e-02\nNA\n7.340952e-01\n\n\nSFER\nCW5\n0.1095000000\n12\n35.8044167\n34.9700\n36.97900\n1.856474e-02\nNA\n1.000000e+00\n\n\nSFER\nCW6\n-0.1580000000\n12\n36.2142500\n34.8550\n36.83500\n1.609412e-02\nNA\n1.000000e+00\n\n\nSFER\nCW7\n-0.0218000000\n11\n36.4088909\n35.1420\n36.84700\n1.209543e-02\nNA\n1.000000e+00\n\n\nSFER\nCaseyhole\nNA\n1\n35.8900000\n35.8900\n35.89000\nNA\nNA\nNA\n\n\nSFER\nEB1\nNA\n1\n34.6480000\n34.6480\n34.64800\nNA\nNA\nNA\n\n\nSFER\nEB2\nNA\n1\n35.7750000\n35.7750\n35.77500\nNA\nNA\nNA\n\n\nSFER\nEH07\nNA\n1\n35.5070000\n35.5070\n35.50700\nNA\nNA\nNA\n\n\nSFER\nEH08\nNA\n1\n36.1100000\n36.1100\n36.11000\nNA\nNA\nNA\n\n\nSFER\nEKIN\n-0.0250000000\n53\n35.9933962\n33.9370\n37.64000\n2.129731e-02\nNA\n1.912113e-01\n\n\nSFER\nEKMID\n-0.0026250000\n54\n36.0046481\n33.9480\n36.84000\n1.434945e-02\nNA\n1.000000e+00\n\n\nSFER\nEKOFF\n-0.0040000000\n54\n36.0222407\n34.1540\n36.86900\n1.366873e-02\nNA\n6.652783e-01\n\n\nSFER\nGP1\nNA\n4\n34.5229500\n33.3260\n34.97580\n2.320830e-02\nNA\nNA\n\n\nSFER\nGP1.5\nNA\n1\n34.4550000\n34.4550\n34.45500\nNA\nNA\nNA\n\n\nSFER\nGP2\nNA\n4\n34.5071750\n33.8990\n35.19970\n1.695630e-02\nNA\nNA\n\n\nSFER\nGP3\nNA\n4\n34.7901000\n34.2400\n35.28740\n1.568471e-02\nNA\nNA\n\n\nSFER\nGP4\nNA\n4\n35.7300000\n35.2060\n36.18000\n1.168612e-02\nNA\nNA\n\n\nSFER\nGP5\n0.1019750000\n34\n36.1254706\n35.3600\n37.00300\n1.003602e-02\n0.101975000\n2.310339e-02\n\n\nSFER\nGS\nNA\n1\n36.4990000\n36.4990\n36.49900\nNA\nNA\nNA\n\n\nSFER\nGlider\nNA\n2\n35.7410000\n35.3890\n36.09300\n1.392807e-02\nNA\nNA\n\n\nSFER\nHB1\nNA\n1\n34.3860000\n34.3860\n34.38600\nNA\nNA\nNA\n\n\nSFER\nHB2\nNA\n1\n34.6840000\n34.6840\n34.68400\nNA\nNA\nNA\n\n\nSFER\nHB3\nNA\n1\n35.1390000\n35.1390\n35.13900\nNA\nNA\nNA\n\n\nSFER\nHB4\nNA\n1\n35.2900000\n35.2900\n35.29000\nNA\nNA\nNA\n\n\nSFER\nHB5\nNA\n1\n35.5270000\n35.5270\n35.52700\nNA\nNA\nNA\n\n\nSFER\nHB6\nNA\n1\n36.2190000\n36.2190\n36.21900\nNA\nNA\nNA\n\n\nSFER\nJunkpile\nNA\n1\n35.6754000\n35.6754\n35.67540\nNA\nNA\nNA\n\n\nSFER\nKW1\n-0.0148750000\n34\n36.0447265\n34.6420\n37.27200\n1.953182e-02\nNA\n8.897069e-01\n\n\nSFER\nKW2\n0.0047500000\n34\n36.0897353\n34.7050\n37.27500\n1.758691e-02\nNA\n6.773916e-01\n\n\nSFER\nKW3\n0.0289000000\n34\n36.0265882\n34.8400\n37.20000\n1.735329e-02\nNA\n6.773916e-01\n\n\nSFER\nKW4\n-0.0147666667\n33\n36.2209424\n35.3750\n36.89000\n1.208551e-02\nNA\n8.867848e-01\n\n\nSFER\nL1\n-1.0350000000\n9\n35.2097778\n33.1440\n36.93400\n3.459111e-02\nNA\n4.795001e-01\n\n\nSFER\nL3\n-0.7135000000\n9\n36.0278889\n35.3960\n36.79200\n1.460863e-02\nNA\n4.795001e-01\n\n\nSFER\nL5\n-0.4172500000\n9\n36.1925000\n35.3380\n36.65200\n1.117853e-02\nNA\n4.795001e-01\n\n\nSFER\nL7\n-0.0170000000\n9\n36.3426667\n35.7720\n36.62000\n7.301873e-03\nNA\n1.000000e+00\n\n\nSFER\nL9\n-0.0365000000\n10\n36.3361000\n35.6520\n36.60100\n7.950210e-03\nNA\n4.795001e-01\n\n\nSFER\nM01\nNA\n1\n35.7800000\n35.7800\n35.78000\nNA\nNA\nNA\n\n\nSFER\nM02\nNA\n1\n35.5900000\n35.5900\n35.59000\nNA\nNA\nNA\n\n\nSFER\nM03\nNA\n1\n35.6100000\n35.6100\n35.61000\nNA\nNA\nNA\n\n\nSFER\nM04\nNA\n1\n35.5500000\n35.5500\n35.55000\nNA\nNA\nNA\n\n\nSFER\nM05\nNA\n1\n35.0200000\n35.0200\n35.02000\nNA\nNA\nNA\n\n\nSFER\nMR\n-0.0211250000\n56\n36.0716036\n34.4550\n36.56000\n1.159988e-02\nNA\n1.288184e-01\n\n\nSFER\nMudhole\nNA\n1\n35.5400000\n35.5400\n35.54000\nNA\nNA\nNA\n\n\nSFER\nNaplesBlueHole\nNA\n1\n35.8900000\n35.8900\n35.89000\nNA\nNA\nNA\n\n\nSFER\nPLUME\nNA\n1\n34.7900000\n34.7900\n34.79000\nNA\nNA\nNA\n\n\nSFER\nROME4\n-0.8560000000\n11\n35.4095364\n33.4890\n36.79300\n2.675530e-02\nNA\n3.710934e-01\n\n\nSFER\nROME5\n-1.3400000000\n11\n34.8874545\n32.1580\n36.65100\n4.461729e-02\nNA\n3.710934e-01\n\n\nSFER\nRP1\n0.2845000000\n34\n34.7200882\n32.3280\n37.76500\n3.325927e-02\nNA\n2.291019e-01\n\n\nSFER\nRP2\n0.1180500000\n34\n34.7508353\n32.5520\n36.71000\n2.726789e-02\nNA\n6.884997e-01\n\n\nSFER\nRP3\n0.1128000000\n35\n35.2860657\n33.1650\n37.28600\n2.222736e-02\nNA\n4.464260e-01\n\n\nSFER\nRP4\n0.0966250000\n34\n35.7051265\n32.9420\n37.19200\n2.264882e-02\nNA\n3.495748e-01\n\n\nSFER\nRedTide\nNA\n1\n36.3556000\n36.3556\n36.35560\nNA\nNA\nNA\n\n\nSFER\nTB1\n0.3552500000\n29\n34.3434655\n31.7110\n36.95400\n3.591151e-02\nNA\n2.206714e-01\n\n\nSFER\nTB10\n0.0742500000\n27\n36.2166296\n35.3200\n36.89300\n9.809953e-03\nNA\n1.095986e-01\n\n\nSFER\nTB11\nNA\n2\n35.4440000\n35.3300\n35.55800\n4.548593e-03\nNA\nNA\n\n\nSFER\nTB12\nNA\n1\n35.5000000\n35.5000\n35.50000\nNA\nNA\nNA\n\n\nSFER\nTB13\nNA\n1\n35.6600000\n35.6600\n35.66000\nNA\nNA\nNA\n\n\nSFER\nTB2\n0.1190625000\n29\n34.9250862\n32.7570\n36.89800\n2.863523e-02\nNA\n5.427953e-02\n\n\nSFER\nTB3\n0.2127500000\n29\n35.3356207\n33.7460\n37.01500\n2.087930e-02\nNA\n3.816731e-01\n\n\nSFER\nTB4\n0.1705500000\n29\n35.8614034\n34.7680\n37.05200\n1.571865e-02\nNA\n1.153322e-01\n\n\nSFER\nTB5\n0.1728500000\n29\n36.2040517\n35.1940\n37.72100\n1.433965e-02\nNA\n5.427953e-02\n\n\nSFER\nTB6\nNA\n2\n32.8108000\n31.4870\n34.13460\n5.705853e-02\nNA\nNA\n\n\nSFER\nTB7\nNA\n2\n33.7336500\n32.4240\n35.04330\n5.490437e-02\nNA\nNA\n\n\nSFER\nTB8\nNA\n2\n34.4426500\n33.4580\n35.42730\n4.042968e-02\nNA\nNA\n\n\nSFER\nTB9\nNA\n2\n34.7484500\n34.2390\n35.25790\n2.073391e-02\nNA\nNA\n\n\nSFER\nTBA\nNA\n1\n35.7320000\n35.7320\n35.73200\nNA\nNA\nNA\n\n\nSFER\nTBB\nNA\n1\n36.0420000\n36.0420\n36.04200\nNA\nNA\nNA\n\n\nSFER\nTBC\nNA\n1\n36.0850000\n36.0850\n36.08500\nNA\nNA\nNA\n\n\nSFER\nUKIN\n-0.0245000000\n54\n35.9901667\n33.8310\n37.29400\n2.255375e-02\nNA\n3.949597e-01\n\n\nSFER\nUKMID\n-0.0031428571\n54\n36.0034259\n34.1460\n36.72900\n1.483291e-02\nNA\n7.767534e-01\n\n\nSFER\nUKOFF\n-0.0093541667\n55\n36.0234364\n34.5580\n36.72000\n1.254681e-02\nNA\n4.412085e-01\n\n\nSFER\nV1\n0.1670000000\n30\n34.7494667\n33.1820\n37.22200\n3.001650e-02\nNA\n1.581525e-01\n\n\nSFER\nV10\nNA\n1\n35.4800000\n35.4800\n35.48000\nNA\nNA\nNA\n\n\nSFER\nV11\nNA\n1\n35.2800000\n35.2800\n35.28000\nNA\nNA\nNA\n\n\nSFER\nV2\n0.2095416667\n30\n35.1108000\n33.6400\n36.98800\n2.466028e-02\nNA\n1.581525e-01\n\n\nSFER\nV3\n0.2346250000\n29\n35.4782414\n34.3620\n36.96800\n2.013263e-02\n0.234625000\n2.293437e-02\n\n\nSFER\nV4\n0.2168750000\n30\n35.6309667\n34.3890\n36.93800\n1.951281e-02\nNA\n4.330034e-01\n\n\nSFER\nV5\n0.1540000000\n29\n35.9359655\n34.4890\n36.75000\n1.670738e-02\nNA\n3.816731e-01\n\n\nSFER\nV6\n0.1760000000\n30\n36.0342667\n34.4570\n36.66400\n1.341454e-02\nNA\n8.453871e-02\n\n\nSFER\nV7\n0.0932500000\n30\n35.8409333\n26.2400\n36.75000\n5.130684e-02\nNA\n6.927988e-02\n\n\nSFER\nV8\n0.0649166667\n29\n36.2080345\n35.5850\n36.86100\n8.703504e-03\nNA\n1.153322e-01\n\n\nSFER\nV9\n0.0317000000\n30\n36.2055333\n35.6000\n36.77000\n7.734858e-03\nNA\n1.371995e-01\n\n\nSFER\nWS\n-0.0188333333\n56\n36.0912679\n34.6190\n36.77900\n1.205244e-02\nNA\n7.528744e-02\n\n\nSFER\nZ03027\nNA\n1\n31.1000000\n31.1000\n31.10000\nNA\nNA\nNA\n\n\nSFER\nZ03076\nNA\n1\n36.3801000\n36.3801\n36.38010\nNA\nNA\nNA\n\n\nSFER\nZ03116\nNA\n1\n36.0033000\n36.0033\n36.00330\nNA\nNA\nNA\n\n\nSFER\nZ03146\nNA\n1\n36.0495000\n36.0495\n36.04950\nNA\nNA\nNA\n\n\nSFER\nZ03198\nNA\n1\n35.9684000\n35.9684\n35.96840\nNA\nNA\nNA\n\n\nSFER\nZ04067\nNA\n1\n35.8304000\n35.8304\n35.83040\nNA\nNA\nNA\n\n\nSFER\nZ04068\nNA\n1\n35.6561000\n35.6561\n35.65610\nNA\nNA\nNA\n\n\nSFER\nZ04093\nNA\n1\n36.3000000\n36.3000\n36.30000\nNA\nNA\nNA\n\n\nSFER\nZ04099\nNA\n1\n36.1894000\n36.1894\n36.18940\nNA\nNA\nNA\n\n\nSFER\nZ04110\nNA\n1\n35.4560000\n35.4560\n35.45600\nNA\nNA\nNA\n\n\nSFER\nZ04610\nNA\n1\n36.0169000\n36.0169\n36.01690\nNA\nNA\nNA\n\n\n\n\n\n\n\n\n\nReporting Programs:\n\n\ndisplay reporting programs\nlibrary(ggplot2)\nggplot(df, aes(x = program)) +\n  geom_bar() +\n  labs(title = \"Reporting Programs\", x = \"Program\", y = \"Count\")"
  },
  {
    "objectID": "analyte_reports/analyte_reports/Pheophytin.html",
    "href": "analyte_reports/analyte_reports/Pheophytin.html",
    "title": "Pheophytin Report",
    "section": "",
    "text": "get data across all programs, filter for analyte\nlibrary('here')\nlibrary('dplyr')\nsource(here(\"R/getAllData.R\"))\nfull_df &lt;- getAllData()\ndf &lt;- filter(full_df, DEP.Analyte.Name == params$analyte)\n\n\n\n\ncreate .csv of analyte data\n# save df to csv\n# reduce to only cols we need & save to csv\ndf %&gt;%\n  mutate(\n    source = program,\n    site = Monitoring.Location.ID,\n    datetime = Activity.Start.Date.Time,\n    analyte = DEP.Analyte.Name,\n    value = DEP.Result.Value.Number,\n    units = DEP.Result.Unit,\n    latitude = Org.Decimal.Latitude,\n    longitude = Org.Decimal.Longitude,\n    sample_depth = Activity.Depth,\n    .keep = \"none\"\n) %&gt;%\n  write.csv(here(\"data\", \"exports\", \"unified-wq-db-samples\", paste0(params$analyte, \".csv\")))\n\n\nDownload data for this analyte here\n\nHistogram of DEP.Result.Value.Number:\n\n\ndisplay histogram of values\nlibrary(ggplot2)\nggplot(df, aes(x = DEP.Result.Value.Number)) +\n  geom_histogram(bins = 30, fill = \"blue\", color = \"black\") +\n  labs(title = \"Histogram of Values\", x = \"Value\", y = \"Count\")\n\n\n\n\n\n\n\n\n\n\n\nStation Statistics:\n\n\ncreate station statistics dataframe\nsource(here(\"R/seasonalMannKendall.R\"))\nlibrary(lubridate)  # for mdy_hms()\nlibrary(pander)  # for display\n\n# create table of samples for each station\nsamples_df &lt;- df %&gt;%\n  select(\n    program, \n    Monitoring.Location.ID, \n    Activity.Start.Date.Time,\n    analyte = DEP.Analyte.Name,\n    DEP.Result.Value.Number, \n    DEP.Result.Unit,\n    latitude = Org.Decimal.Latitude,\n    longitude = Org.Decimal.Longitude,\n    sample_depth = Activity.Depth\n    ) %&gt;%\n  # drop any with empty Monitoring.Location.ID\n  filter(!is.na(Monitoring.Location.ID)) %&gt;%\n  # drop any with empty Activity.Start.Date.Time\n  filter(!is.na(Activity.Start.Date.Time)) %&gt;%\n  # parse the \"MM/DD/YYYY HH:MM:SS\" strings into POSIXct\n  mutate(Activity.Start.Date.Time = mdy_hms(\n          Activity.Start.Date.Time,\n          tz = \"UTC\")) %&gt;%\n  distinct()\n\n\n# add statistics for each station\nsample_stats_df &lt;- samples_df %&gt;%\n  group_by(program, Monitoring.Location.ID) %&gt;%\n  reframe(\n    {\n      tmp &lt;- seasonalMannKendallVectorized(\n        Activity.Start.Date.Time,\n        DEP.Result.Value.Number\n      )\n    },\n    n_values = n(),\n    mean = mean(DEP.Result.Value.Number),\n    min = min(DEP.Result.Value.Number),\n    max = max(DEP.Result.Value.Number),\n    coefficient.of.variation = sd(DEP.Result.Value.Number) / mean(DEP.Result.Value.Number)\n  ) %&gt;%\n  mutate(\n    # create column significant_slope\n    significant_slope = ifelse(z &lt;= 0.05, slope, NA_real_),\n    pvalue = z\n  ) %&gt;%\n  # drop unwanted columns added by seasonalMannKendall\n  select(\n    -z,\n    -tau,\n    -chi_square\n  )\n\n\n\n# print(head(sample_stats_df))\n# # display sample_stats_df with pander\n# pander(sample_stats_df)\n\n\n\n\nsave stats to csv\nsample_stats_df %&gt;%\n  write.csv(here(\n    \"data\", \"exports\", \"seasonal-mann-kendall-stats\", paste0(params$analyte, \".csv\")))\n\n\nDownload data for this analyte’s statistics here\n\n\ndisplay with gt\nlibrary(gt)\nlibrary(scales)\nlibrary(tidyselect)  # for all_of()\nlibrary(RColorBrewer) # for brewer.pal()\n\n# ── color_column() ─────────────────────────────────────────────────────────────\n# gt_tbl   : a gt object that you’ve already created (e.g. `sample_stats_df %&gt;% gt()`)\n# df       : the original data.frame (must contain the column you want to color)\n# column   : a string, e.g. \"slope\" or \"n_values\"\n# palette  : a character vector of colours to feed to col_numeric()\n#\ncolor_column &lt;- function(gt_tbl, df, column, \n                         palette = c(\"red\", \"orange\", \"yellow\", \"green\", \"blue\", \"violet\"),\n                         domain = NULL) {\n  # 1) Pull out that column’s numeric values\n  vals &lt;- df[[column]]\n  if (!is.numeric(vals)) {\n    stop(sprintf(\"`%s` is not numeric; data_color() requires a numeric column.\", column))\n  }\n  \n  # 2) Compute its min and max (ignoring NA)\n  min_val &lt;- min(vals, na.rm = TRUE)\n  max_val &lt;- max(vals, na.rm = TRUE)\n  if (is.null(domain)) {\n    domain &lt;- c(min_val, max_val)\n  }\n  \n  # 3) Call data_color() on the gt table for that single column\n  gt_tbl %&gt;%\n    data_color(\n      columns = all_of(column),\n      colors  = col_numeric(\n        palette = palette,\n        domain  = domain\n      )\n    )\n}\nlibrary(dplyr)\nlibrary(gt)\n\n# 1) First build your gt table as usual:\ngt_tbl &lt;- sample_stats_df %&gt;% \n  gt()\n\n# slope blue (-) to red (+) (0 centered)\ntryCatch({\n  min_slope &lt;- min(sample_stats_df$slope,  na.rm = TRUE)\n  max_slope &lt;- max(sample_stats_df$slope,  na.rm = TRUE)\n  max_abs_slope &lt;- max(abs(min_slope), abs(max_slope))\n  gt_tbl &lt;- color_column(\n    gt_tbl, \n    df     = sample_stats_df, \n    column = \"slope\",\n    palette = rev(brewer.pal(11, \"RdBu\")),\n    domain  = c(-max_abs_slope, max_abs_slope)\n  )\n}, error = function(e) {\n  print(\"Error in slope color column\")\n  print(e)\n})\n\ntryCatch({\n  # pvalue Z\n  gt_tbl &lt;- color_column(\n    gt_tbl, \n    df      = sample_stats_df, \n    column  = \"z\", \n    palette = scales::brewer_pal(palette = \"Blues\")(9)\n  )\n}, error = function(e) {\n  print(\"Error in z color column\")\n  print(e)\n})\n\n\n[1] \"Error in z color column\"\n&lt;simpleError in color_column(gt_tbl, df = sample_stats_df, column = \"z\", palette = (scales::brewer_pal(palette = \"Blues\"))(9)): `z` is not numeric; data_color() requires a numeric column.&gt;\n\n\ndisplay with gt\n# slope blue (-) to red (+) (0 centered)\ntryCatch({\n  min_slope &lt;- min(sample_stats_df$significant_slope,  na.rm = TRUE)\n  max_slope &lt;- max(sample_stats_df$significant_slope,  na.rm = TRUE)\n  max_abs_slope &lt;- max(abs(min_slope), abs(max_slope))\n  gt_tbl &lt;- color_column(\n    gt_tbl, \n    df     = sample_stats_df, \n    column = \"significant_slope\",\n    palette = rev(brewer.pal(11, \"RdBu\")),\n    domain  = c(-max_abs_slope, max_abs_slope)\n  )\n}, error = function(e) {\n  print(\"Error in significant_slope color column\")\n  print(e)\n})\n\ntryCatch({\n  # mean values blue to red (0 centered)\n  min_mean &lt;- min(sample_stats_df$mean,  na.rm = TRUE)\n  max_mean &lt;- max(sample_stats_df$mean,  na.rm = TRUE)\n  max_abs_mean &lt;- max(abs(min_mean), abs(max_mean))\n  gt_tbl &lt;- color_column(\n    gt_tbl, \n    df     = sample_stats_df, \n    column = \"mean\",\n    palette = rev(brewer.pal(11, \"RdBu\")),\n    domain  = c(-max_abs_mean, max_abs_mean)\n  )\n}, error = function(e) {\n  print(\"Error in mean color column\")\n  print(e)\n})\n\ntryCatch({\n  # n values white to green\n  gt_tbl &lt;- color_column(\n    gt_tbl, \n    df      = sample_stats_df, \n    column  = \"n_values\", \n    palette = scales::brewer_pal(palette = \"Greens\")(9)\n  )\n}, error = function(e) {\n  print(\"Error in n_values color column\")\n  print(e)\n})\n\ntryCatch({\n  # min\n  gt_tbl &lt;- color_column(\n    gt_tbl, \n    df      = sample_stats_df, \n    column  = \"min\", \n    palette = scales::brewer_pal(palette = \"Blues\")(9)\n  )\n}, error = function(e) {\n  print(\"Error in min color column\")\n  print(e)\n})\n\ntryCatch({\n  # max\n  gt_tbl &lt;- color_column(\n    gt_tbl, \n    df      = sample_stats_df, \n    column  = \"max\", \n    palette = scales::brewer_pal(palette = \"Blues\")(9)\n  )\n}, error = function(e) {\n  print(\"Error in max color column\")\n  print(e)\n})\n\ntryCatch({\n  # coefficient.of.variation\n  gt_tbl &lt;- color_column(\n    gt_tbl, \n    df      = sample_stats_df, \n    column  = \"coefficient.of.variation\", \n    palette = scales::brewer_pal(palette = \"Blues\")(9)\n  )\n}, error = function(e) {\n  print(\"Error in coefficient.of.variation color column\")\n  print(e)\n})\n\n# 4) Render/display:\ngt_tbl\n\n\n\n\n\n\n\n\nprogram\nMonitoring.Location.ID\nslope\nn_values\nmean\nmin\nmax\ncoefficient.of.variation\nsignificant_slope\npvalue\n\n\n\n\nSFER\n1\n-0.0071250000\n51\n0.27488235\n0.026\n1.297\n0.996845208\nNA\n4.287140e-01\n\n\nSFER\n10\n0.0065000000\n49\n0.29238776\n0.000\n1.833\n1.206275645\nNA\n4.198414e-01\n\n\nSFER\n11\n0.0018750000\n51\n0.16156863\n0.000\n0.732\n0.904762852\nNA\n7.030204e-01\n\n\nSFER\n12\n0.0049732143\n51\n0.09723529\n0.000\n0.340\n0.839349120\nNA\n5.566312e-02\n\n\nSFER\n13\n0.0080000000\n51\n0.23272549\n0.010\n2.026\n1.349632462\nNA\n8.740500e-02\n\n\nSFER\n14\n0.0013333333\n52\n0.13467308\n0.020\n0.545\n0.842185404\nNA\n7.051892e-01\n\n\nSFER\n15\n0.0017500000\n52\n0.07975000\n0.000\n0.268\n0.707381746\nNA\n5.461132e-01\n\n\nSFER\n15.5\n0.0020000000\n48\n0.06706250\n0.008\n0.265\n0.793777316\nNA\n3.244841e-01\n\n\nSFER\n16\n-0.0021428571\n51\n0.31507843\n0.000\n1.379\n0.821354296\nNA\n9.369873e-01\n\n\nSFER\n17\n0.0012708333\n52\n0.15638462\n0.000\n0.722\n0.865954416\nNA\n6.979603e-01\n\n\nSFER\n18\n0.0020000000\n51\n0.10350980\n0.000\n0.673\n1.034365447\nNA\n7.525763e-01\n\n\nSFER\n19\n0.0060000000\n52\n0.27159615\n0.010\n1.093\n0.830452883\nNA\n4.848424e-01\n\n\nSFER\n2\n0.0035571429\n52\n0.16713462\n0.010\n0.904\n0.987814246\nNA\n3.913260e-01\n\n\nSFER\n20\n0.0081250000\n53\n0.18800000\n0.000\n1.513\n1.247633743\nNA\n1.113834e-01\n\n\nSFER\n21.25\nNA\n1\n0.07300000\n0.073\n0.073\nNA\nNA\nNA\n\n\nSFER\n21.5\n0.0041666667\n51\n0.06878431\n0.000\n0.400\n0.890641472\nNA\n1.149749e-01\n\n\nSFER\n21LK\n0.0050000000\n54\n0.12237037\n0.000\n1.377\n1.599836746\n0.00500000\n2.603627e-02\n\n\nSFER\n22\n0.0072222222\n54\n0.11107407\n0.000\n0.524\n0.984504809\nNA\n1.316282e-01\n\n\nSFER\n22.5\n0.0037083333\n50\n0.07962000\n0.000\n0.320\n0.788896773\nNA\n3.129767e-01\n\n\nSFER\n23\n0.0048000000\n54\n0.17353704\n0.000\n1.323\n1.264412848\nNA\n3.160728e-01\n\n\nSFER\n24\n0.0061428571\n54\n0.27237037\n0.016\n1.482\n0.962190719\nNA\n5.181742e-01\n\n\nSFER\n3\n0.0062847222\n52\n0.13051923\n0.000\n0.615\n0.804670836\nNA\n3.080694e-01\n\n\nSFER\n30\n0.0125000000\n51\n0.22011765\n0.000\n2.300\n1.523418148\n0.01250000\n1.463184e-02\n\n\nSFER\n30.5\n0.0096250000\n51\n0.24294118\n0.020\n1.199\n0.934978743\nNA\n2.073173e-01\n\n\nSFER\n31\n0.0400416667\n50\n0.69888000\n0.020\n13.164\n2.667480035\n0.04004167\n5.554059e-03\n\n\nSFER\n32\n0.0230000000\n52\n0.62461538\n0.040\n3.128\n0.930065516\nNA\n2.119863e-01\n\n\nSFER\n33\n0.0570000000\n51\n0.63970588\n0.000\n1.846\n0.792698184\n0.05700000\n1.688638e-02\n\n\nSFER\n34\n0.1360000000\n52\n1.10201923\n0.000\n6.326\n0.972254223\n0.13600000\n9.604093e-05\n\n\nSFER\n39\n0.0720000000\n42\n1.02533333\n0.000\n3.373\n0.790418570\nNA\n3.599892e-01\n\n\nSFER\n4\n0.0105238095\n41\n0.14734146\n0.010\n0.660\n1.066509812\n0.01052381\n1.849177e-02\n\n\nSFER\n40\n0.0461250000\n46\n0.89645652\n0.040\n3.488\n0.803160649\n0.04612500\n2.554284e-02\n\n\nSFER\n41\n0.0733750000\n49\n0.99977551\n0.050\n3.131\n0.639749527\n0.07337500\n8.161350e-03\n\n\nSFER\n42\n0.0230000000\n50\n0.60426000\n0.000\n2.867\n0.878672340\nNA\n1.074187e-01\n\n\nSFER\n45\n0.0328571429\n50\n0.70078000\n0.000\n5.081\n1.071644615\nNA\n3.340728e-01\n\n\nSFER\n46\n0.0390952381\n51\n0.57290196\n0.000\n1.703\n0.654486218\nNA\n9.617932e-02\n\n\nSFER\n47\n0.0472500000\n49\n0.75383673\n0.020\n2.862\n0.838294837\n0.04725000\n1.728237e-02\n\n\nSFER\n48\n0.0787500000\n50\n0.80786000\n0.000\n4.374\n0.950580558\n0.07875000\n2.817740e-02\n\n\nSFER\n49\n0.0567500000\n48\n0.91722917\n0.000\n4.735\n1.080320492\nNA\n2.196439e-01\n\n\nSFER\n5\n0.0095555556\n40\n0.18522500\n0.000\n2.987\n2.495636733\nNA\n1.407499e-01\n\n\nSFER\n5.5\n0.0060000000\n41\n0.10768293\n0.000\n0.380\n0.846125190\nNA\n1.691258e-01\n\n\nSFER\n50\n0.0447500000\n49\n0.85087755\n0.040\n5.140\n1.061269585\n0.04475000\n4.725689e-02\n\n\nSFER\n51\n0.0712083333\n51\n0.71678431\n0.000\n4.149\n1.016773403\n0.07120833\n8.940230e-03\n\n\nSFER\n52\n0.0590000000\n48\n0.78943750\n0.000\n3.071\n0.989512605\n0.05900000\n1.075096e-02\n\n\nSFER\n53\n0.1020000000\n45\n0.97291111\n0.000\n5.255\n1.100566726\n0.10200000\n3.792004e-02\n\n\nSFER\n54\n0.1563333333\n62\n1.37020968\n0.000\n9.951\n1.275371078\n0.15633333\n3.522106e-04\n\n\nSFER\n55\n0.1066666667\n65\n0.97776923\n0.000\n10.504\n1.441394962\n0.10666667\n3.512987e-03\n\n\nSFER\n56\n0.0910000000\n66\n0.88769697\n0.030\n6.880\n1.304674143\n0.09100000\n1.851128e-04\n\n\nSFER\n57\n0.0498750000\n67\n0.67653731\n0.000\n5.685\n1.218427375\n0.04987500\n5.895055e-03\n\n\nSFER\n57.1\n0.0595625000\n67\n0.51277612\n0.000\n2.082\n0.809356501\n0.05956250\n1.967081e-03\n\n\nSFER\n57.2\n0.0290000000\n65\n0.51200000\n0.000\n2.196\n0.770855611\n0.02900000\n3.392583e-02\n\n\nSFER\n57.3\n0.0456250000\n62\n0.46848387\n0.000\n1.996\n0.724167832\n0.04562500\n2.568832e-03\n\n\nSFER\n58\n0.0255000000\n48\n0.43610417\n0.015\n1.746\n0.872399538\nNA\n2.427990e-01\n\n\nSFER\n59\n0.0165000000\n48\n0.60729167\n0.000\n2.270\n0.866813916\nNA\n3.334205e-01\n\n\nSFER\n6\n0.0030625000\n43\n0.11227907\n0.000\n0.812\n1.166477206\nNA\n3.197182e-01\n\n\nSFER\n6.5\n0.0040803571\n43\n0.07588372\n0.000\n0.296\n0.819476216\nNA\n5.840564e-02\n\n\nSFER\n60\n0.0135625000\n51\n0.78305882\n0.000\n4.198\n0.912725844\nNA\n4.563652e-01\n\n\nSFER\n61\n0.0198000000\n51\n0.79417647\n0.000\n6.254\n1.138242057\nNA\n6.790184e-01\n\n\nSFER\n62\n0.0170000000\n49\n0.98591837\n0.055\n9.126\n1.306557302\nNA\n3.858818e-01\n\n\nSFER\n63\n0.0397500000\n49\n1.11940816\n0.000\n10.394\n1.421289893\nNA\n9.563173e-02\n\n\nSFER\n64\n0.1345714286\n43\n1.49202326\n0.110\n13.617\n1.396332183\nNA\n5.577433e-02\n\n\nSFER\n65\n0.0755694444\n46\n1.41743478\n0.000\n7.630\n0.929647224\n0.07556944\n4.722090e-02\n\n\nSFER\n66\n0.0391111111\n47\n1.00880851\n0.000\n5.034\n0.984772381\nNA\n2.353333e-01\n\n\nSFER\n67\n0.0245000000\n47\n0.76689362\n0.070\n3.481\n0.881998863\nNA\n4.113138e-01\n\n\nSFER\n68\n0.0083875000\n50\n0.60828000\n0.049\n2.400\n0.903109170\nNA\n3.815124e-01\n\n\nSFER\n69\n0.0161666667\n37\n0.47935135\n0.131\n2.241\n1.005038359\nNA\n3.714186e-01\n\n\nSFER\n7\n0.0126666667\n52\n0.20838462\n0.000\n0.920\n1.009369134\nNA\n1.313023e-01\n\n\nSFER\n70\n-0.0128750000\n38\n0.61281579\n0.100\n2.559\n1.118944874\nNA\n6.233364e-01\n\n\nSFER\n71\nNA\n1\n0.31000000\n0.310\n0.310\nNA\nNA\nNA\n\n\nSFER\n8\n0.0060000000\n53\n0.13832075\n0.000\n0.505\n0.883333143\n0.00600000\n3.474634e-02\n\n\nSFER\n9\n0.0022500000\n53\n0.12139623\n0.000\n1.300\n1.502401126\nNA\n7.158448e-01\n\n\nSFER\n9.5\n0.0042678571\n50\n0.10166000\n0.000\n1.730\n2.409151714\nNA\n5.388917e-02\n\n\nSFER\n9.6\nNA\n1\n0.01000000\n0.010\n0.010\nNA\nNA\nNA\n\n\nSFER\n9.7\nNA\n1\n0.01000000\n0.010\n0.010\nNA\nNA\nNA\n\n\nSFER\n9.8\nNA\n1\n0.00000000\n0.000\n0.000\nNA\nNA\nNA\n\n\nSFER\nAC1\nNA\n1\n0.39600000\n0.396\n0.396\nNA\nNA\nNA\n\n\nSFER\nAC2\nNA\n1\n0.64800000\n0.648\n0.648\nNA\nNA\nNA\n\n\nSFER\nAC3\nNA\n1\n1.41200000\n1.412\n1.412\nNA\nNA\nNA\n\n\nSFER\nAC4\nNA\n1\n0.33600000\n0.336\n0.336\nNA\nNA\nNA\n\n\nSFER\nAC5\nNA\n1\n0.23700000\n0.237\n0.237\nNA\nNA\nNA\n\n\nSFER\nAC6\nNA\n1\n0.28100000\n0.281\n0.281\nNA\nNA\nNA\n\n\nSFER\nAMI1\n0.1445000000\n21\n0.72676190\n0.192\n1.462\n0.599098370\nNA\n2.547075e-01\n\n\nSFER\nAMI2\n-0.0120000000\n21\n0.50733333\n0.073\n1.362\n0.757857662\nNA\n1.000000e+00\n\n\nSFER\nAMI3\n0.0440000000\n22\n0.57059091\n0.055\n1.928\n0.970522745\nNA\n1.000000e+00\n\n\nSFER\nAMI4\n0.0020000000\n20\n0.36905000\n0.058\n1.850\n1.092027626\nNA\n1.000000e+00\n\n\nSFER\nAMI5\n-0.0192500000\n22\n0.33013636\n0.046\n1.237\n1.032797288\nNA\n4.113138e-01\n\n\nSFER\nAMI6\n-0.0120000000\n22\n0.26009091\n0.039\n0.931\n0.965744565\nNA\n4.113138e-01\n\n\nSFER\nAMI7\n-0.0310000000\n22\n0.17668182\n0.029\n0.552\n0.777930794\nNA\n7.841912e-01\n\n\nSFER\nAMI8\n0.0242500000\n22\n0.14931818\n0.028\n0.538\n0.822646527\nNA\n1.000000e+00\n\n\nSFER\nAMI9\n-0.0055000000\n22\n0.15400000\n0.028\n0.653\n0.982263661\nNA\n7.841912e-01\n\n\nSFER\nBG1\n0.2652500000\n21\n1.46200000\n0.286\n3.565\n0.681307822\nNA\n1.000000e+00\n\n\nSFER\nBG10\nNA\n1\n0.02500000\n0.025\n0.025\nNA\nNA\nNA\n\n\nSFER\nBG11\nNA\n1\n0.02700000\n0.027\n0.027\nNA\nNA\nNA\n\n\nSFER\nBG12\nNA\n1\n0.01800000\n0.018\n0.018\nNA\nNA\nNA\n\n\nSFER\nBG13\nNA\n1\n0.02100000\n0.021\n0.021\nNA\nNA\nNA\n\n\nSFER\nBG14\nNA\n1\n0.02100000\n0.021\n0.021\nNA\nNA\nNA\n\n\nSFER\nBG15\nNA\n1\n0.01900000\n0.019\n0.019\nNA\nNA\nNA\n\n\nSFER\nBG16\nNA\n1\n0.02300000\n0.023\n0.023\nNA\nNA\nNA\n\n\nSFER\nBG17\nNA\n1\n0.04200000\n0.042\n0.042\nNA\nNA\nNA\n\n\nSFER\nBG18\nNA\n1\n0.03000000\n0.030\n0.030\nNA\nNA\nNA\n\n\nSFER\nBG2\n0.1628000000\n26\n1.09653846\n0.205\n4.094\n0.986107342\nNA\n3.140626e-01\n\n\nSFER\nBG20\nNA\n1\n0.02400000\n0.024\n0.024\nNA\nNA\nNA\n\n\nSFER\nBG3\n0.0772500000\n25\n0.65084000\n0.067\n3.341\n1.117164590\nNA\n2.864220e-01\n\n\nSFER\nBG4\n0.1107500000\n26\n0.46450000\n0.030\n1.964\n1.000746870\nNA\n1.587087e-01\n\n\nSFER\nBG6\n-0.0600000000\n9\n0.12244444\n0.040\n0.289\n0.737022147\nNA\n1.000000e+00\n\n\nSFER\nBG7\n0.0140000000\n9\n0.09733333\n0.033\n0.295\n0.866553406\nNA\n1.000000e+00\n\n\nSFER\nBG8\nNA\n1\n0.02300000\n0.023\n0.023\nNA\nNA\nNA\n\n\nSFER\nBG9\nNA\n1\n0.01600000\n0.016\n0.016\nNA\nNA\nNA\n\n\nSFER\nBK1\nNA\n1\n0.15000000\n0.150\n0.150\nNA\nNA\nNA\n\n\nSFER\nCAL1\n0.2928000000\n29\n1.48034483\n0.000\n5.290\n0.882633677\n0.29280000\n1.496102e-02\n\n\nSFER\nCAL2\n0.1489166667\n30\n0.84393333\n0.006\n4.522\n1.037472369\n0.14891667\n4.149370e-02\n\n\nSFER\nCAL3\n0.0647083333\n30\n0.72086667\n0.000\n4.665\n1.253553306\nNA\n1.581525e-01\n\n\nSFER\nCAL4\n0.0736000000\n30\n0.62190000\n0.061\n2.404\n0.855703451\nNA\n1.581525e-01\n\n\nSFER\nCAL5\n0.0574000000\n30\n0.62576667\n0.000\n5.214\n1.557090614\nNA\n2.723409e-01\n\n\nSFER\nCAL6\n-0.0118000000\n24\n0.26004167\n0.033\n1.108\n1.110778765\nNA\n6.625206e-01\n\n\nSFER\nCAL7\nNA\n1\n0.25600000\n0.256\n0.256\nNA\nNA\nNA\n\n\nSFER\nCAL8\nNA\n1\n0.25800000\n0.258\n0.258\nNA\nNA\nNA\n\n\nSFER\nCALA\nNA\n1\n0.28100000\n0.281\n0.281\nNA\nNA\nNA\n\n\nSFER\nCK1\nNA\n1\n0.58700000\n0.587\n0.587\nNA\nNA\nNA\n\n\nSFER\nCK2\nNA\n1\n0.16300000\n0.163\n0.163\nNA\nNA\nNA\n\n\nSFER\nCW1\n0.0430000000\n12\n1.15208333\n0.141\n2.098\n0.615474197\nNA\n1.000000e+00\n\n\nSFER\nCW2\n0.1420000000\n12\n0.74491667\n0.189\n1.786\n0.740556392\nNA\n1.000000e+00\n\n\nSFER\nCW3\n0.0716000000\n13\n0.66276923\n0.129\n1.972\n0.922189115\nNA\n5.200505e-01\n\n\nSFER\nCW4\n0.0972000000\n12\n0.52075000\n0.076\n1.886\n0.956350912\nNA\n1.000000e+00\n\n\nSFER\nCW5\n-0.0338500000\n9\n0.51088889\n0.049\n2.506\n1.508414959\nNA\n6.434288e-01\n\n\nSFER\nCW6\n-0.0262000000\n9\n0.43633333\n0.069\n2.332\n1.664697151\nNA\n6.434288e-01\n\n\nSFER\nCW7\n-0.2425000000\n8\n0.29400000\n0.037\n1.170\n1.298826093\nNA\n1.000000e+00\n\n\nSFER\nCaseyhole\nNA\n1\n0.05200000\n0.052\n0.052\nNA\nNA\nNA\n\n\nSFER\nEB1\nNA\n1\n0.93400000\n0.934\n0.934\nNA\nNA\nNA\n\n\nSFER\nEB2\nNA\n1\n0.26700000\n0.267\n0.267\nNA\nNA\nNA\n\n\nSFER\nEH07\nNA\n1\n1.26600000\n1.266\n1.266\nNA\nNA\nNA\n\n\nSFER\nEH08\nNA\n1\n1.02300000\n1.023\n1.023\nNA\nNA\nNA\n\n\nSFER\nEKIN\n0.0023333333\n50\n0.17606000\n0.020\n0.822\n0.965361976\nNA\n8.101812e-01\n\n\nSFER\nEKMID\n0.0048000000\n51\n0.12523529\n0.000\n0.350\n0.702084702\nNA\n2.678826e-01\n\n\nSFER\nEKOFF\n0.0010000000\n51\n0.14923529\n0.010\n2.300\n2.133931843\nNA\n9.367237e-01\n\n\nSFER\nGP1\nNA\n4\n1.16575000\n0.160\n2.725\n0.945259782\nNA\nNA\n\n\nSFER\nGP1.5\nNA\n1\n0.00000000\n0.000\n0.000\nNA\nNA\nNA\n\n\nSFER\nGP2\nNA\n4\n0.36350000\n0.112\n0.642\n0.707289824\nNA\nNA\n\n\nSFER\nGP3\nNA\n3\n0.27833333\n0.107\n0.502\n0.728024533\nNA\nNA\n\n\nSFER\nGP4\nNA\n4\n0.13050000\n0.038\n0.249\n0.682193206\nNA\nNA\n\n\nSFER\nGP5\n0.0513750000\n29\n0.27082759\n0.048\n0.838\n0.842077454\n0.05137500\n3.495507e-02\n\n\nSFER\nGS\nNA\n1\n0.04600000\n0.046\n0.046\nNA\nNA\nNA\n\n\nSFER\nGlider\nNA\n2\n0.37500000\n0.100\n0.650\n1.037089946\nNA\nNA\n\n\nSFER\nHB1\nNA\n1\n0.38300000\n0.383\n0.383\nNA\nNA\nNA\n\n\nSFER\nHB2\nNA\n1\n0.50900000\n0.509\n0.509\nNA\nNA\nNA\n\n\nSFER\nHB3\nNA\n1\n1.06900000\n1.069\n1.069\nNA\nNA\nNA\n\n\nSFER\nHB4\nNA\n1\n1.27000000\n1.270\n1.270\nNA\nNA\nNA\n\n\nSFER\nHB5\nNA\n1\n0.42100000\n0.421\n0.421\nNA\nNA\nNA\n\n\nSFER\nHB6\nNA\n1\n0.49900000\n0.499\n0.499\nNA\nNA\nNA\n\n\nSFER\nJunkpile\nNA\n1\n1.15700000\n1.157\n1.157\nNA\nNA\nNA\n\n\nSFER\nKW1\n-0.0088000000\n31\n0.50409677\n0.060\n1.644\n0.746446572\nNA\n7.566836e-01\n\n\nSFER\nKW2\n0.0006666667\n31\n0.61464516\n0.000\n2.167\n0.876304846\nNA\n1.000000e+00\n\n\nSFER\nKW3\n-0.0113333333\n31\n0.42422581\n0.005\n1.927\n1.045022332\nNA\n7.566836e-01\n\n\nSFER\nKW4\n0.0058000000\n30\n0.33486667\n0.039\n1.518\n0.916238326\nNA\n7.487740e-01\n\n\nSFER\nL1\nNA\n7\n1.41228571\n0.305\n2.364\n0.587217111\nNA\nNA\n\n\nSFER\nL3\nNA\n7\n0.52571429\n0.126\n0.875\n0.533331387\nNA\nNA\n\n\nSFER\nL5\nNA\n7\n0.28928571\n0.058\n0.567\n0.702751388\nNA\nNA\n\n\nSFER\nL7\nNA\n7\n0.31700000\n0.053\n0.688\n0.799774239\nNA\nNA\n\n\nSFER\nL9\nNA\n8\n0.18725000\n0.032\n0.614\n1.022282019\nNA\nNA\n\n\nSFER\nM01\nNA\n1\n0.08000000\n0.080\n0.080\nNA\nNA\nNA\n\n\nSFER\nM02\nNA\n1\n0.09600000\n0.096\n0.096\nNA\nNA\nNA\n\n\nSFER\nM03\nNA\n1\n0.06700000\n0.067\n0.067\nNA\nNA\nNA\n\n\nSFER\nM04\nNA\n1\n0.19600000\n0.196\n0.196\nNA\nNA\nNA\n\n\nSFER\nM05\nNA\n1\n0.19900000\n0.199\n0.199\nNA\nNA\nNA\n\n\nSFER\nMR\n0.0032500000\n53\n0.07477358\n0.000\n0.292\n0.753125600\nNA\n1.710516e-01\n\n\nSFER\nMudhole\nNA\n1\n0.07200000\n0.072\n0.072\nNA\nNA\nNA\n\n\nSFER\nNaplesBlueHole\nNA\n1\n0.04400000\n0.044\n0.044\nNA\nNA\nNA\n\n\nSFER\nPLUME\nNA\n1\n0.11500000\n0.115\n0.115\nNA\nNA\nNA\n\n\nSFER\nROME4\n-0.0630000000\n8\n0.60150000\n0.143\n1.518\n0.844193806\nNA\n1.000000e+00\n\n\nSFER\nROME5\n0.0280000000\n8\n1.07850000\n0.213\n2.845\n0.957942495\nNA\n1.000000e+00\n\n\nSFER\nRP1\n0.2384750000\n30\n1.48653333\n0.000\n6.873\n0.949964019\nNA\n1.581525e-01\n\n\nSFER\nRP2\n0.0169666667\n29\n0.97117241\n0.000\n3.623\n0.906096219\nNA\n6.264963e-01\n\n\nSFER\nRP3\n0.0110000000\n29\n0.69444828\n0.079\n2.879\n0.964795413\nNA\n8.711315e-01\n\n\nSFER\nRP4\n0.0594166667\n30\n0.48183333\n0.042\n3.249\n1.394035072\n0.05941667\n4.149370e-02\n\n\nSFER\nRedTide\nNA\n1\n0.74000000\n0.740\n0.740\nNA\nNA\nNA\n\n\nSFER\nTB1\n0.0290000000\n24\n0.80412500\n0.132\n2.575\n0.907483791\nNA\n1.000000e+00\n\n\nSFER\nTB10\n-0.0020000000\n22\n0.30922727\n0.027\n1.545\n1.325904768\nNA\n3.016996e-01\n\n\nSFER\nTB11\nNA\n1\n0.03400000\n0.034\n0.034\nNA\nNA\nNA\n\n\nSFER\nTB12\nNA\n1\n0.09800000\n0.098\n0.098\nNA\nNA\nNA\n\n\nSFER\nTB13\nNA\n1\n0.04500000\n0.045\n0.045\nNA\nNA\nNA\n\n\nSFER\nTB2\n0.1570000000\n24\n0.63504167\n0.071\n3.617\n1.183810897\nNA\n3.750436e-01\n\n\nSFER\nTB3\n0.1620000000\n24\n0.60804167\n0.044\n4.019\n1.334019040\nNA\n1.833212e-01\n\n\nSFER\nTB4\n0.0585000000\n24\n0.37208333\n0.030\n1.733\n1.166526236\nNA\n6.573804e-01\n\n\nSFER\nTB5\n-0.0090000000\n24\n0.27650000\n0.051\n1.616\n1.316606453\nNA\n1.000000e+00\n\n\nSFER\nTB6\nNA\n2\n1.14450000\n0.578\n1.711\n0.700001733\nNA\nNA\n\n\nSFER\nTB7\nNA\n2\n1.82850000\n0.368\n3.289\n1.129591965\nNA\nNA\n\n\nSFER\nTB8\nNA\n2\n0.42250000\n0.247\n0.598\n0.587442557\nNA\nNA\n\n\nSFER\nTB9\nNA\n2\n0.37900000\n0.378\n0.380\n0.003731434\nNA\nNA\n\n\nSFER\nTBA\nNA\n1\n1.14700000\n1.147\n1.147\nNA\nNA\nNA\n\n\nSFER\nTBB\nNA\n1\n0.69400000\n0.694\n0.694\nNA\nNA\nNA\n\n\nSFER\nTBC\nNA\n1\n0.67200000\n0.672\n0.672\nNA\nNA\nNA\n\n\nSFER\nUKIN\n0.0064722222\n51\n0.17139216\n0.023\n1.332\n1.294653203\nNA\n6.539865e-02\n\n\nSFER\nUKMID\n0.0020000000\n51\n0.11217647\n0.000\n0.380\n0.886002849\nNA\n2.824619e-01\n\n\nSFER\nUKOFF\n0.0016000000\n52\n0.07773077\n0.010\n0.196\n0.583358640\nNA\n4.958810e-01\n\n\nSFER\nV1\n0.1891000000\n25\n1.04700000\n0.101\n7.197\n1.336597704\nNA\n2.062116e-01\n\n\nSFER\nV10\nNA\n1\n0.01200000\n0.012\n0.012\nNA\nNA\nNA\n\n\nSFER\nV11\nNA\n1\n0.02400000\n0.024\n0.024\nNA\nNA\nNA\n\n\nSFER\nV2\n0.0848000000\n26\n0.69653846\n0.099\n2.411\n0.902580546\nNA\n4.771966e-01\n\n\nSFER\nV3\n0.0812000000\n24\n0.70412500\n0.000\n7.575\n2.160613701\nNA\n1.000827e-01\n\n\nSFER\nV4\n0.0246000000\n26\n0.43315385\n0.063\n1.744\n1.068761302\nNA\n4.771966e-01\n\n\nSFER\nV5\n0.0212500000\n25\n0.31952000\n0.035\n1.017\n0.873596513\nNA\n4.109480e-01\n\n\nSFER\nV6\n0.0375000000\n26\n0.26634615\n0.042\n1.095\n0.919430359\nNA\n7.556057e-02\n\n\nSFER\nV7\n0.0432000000\n26\n0.27026923\n0.000\n0.937\n0.994409953\nNA\n4.469742e-01\n\n\nSFER\nV8\n0.0337500000\n25\n0.26684000\n0.042\n1.360\n1.095574407\nNA\n2.174491e-01\n\n\nSFER\nV9\n0.0565000000\n26\n0.19853846\n0.031\n0.521\n0.748740332\nNA\n2.539933e-01\n\n\nSFER\nWS\n0.0045555556\n53\n0.10949057\n0.000\n0.724\n1.010268082\nNA\n1.076602e-01\n\n\nSFER\nZ03027\nNA\n1\n0.24800000\n0.248\n0.248\nNA\nNA\nNA\n\n\nSFER\nZ03076\nNA\n1\n0.16900000\n0.169\n0.169\nNA\nNA\nNA\n\n\nSFER\nZ03116\nNA\n1\n0.09400000\n0.094\n0.094\nNA\nNA\nNA\n\n\nSFER\nZ03146\nNA\n1\n0.18600000\n0.186\n0.186\nNA\nNA\nNA\n\n\nSFER\nZ03198\nNA\n1\n0.48000000\n0.480\n0.480\nNA\nNA\nNA\n\n\nSFER\nZ04067\nNA\n1\n0.95500000\n0.955\n0.955\nNA\nNA\nNA\n\n\nSFER\nZ04068\nNA\n1\n3.00000000\n3.000\n3.000\nNA\nNA\nNA\n\n\nSFER\nZ04093\nNA\n1\n1.91200000\n1.912\n1.912\nNA\nNA\nNA\n\n\nSFER\nZ04099\nNA\n1\n0.10600000\n0.106\n0.106\nNA\nNA\nNA\n\n\nSFER\nZ04110\nNA\n1\n0.60700000\n0.607\n0.607\nNA\nNA\nNA\n\n\nSFER\nZ04610\nNA\n1\n0.09000000\n0.090\n0.090\nNA\nNA\nNA\n\n\n\n\n\n\n\n\n\nReporting Programs:\n\n\ndisplay reporting programs\nlibrary(ggplot2)\nggplot(df, aes(x = program)) +\n  geom_bar() +\n  labs(title = \"Reporting Programs\", x = \"Program\", y = \"Count\")"
  },
  {
    "objectID": "analyte_reports/analyte_reports/Nitrite.html",
    "href": "analyte_reports/analyte_reports/Nitrite.html",
    "title": "Nitrite Report",
    "section": "",
    "text": "get data across all programs, filter for analyte\nlibrary('here')\nlibrary('dplyr')\nsource(here(\"R/getAllData.R\"))\nfull_df &lt;- getAllData()\ndf &lt;- filter(full_df, DEP.Analyte.Name == params$analyte)\n\n\n\n\ncreate .csv of analyte data\n# save df to csv\n# reduce to only cols we need & save to csv\ndf %&gt;%\n  mutate(\n    source = program,\n    site = Monitoring.Location.ID,\n    datetime = Activity.Start.Date.Time,\n    analyte = DEP.Analyte.Name,\n    value = DEP.Result.Value.Number,\n    units = DEP.Result.Unit,\n    latitude = Org.Decimal.Latitude,\n    longitude = Org.Decimal.Longitude,\n    sample_depth = Activity.Depth,\n    .keep = \"none\"\n) %&gt;%\n  write.csv(here(\"data\", \"exports\", \"unified-wq-db-samples\", paste0(params$analyte, \".csv\")))\n\n\nDownload data for this analyte here\n\nHistogram of DEP.Result.Value.Number:\n\n\ndisplay histogram of values\nlibrary(ggplot2)\nggplot(df, aes(x = DEP.Result.Value.Number)) +\n  geom_histogram(bins = 30, fill = \"blue\", color = \"black\") +\n  labs(title = \"Histogram of Values\", x = \"Value\", y = \"Count\")\n\n\n\n\n\n\n\n\n\n\n\nStation Statistics:\n\n\ncreate station statistics dataframe\nsource(here(\"R/seasonalMannKendall.R\"))\nlibrary(lubridate)  # for mdy_hms()\nlibrary(pander)  # for display\n\n# create table of samples for each station\nsamples_df &lt;- df %&gt;%\n  select(\n    program, \n    Monitoring.Location.ID, \n    Activity.Start.Date.Time,\n    analyte = DEP.Analyte.Name,\n    DEP.Result.Value.Number, \n    DEP.Result.Unit,\n    latitude = Org.Decimal.Latitude,\n    longitude = Org.Decimal.Longitude,\n    sample_depth = Activity.Depth\n    ) %&gt;%\n  # drop any with empty Monitoring.Location.ID\n  filter(!is.na(Monitoring.Location.ID)) %&gt;%\n  # drop any with empty Activity.Start.Date.Time\n  filter(!is.na(Activity.Start.Date.Time)) %&gt;%\n  # parse the \"MM/DD/YYYY HH:MM:SS\" strings into POSIXct\n  mutate(Activity.Start.Date.Time = mdy_hms(\n          Activity.Start.Date.Time,\n          tz = \"UTC\")) %&gt;%\n  distinct()\n\n\n# add statistics for each station\nsample_stats_df &lt;- samples_df %&gt;%\n  group_by(program, Monitoring.Location.ID) %&gt;%\n  reframe(\n    {\n      tmp &lt;- seasonalMannKendallVectorized(\n        Activity.Start.Date.Time,\n        DEP.Result.Value.Number\n      )\n    },\n    n_values = n(),\n    mean = mean(DEP.Result.Value.Number),\n    min = min(DEP.Result.Value.Number),\n    max = max(DEP.Result.Value.Number),\n    coefficient.of.variation = sd(DEP.Result.Value.Number) / mean(DEP.Result.Value.Number)\n  ) %&gt;%\n  mutate(\n    # create column significant_slope\n    significant_slope = ifelse(z &lt;= 0.05, slope, NA_real_),\n    pvalue = z\n  ) %&gt;%\n  # drop unwanted columns added by seasonalMannKendall\n  select(\n    -z,\n    -tau,\n    -chi_square\n  )\n\n\n\n# print(head(sample_stats_df))\n# # display sample_stats_df with pander\n# pander(sample_stats_df)\n\n\n\n\nsave stats to csv\nsample_stats_df %&gt;%\n  write.csv(here(\n    \"data\", \"exports\", \"seasonal-mann-kendall-stats\", paste0(params$analyte, \".csv\")))\n\n\nDownload data for this analyte’s statistics here\n\n\ndisplay with gt\nlibrary(gt)\nlibrary(scales)\nlibrary(tidyselect)  # for all_of()\nlibrary(RColorBrewer) # for brewer.pal()\n\n# ── color_column() ─────────────────────────────────────────────────────────────\n# gt_tbl   : a gt object that you’ve already created (e.g. `sample_stats_df %&gt;% gt()`)\n# df       : the original data.frame (must contain the column you want to color)\n# column   : a string, e.g. \"slope\" or \"n_values\"\n# palette  : a character vector of colours to feed to col_numeric()\n#\ncolor_column &lt;- function(gt_tbl, df, column, \n                         palette = c(\"red\", \"orange\", \"yellow\", \"green\", \"blue\", \"violet\"),\n                         domain = NULL) {\n  # 1) Pull out that column’s numeric values\n  vals &lt;- df[[column]]\n  if (!is.numeric(vals)) {\n    stop(sprintf(\"`%s` is not numeric; data_color() requires a numeric column.\", column))\n  }\n  \n  # 2) Compute its min and max (ignoring NA)\n  min_val &lt;- min(vals, na.rm = TRUE)\n  max_val &lt;- max(vals, na.rm = TRUE)\n  if (is.null(domain)) {\n    domain &lt;- c(min_val, max_val)\n  }\n  \n  # 3) Call data_color() on the gt table for that single column\n  gt_tbl %&gt;%\n    data_color(\n      columns = all_of(column),\n      colors  = col_numeric(\n        palette = palette,\n        domain  = domain\n      )\n    )\n}\nlibrary(dplyr)\nlibrary(gt)\n\n# 1) First build your gt table as usual:\ngt_tbl &lt;- sample_stats_df %&gt;% \n  gt()\n\n# slope blue (-) to red (+) (0 centered)\ntryCatch({\n  min_slope &lt;- min(sample_stats_df$slope,  na.rm = TRUE)\n  max_slope &lt;- max(sample_stats_df$slope,  na.rm = TRUE)\n  max_abs_slope &lt;- max(abs(min_slope), abs(max_slope))\n  gt_tbl &lt;- color_column(\n    gt_tbl, \n    df     = sample_stats_df, \n    column = \"slope\",\n    palette = rev(brewer.pal(11, \"RdBu\")),\n    domain  = c(-max_abs_slope, max_abs_slope)\n  )\n}, error = function(e) {\n  print(\"Error in slope color column\")\n  print(e)\n})\n\ntryCatch({\n  # pvalue Z\n  gt_tbl &lt;- color_column(\n    gt_tbl, \n    df      = sample_stats_df, \n    column  = \"z\", \n    palette = scales::brewer_pal(palette = \"Blues\")(9)\n  )\n}, error = function(e) {\n  print(\"Error in z color column\")\n  print(e)\n})\n\n\n[1] \"Error in z color column\"\n&lt;simpleError in color_column(gt_tbl, df = sample_stats_df, column = \"z\", palette = (scales::brewer_pal(palette = \"Blues\"))(9)): `z` is not numeric; data_color() requires a numeric column.&gt;\n\n\ndisplay with gt\n# slope blue (-) to red (+) (0 centered)\ntryCatch({\n  min_slope &lt;- min(sample_stats_df$significant_slope,  na.rm = TRUE)\n  max_slope &lt;- max(sample_stats_df$significant_slope,  na.rm = TRUE)\n  max_abs_slope &lt;- max(abs(min_slope), abs(max_slope))\n  gt_tbl &lt;- color_column(\n    gt_tbl, \n    df     = sample_stats_df, \n    column = \"significant_slope\",\n    palette = rev(brewer.pal(11, \"RdBu\")),\n    domain  = c(-max_abs_slope, max_abs_slope)\n  )\n}, error = function(e) {\n  print(\"Error in significant_slope color column\")\n  print(e)\n})\n\ntryCatch({\n  # mean values blue to red (0 centered)\n  min_mean &lt;- min(sample_stats_df$mean,  na.rm = TRUE)\n  max_mean &lt;- max(sample_stats_df$mean,  na.rm = TRUE)\n  max_abs_mean &lt;- max(abs(min_mean), abs(max_mean))\n  gt_tbl &lt;- color_column(\n    gt_tbl, \n    df     = sample_stats_df, \n    column = \"mean\",\n    palette = rev(brewer.pal(11, \"RdBu\")),\n    domain  = c(-max_abs_mean, max_abs_mean)\n  )\n}, error = function(e) {\n  print(\"Error in mean color column\")\n  print(e)\n})\n\ntryCatch({\n  # n values white to green\n  gt_tbl &lt;- color_column(\n    gt_tbl, \n    df      = sample_stats_df, \n    column  = \"n_values\", \n    palette = scales::brewer_pal(palette = \"Greens\")(9)\n  )\n}, error = function(e) {\n  print(\"Error in n_values color column\")\n  print(e)\n})\n\ntryCatch({\n  # min\n  gt_tbl &lt;- color_column(\n    gt_tbl, \n    df      = sample_stats_df, \n    column  = \"min\", \n    palette = scales::brewer_pal(palette = \"Blues\")(9)\n  )\n}, error = function(e) {\n  print(\"Error in min color column\")\n  print(e)\n})\n\ntryCatch({\n  # max\n  gt_tbl &lt;- color_column(\n    gt_tbl, \n    df      = sample_stats_df, \n    column  = \"max\", \n    palette = scales::brewer_pal(palette = \"Blues\")(9)\n  )\n}, error = function(e) {\n  print(\"Error in max color column\")\n  print(e)\n})\n\ntryCatch({\n  # coefficient.of.variation\n  gt_tbl &lt;- color_column(\n    gt_tbl, \n    df      = sample_stats_df, \n    column  = \"coefficient.of.variation\", \n    palette = scales::brewer_pal(palette = \"Blues\")(9)\n  )\n}, error = function(e) {\n  print(\"Error in coefficient.of.variation color column\")\n  print(e)\n})\n\n# 4) Render/display:\ngt_tbl\n\n\n\n\n\n\n\n\nprogram\nMonitoring.Location.ID\nslope\nn_values\nmean\nmin\nmax\ncoefficient.of.variation\nsignificant_slope\npvalue\n\n\n\n\nSFER\n1\n-5.875000e-03\n54\n0.09201852\n0.000\n0.438\n1.0372136\nNA\n0.07550714\n\n\nSFER\n10\n2.225000e-03\n52\n0.08292308\n0.000\n1.244\n2.0653209\nNA\n0.39978118\n\n\nSFER\n11\n1.000000e-03\n55\n0.07667273\n0.000\n2.272\n3.9921821\nNA\n0.43359461\n\n\nSFER\n12\n0.000000e+00\n55\n0.02178182\n0.000\n0.150\n1.3799481\nNA\n0.71727475\n\n\nSFER\n13\n-6.696429e-04\n54\n0.06512963\n0.000\n0.679\n1.4472704\nNA\n0.41824735\n\n\nSFER\n14\n0.000000e+00\n55\n0.03045455\n0.000\n0.314\n1.6458821\nNA\n1.00000000\n\n\nSFER\n15\n0.000000e+00\n55\n0.06358182\n0.000\n2.712\n5.7295234\nNA\n0.66418332\n\n\nSFER\n15.5\n-5.089286e-04\n53\n0.02886792\n0.000\n0.390\n2.2471923\nNA\n0.24243194\n\n\nSFER\n16\n-4.000000e-03\n55\n0.08365455\n0.010\n1.125\n1.7973267\n-0.004000\n0.02476549\n\n\nSFER\n17\n-2.000000e-03\n56\n0.07551786\n0.000\n1.674\n3.0782689\nNA\n0.15487070\n\n\nSFER\n18\n0.000000e+00\n56\n0.02610714\n0.000\n0.513\n2.7556469\nNA\n0.71774662\n\n\nSFER\n19\n-1.250000e-03\n56\n0.09998214\n0.002\n0.800\n1.4086078\nNA\n0.32179522\n\n\nSFER\n2\n0.000000e+00\n54\n0.05948148\n0.000\n0.521\n1.5206514\nNA\n1.00000000\n\n\nSFER\n20\n0.000000e+00\n56\n0.09378571\n0.000\n2.556\n3.7263001\nNA\n0.94305667\n\n\nSFER\n21.25\nNA\n1\n0.02000000\n0.020\n0.020\nNA\nNA\nNA\n\n\nSFER\n21.5\n0.000000e+00\n54\n0.05183333\n0.000\n0.852\n2.7825622\nNA\n0.49255953\n\n\nSFER\n21LK\n0.000000e+00\n57\n0.03585965\n0.000\n0.633\n2.6528234\nNA\n0.67316324\n\n\nSFER\n22\n-1.125000e-03\n57\n0.02117544\n0.000\n0.160\n1.3029642\n-0.001125\n0.03269444\n\n\nSFER\n22.5\n-1.000000e-03\n53\n0.01662264\n0.000\n0.135\n1.3395546\nNA\n0.33523441\n\n\nSFER\n23\n0.000000e+00\n57\n0.03571930\n0.000\n0.230\n1.2287869\nNA\n0.83825649\n\n\nSFER\n24\n1.875000e-03\n57\n0.11105263\n0.000\n1.365\n1.8113884\nNA\n0.54641854\n\n\nSFER\n3\n0.000000e+00\n54\n0.03309259\n0.000\n0.151\n1.0833697\nNA\n1.00000000\n\n\nSFER\n30\n0.000000e+00\n54\n0.05618519\n0.000\n2.025\n4.9714726\nNA\n0.57760252\n\n\nSFER\n30.5\n0.000000e+00\n54\n0.03985185\n0.000\n1.189\n4.0533998\nNA\n0.87676260\n\n\nSFER\n31\n5.000000e-04\n55\n0.04236364\n0.000\n0.648\n2.6891895\nNA\n0.51082130\n\n\nSFER\n32\n2.000000e-04\n56\n0.04989286\n0.000\n1.167\n3.2231194\nNA\n0.38606358\n\n\nSFER\n33\n0.000000e+00\n56\n0.03001786\n0.000\n0.099\n0.8968359\nNA\n0.77602171\n\n\nSFER\n34\n-1.200000e-03\n56\n0.07423214\n0.000\n0.987\n1.8630947\nNA\n0.52725919\n\n\nSFER\n39\n6.250000e-05\n48\n0.04466667\n0.000\n0.515\n1.7195995\nNA\n0.93358650\n\n\nSFER\n4\n0.000000e+00\n44\n0.04977273\n0.000\n0.263\n1.0640938\nNA\n1.00000000\n\n\nSFER\n40\n3.125000e-04\n52\n0.06682692\n0.000\n0.983\n2.5430990\nNA\n0.81837178\n\n\nSFER\n41\n0.000000e+00\n54\n0.04555556\n0.000\n0.557\n1.9097807\nNA\n1.00000000\n\n\nSFER\n42\n2.916667e-04\n55\n0.03505455\n0.000\n0.243\n1.2578184\nNA\n0.72188981\n\n\nSFER\n45\n-1.000000e-03\n55\n0.04118182\n0.000\n0.643\n2.2516058\nNA\n0.39416640\n\n\nSFER\n46\n1.125000e-03\n56\n0.03412500\n0.000\n0.400\n1.8000496\nNA\n0.28642202\n\n\nSFER\n47\n3.833333e-04\n56\n0.02378571\n0.000\n0.112\n0.9172040\nNA\n0.57128677\n\n\nSFER\n48\n2.500000e-04\n55\n0.03925455\n0.000\n0.533\n1.9407204\nNA\n0.61157020\n\n\nSFER\n49\n6.785714e-04\n53\n0.05347170\n0.000\n0.763\n2.0798285\nNA\n0.51380229\n\n\nSFER\n5\n1.547619e-03\n44\n0.03320455\n0.000\n0.197\n0.9864708\nNA\n0.22339063\n\n\nSFER\n5.5\n0.000000e+00\n45\n0.06922222\n0.000\n0.780\n2.1068630\nNA\n0.93098745\n\n\nSFER\n50\n0.000000e+00\n54\n0.03788889\n0.000\n0.188\n1.0522851\nNA\n0.82433830\n\n\nSFER\n51\n1.666667e-04\n56\n0.05733929\n0.000\n0.965\n2.3612408\nNA\n0.67316324\n\n\nSFER\n52\n0.000000e+00\n53\n0.05786792\n0.000\n0.715\n1.8465208\nNA\n1.00000000\n\n\nSFER\n53\n-1.333333e-03\n50\n0.05724000\n0.000\n0.771\n2.3318135\nNA\n0.14687893\n\n\nSFER\n54\n-4.375000e-04\n68\n0.10395588\n0.000\n0.705\n1.3193111\nNA\n0.66333201\n\n\nSFER\n55\n-2.444444e-03\n70\n0.05618571\n0.000\n0.228\n0.9848523\nNA\n0.09205729\n\n\nSFER\n56\n-3.541667e-04\n71\n0.06269014\n0.000\n1.375\n2.6524508\nNA\n0.53074119\n\n\nSFER\n57\n-5.625000e-04\n72\n0.10316667\n0.000\n1.672\n2.5884172\nNA\n0.57394670\n\n\nSFER\n57.1\n0.000000e+00\n72\n0.03906944\n0.000\n0.374\n1.6336772\nNA\n0.79524526\n\n\nSFER\n57.2\n1.250000e-03\n71\n0.04312676\n0.000\n0.423\n1.6662409\nNA\n0.13387497\n\n\nSFER\n57.3\n1.250000e-03\n67\n0.03949254\n0.000\n0.968\n3.0171916\n0.001250\n0.03972048\n\n\nSFER\n58\n0.000000e+00\n53\n0.02869811\n0.000\n0.331\n2.0052363\nNA\n0.69738202\n\n\nSFER\n59\n7.142857e-05\n53\n0.10539623\n0.000\n1.603\n2.7292780\nNA\n0.87676260\n\n\nSFER\n6\n-5.000000e-04\n46\n0.03323913\n0.000\n0.501\n2.3065985\nNA\n0.23008418\n\n\nSFER\n6.5\n0.000000e+00\n47\n0.03485106\n0.000\n0.482\n2.5756093\nNA\n1.00000000\n\n\nSFER\n60\n8.375000e-04\n56\n0.05569643\n0.000\n0.390\n1.4116203\nNA\n0.24366022\n\n\nSFER\n61\n0.000000e+00\n56\n0.05725000\n0.000\n0.443\n1.3275287\nNA\n0.94216611\n\n\nSFER\n62\n-2.250000e-04\n56\n0.05651786\n0.000\n0.395\n1.2490128\nNA\n0.66252058\n\n\nSFER\n63\n-1.100000e-03\n54\n0.06007407\n0.000\n0.244\n0.9722569\nNA\n0.08676817\n\n\nSFER\n64\n-4.000000e-03\n48\n0.08341667\n0.000\n0.540\n1.2325750\nNA\n0.32582369\n\n\nSFER\n65\n-2.645833e-03\n51\n0.17725490\n0.000\n1.534\n1.7820765\nNA\n0.31674974\n\n\nSFER\n66\n0.000000e+00\n52\n0.09050000\n0.000\n1.531\n2.4207184\nNA\n1.00000000\n\n\nSFER\n67\n-4.285714e-04\n52\n0.05407692\n0.000\n0.347\n1.1509560\nNA\n0.56589683\n\n\nSFER\n68\n-3.333333e-04\n55\n0.05818182\n0.000\n0.493\n1.4201212\nNA\n0.66473214\n\n\nSFER\n69\n1.736111e-04\n42\n0.05357143\n0.000\n0.403\n1.3150569\nNA\n0.74143320\n\n\nSFER\n7\n2.250000e-03\n55\n0.06656364\n0.000\n0.226\n0.8264781\nNA\n0.67665732\n\n\nSFER\n70\n-2.500000e-03\n42\n0.05700000\n0.000\n0.485\n1.5279208\nNA\n0.09898793\n\n\nSFER\n71\nNA\n1\n0.14000000\n0.140\n0.140\nNA\nNA\nNA\n\n\nSFER\n8\n5.555556e-04\n57\n0.08543860\n0.000\n2.164\n3.6015051\nNA\n0.45208442\n\n\nSFER\n9\n0.000000e+00\n57\n0.08052632\n0.000\n2.095\n3.6465457\nNA\n0.58127217\n\n\nSFER\n9.5\n-2.500000e-04\n53\n0.04364151\n0.000\n0.740\n2.9658901\nNA\n0.36525785\n\n\nSFER\n9.6\nNA\n1\n0.02400000\n0.024\n0.024\nNA\nNA\nNA\n\n\nSFER\n9.7\nNA\n1\n0.73800000\n0.738\n0.738\nNA\nNA\nNA\n\n\nSFER\n9.8\nNA\n1\n0.88500000\n0.885\n0.885\nNA\nNA\nNA\n\n\nSFER\nAC1\nNA\n1\n0.11500000\n0.115\n0.115\nNA\nNA\nNA\n\n\nSFER\nAC2\nNA\n1\n0.21000000\n0.210\n0.210\nNA\nNA\nNA\n\n\nSFER\nAC3\nNA\n1\n0.06000000\n0.060\n0.060\nNA\nNA\nNA\n\n\nSFER\nAC4\nNA\n1\n0.10000000\n0.100\n0.100\nNA\nNA\nNA\n\n\nSFER\nAC5\nNA\n1\n0.03000000\n0.030\n0.030\nNA\nNA\nNA\n\n\nSFER\nAC6\nNA\n1\n0.01000000\n0.010\n0.010\nNA\nNA\nNA\n\n\nSFER\nAMI1\n-1.000000e-02\n26\n0.04865385\n0.000\n0.841\n3.3461271\nNA\n0.12963458\n\n\nSFER\nAMI2\n0.000000e+00\n26\n0.02438462\n0.000\n0.273\n2.2159103\nNA\n1.00000000\n\n\nSFER\nAMI3\n-3.500000e-03\n26\n0.09426923\n0.000\n0.881\n2.2104524\nNA\n0.49505671\n\n\nSFER\nAMI4\n1.000000e-03\n25\n0.12068000\n0.000\n1.724\n3.0792484\nNA\n0.81696132\n\n\nSFER\nAMI5\n0.000000e+00\n26\n0.06134615\n0.000\n0.788\n2.6941384\nNA\n0.32229960\n\n\nSFER\nAMI6\n0.000000e+00\n26\n0.02746154\n0.000\n0.430\n3.0645445\nNA\n0.80649594\n\n\nSFER\nAMI7\n-4.000000e-03\n26\n0.07219231\n0.000\n1.488\n4.0299340\nNA\n0.49505671\n\n\nSFER\nAMI8\n0.000000e+00\n26\n0.09015385\n0.000\n1.350\n3.2466717\nNA\n0.46243273\n\n\nSFER\nAMI9\n0.000000e+00\n26\n0.07000000\n0.000\n1.444\n4.0382235\nNA\n1.00000000\n\n\nSFER\nBG1\n1.000000e-03\n24\n0.09004167\n0.011\n0.660\n1.5705546\nNA\n1.00000000\n\n\nSFER\nBG10\nNA\n1\n0.02000000\n0.020\n0.020\nNA\nNA\nNA\n\n\nSFER\nBG11\nNA\n1\n0.00000000\n0.000\n0.000\nNA\nNA\nNA\n\n\nSFER\nBG12\nNA\n1\n0.00000000\n0.000\n0.000\nNA\nNA\nNA\n\n\nSFER\nBG13\nNA\n1\n0.03000000\n0.030\n0.030\nNA\nNA\nNA\n\n\nSFER\nBG14\nNA\n1\n0.02000000\n0.020\n0.020\nNA\nNA\nNA\n\n\nSFER\nBG15\nNA\n1\n0.02000000\n0.020\n0.020\nNA\nNA\nNA\n\n\nSFER\nBG16\nNA\n1\n0.00000000\n0.000\n0.000\nNA\nNA\nNA\n\n\nSFER\nBG17\nNA\n1\n0.02000000\n0.020\n0.020\nNA\nNA\nNA\n\n\nSFER\nBG18\nNA\n1\n0.00000000\n0.000\n0.000\nNA\nNA\nNA\n\n\nSFER\nBG2\n1.500000e-03\n30\n0.05390000\n0.000\n0.291\n1.0633103\nNA\n1.00000000\n\n\nSFER\nBG20\nNA\n1\n0.00000000\n0.000\n0.000\nNA\nNA\nNA\n\n\nSFER\nBG3\n0.000000e+00\n30\n0.02846667\n0.000\n0.167\n1.5926561\nNA\n0.70377131\n\n\nSFER\nBG4\n0.000000e+00\n30\n0.02470000\n0.000\n0.143\n1.3599594\nNA\n0.85183953\n\n\nSFER\nBG6\n1.500000e-02\n11\n0.02727273\n0.000\n0.160\n1.7028571\nNA\n1.00000000\n\n\nSFER\nBG7\n-5.000000e-03\n11\n0.01636364\n0.000\n0.070\n1.3874437\nNA\n1.00000000\n\n\nSFER\nBG8\nNA\n1\n0.03000000\n0.030\n0.030\nNA\nNA\nNA\n\n\nSFER\nBG9\nNA\n1\n0.01000000\n0.010\n0.010\nNA\nNA\nNA\n\n\nSFER\nBK1\nNA\n1\n0.01300000\n0.013\n0.013\nNA\nNA\nNA\n\n\nSFER\nCAL1\n3.750000e-03\n32\n0.05650000\n0.000\n0.253\n1.0161601\nNA\n0.88443416\n\n\nSFER\nCAL2\n1.458333e-03\n34\n0.05502941\n0.000\n0.756\n2.3195904\nNA\n0.13441657\n\n\nSFER\nCAL3\n1.500000e-03\n34\n0.04850000\n0.000\n0.280\n1.4531130\nNA\n0.41849223\n\n\nSFER\nCAL4\n-9.666667e-04\n34\n0.11714706\n0.000\n2.839\n4.1333546\nNA\n0.32856498\n\n\nSFER\nCAL5\n3.600000e-03\n34\n0.11682353\n0.000\n2.831\n4.1250316\nNA\n0.22067136\n\n\nSFER\nCAL6\n-4.000000e-03\n28\n0.08360714\n0.000\n1.262\n2.9246340\nNA\n0.26520539\n\n\nSFER\nCAL7\nNA\n1\n0.02500000\n0.025\n0.025\nNA\nNA\nNA\n\n\nSFER\nCAL8\nNA\n1\n0.02400000\n0.024\n0.024\nNA\nNA\nNA\n\n\nSFER\nCALA\nNA\n1\n0.01100000\n0.011\n0.011\nNA\nNA\nNA\n\n\nSFER\nCK1\nNA\n1\n0.06700000\n0.067\n0.067\nNA\nNA\nNA\n\n\nSFER\nCK2\nNA\n1\n0.03200000\n0.032\n0.032\nNA\nNA\nNA\n\n\nSFER\nCW1\n7.100000e-03\n16\n0.21906250\n0.000\n2.250\n2.5240767\nNA\n1.00000000\n\n\nSFER\nCW2\n1.250000e-02\n16\n0.08287500\n0.008\n0.340\n1.2240701\nNA\n0.30817955\n\n\nSFER\nCW3\n3.410000e-02\n17\n0.08264706\n0.000\n0.350\n1.3159298\n0.034100\n0.04920279\n\n\nSFER\nCW4\n4.000000e-02\n16\n0.05300000\n0.000\n0.180\n1.0728535\nNA\n0.08942936\n\n\nSFER\nCW5\n5.760000e-02\n12\n0.07433333\n0.000\n0.290\n1.3354635\nNA\n0.14856177\n\n\nSFER\nCW6\n2.000000e-03\n12\n0.04391667\n0.000\n0.190\n1.3793558\nNA\n0.69853536\n\n\nSFER\nCW7\n1.000000e-02\n11\n0.12727273\n0.000\n1.280\n3.0053116\nNA\n1.00000000\n\n\nSFER\nCaseyhole\nNA\n1\n0.02900000\n0.029\n0.029\nNA\nNA\nNA\n\n\nSFER\nEB1\nNA\n1\n0.06500000\n0.065\n0.065\nNA\nNA\nNA\n\n\nSFER\nEB2\nNA\n1\n0.00400000\n0.004\n0.004\nNA\nNA\nNA\n\n\nSFER\nEH07\nNA\n1\n0.01100000\n0.011\n0.011\nNA\nNA\nNA\n\n\nSFER\nEH08\nNA\n1\n0.03600000\n0.036\n0.036\nNA\nNA\nNA\n\n\nSFER\nEKIN\n-1.666667e-03\n52\n0.04898077\n0.000\n0.242\n0.9424235\nNA\n0.31968510\n\n\nSFER\nEKMID\n1.000000e-03\n53\n0.03637736\n0.000\n0.441\n1.7342801\nNA\n0.53989529\n\n\nSFER\nEKOFF\n0.000000e+00\n54\n0.03412963\n0.000\n0.265\n1.4546397\nNA\n0.44620620\n\n\nSFER\nGP1\nNA\n4\n0.01000000\n0.003\n0.019\n0.6683313\nNA\nNA\n\n\nSFER\nGP1.5\nNA\n1\n0.03200000\n0.032\n0.032\nNA\nNA\nNA\n\n\nSFER\nGP2\nNA\n4\n0.01050000\n0.000\n0.036\n1.6413036\nNA\nNA\n\n\nSFER\nGP3\nNA\n4\n0.00700000\n0.000\n0.017\n1.2065580\nNA\nNA\n\n\nSFER\nGP4\nNA\n4\n0.00650000\n0.000\n0.026\n2.0000000\nNA\nNA\n\n\nSFER\nGP5\n0.000000e+00\n34\n0.02844118\n0.000\n0.282\n2.1653540\nNA\n0.88970694\n\n\nSFER\nGS\nNA\n1\n0.00100000\n0.001\n0.001\nNA\nNA\nNA\n\n\nSFER\nGlider\nNA\n2\n0.01000000\n0.000\n0.020\n1.4142136\nNA\nNA\n\n\nSFER\nHB1\nNA\n1\n0.03000000\n0.030\n0.030\nNA\nNA\nNA\n\n\nSFER\nHB2\nNA\n1\n0.51000000\n0.510\n0.510\nNA\nNA\nNA\n\n\nSFER\nHB3\nNA\n1\n0.43000000\n0.430\n0.430\nNA\nNA\nNA\n\n\nSFER\nHB4\nNA\n1\n0.45000000\n0.450\n0.450\nNA\nNA\nNA\n\n\nSFER\nHB5\nNA\n1\n0.18000000\n0.180\n0.180\nNA\nNA\nNA\n\n\nSFER\nHB6\nNA\n1\n0.01000000\n0.010\n0.010\nNA\nNA\nNA\n\n\nSFER\nJunkpile\nNA\n1\n0.01700000\n0.017\n0.017\nNA\nNA\nNA\n\n\nSFER\nKW1\n3.500000e-03\n34\n0.05970588\n0.000\n1.302\n3.7105428\nNA\n0.39136594\n\n\nSFER\nKW2\n4.500000e-03\n34\n0.09535294\n0.000\n0.808\n1.7972979\nNA\n0.26261829\n\n\nSFER\nKW3\n5.000000e-04\n34\n0.02150000\n0.000\n0.110\n1.3554188\nNA\n0.55958370\n\n\nSFER\nKW4\n4.000000e-03\n33\n0.05209091\n0.000\n0.698\n2.5673590\nNA\n0.19082099\n\n\nSFER\nL1\n1.500000e-02\n9\n0.08333333\n0.000\n0.470\n1.8049931\nNA\n1.00000000\n\n\nSFER\nL3\n8.000000e-02\n9\n0.07444444\n0.000\n0.430\n1.9339448\nNA\n1.00000000\n\n\nSFER\nL5\n-5.000000e-03\n9\n0.10111111\n0.000\n0.710\n2.3317622\nNA\n1.00000000\n\n\nSFER\nL7\n3.500000e-02\n9\n0.02777778\n0.000\n0.100\n1.3200000\nNA\n1.00000000\n\n\nSFER\nL9\n5.000000e-03\n10\n0.00400000\n0.000\n0.010\n1.2909944\nNA\n1.00000000\n\n\nSFER\nM01\nNA\n1\n0.03100000\n0.031\n0.031\nNA\nNA\nNA\n\n\nSFER\nM02\nNA\n1\n0.07000000\n0.070\n0.070\nNA\nNA\nNA\n\n\nSFER\nM03\nNA\n1\n0.05900000\n0.059\n0.059\nNA\nNA\nNA\n\n\nSFER\nM04\nNA\n1\n0.16700000\n0.167\n0.167\nNA\nNA\nNA\n\n\nSFER\nM05\nNA\n1\n0.06100000\n0.061\n0.061\nNA\nNA\nNA\n\n\nSFER\nMR\n-1.118056e-03\n55\n0.08621818\n0.000\n2.254\n3.6624029\nNA\n0.36661303\n\n\nSFER\nMudhole\nNA\n1\n0.01700000\n0.017\n0.017\nNA\nNA\nNA\n\n\nSFER\nNaplesBlueHole\nNA\n1\n0.00000000\n0.000\n0.000\nNA\nNA\nNA\n\n\nSFER\nPLUME\nNA\n1\n0.00000000\n0.000\n0.000\nNA\nNA\nNA\n\n\nSFER\nROME4\n2.000000e-02\n11\n0.04909091\n0.000\n0.250\n1.7510334\nNA\n1.00000000\n\n\nSFER\nROME5\n4.000000e-02\n11\n0.06772727\n0.000\n0.200\n1.0489269\nNA\n0.24821308\n\n\nSFER\nRP1\n5.000000e-03\n34\n0.07300000\n0.000\n0.900\n2.1761298\nNA\n0.68849974\n\n\nSFER\nRP2\n1.000000e-02\n34\n0.06100000\n0.000\n0.470\n1.5975548\nNA\n0.08235222\n\n\nSFER\nRP3\n3.000000e-03\n35\n0.04174286\n0.000\n0.390\n1.9588091\nNA\n0.37438756\n\n\nSFER\nRP4\n3.166667e-03\n34\n0.01814706\n0.000\n0.080\n1.1423773\nNA\n0.06599206\n\n\nSFER\nRedTide\nNA\n1\n0.00800000\n0.008\n0.008\nNA\nNA\nNA\n\n\nSFER\nTB1\n-9.000000e-04\n29\n0.02696552\n0.000\n0.150\n1.3657896\nNA\n0.71347429\n\n\nSFER\nTB10\n0.000000e+00\n27\n0.07488889\n0.000\n1.616\n4.1348366\nNA\n0.47117000\n\n\nSFER\nTB11\nNA\n2\n0.01200000\n0.000\n0.024\n1.4142136\nNA\nNA\n\n\nSFER\nTB12\nNA\n1\n0.00900000\n0.009\n0.009\nNA\nNA\nNA\n\n\nSFER\nTB13\nNA\n1\n0.00000000\n0.000\n0.000\nNA\nNA\nNA\n\n\nSFER\nTB2\n-2.583333e-03\n29\n0.06782759\n0.000\n1.231\n3.3384043\nNA\n0.19107592\n\n\nSFER\nTB3\n3.250000e-03\n29\n0.03620690\n0.000\n0.510\n2.5801844\nNA\n0.58800015\n\n\nSFER\nTB4\n5.000000e-03\n29\n0.08003448\n0.000\n0.690\n2.2062372\nNA\n0.85669821\n\n\nSFER\nTB5\n1.500000e-03\n29\n0.08662069\n0.000\n1.383\n3.1283552\nNA\n0.71347429\n\n\nSFER\nTB6\nNA\n2\n0.05150000\n0.010\n0.093\n1.1396090\nNA\nNA\n\n\nSFER\nTB7\nNA\n2\n0.02850000\n0.009\n0.048\n0.9676198\nNA\nNA\n\n\nSFER\nTB8\nNA\n2\n0.01900000\n0.008\n0.030\n0.8187552\nNA\nNA\n\n\nSFER\nTB9\nNA\n2\n0.02400000\n0.009\n0.039\n0.8838835\nNA\nNA\n\n\nSFER\nTBA\nNA\n1\n0.00900000\n0.009\n0.009\nNA\nNA\nNA\n\n\nSFER\nTBB\nNA\n1\n0.01500000\n0.015\n0.015\nNA\nNA\nNA\n\n\nSFER\nTBC\nNA\n1\n0.00600000\n0.006\n0.006\nNA\nNA\nNA\n\n\nSFER\nUKIN\n0.000000e+00\n53\n0.08777358\n0.000\n1.965\n3.3210275\nNA\n0.94069374\n\n\nSFER\nUKMID\n0.000000e+00\n54\n0.02168519\n0.000\n0.193\n1.3293236\nNA\n1.00000000\n\n\nSFER\nUKOFF\n-1.000000e-04\n54\n0.06568519\n0.000\n1.236\n3.3202401\nNA\n0.41992053\n\n\nSFER\nV1\n6.250000e-03\n30\n0.04583333\n0.000\n0.153\n0.9309556\nNA\n0.43300340\n\n\nSFER\nV10\nNA\n1\n0.02000000\n0.020\n0.020\nNA\nNA\nNA\n\n\nSFER\nV11\nNA\n1\n0.03600000\n0.036\n0.036\nNA\nNA\nNA\n\n\nSFER\nV2\n-1.000000e-03\n29\n0.03831034\n0.000\n0.240\n1.4365773\nNA\n0.71347429\n\n\nSFER\nV3\n0.000000e+00\n29\n0.09227586\n0.000\n0.720\n2.0790092\nNA\n1.00000000\n\n\nSFER\nV4\n3.750000e-04\n30\n0.06313333\n0.000\n0.650\n2.2226524\nNA\n0.61707508\n\n\nSFER\nV5\n-1.250000e-04\n29\n0.07441379\n0.000\n0.925\n2.8515331\nNA\n0.23628916\n\n\nSFER\nV6\n0.000000e+00\n30\n0.09446667\n0.000\n1.067\n2.5313400\nNA\n1.00000000\n\n\nSFER\nV7\n-1.100000e-03\n30\n0.10146667\n0.000\n1.190\n2.6698649\nNA\n0.59965920\n\n\nSFER\nV8\n0.000000e+00\n29\n0.04803448\n0.000\n0.933\n3.5920363\nNA\n0.85183953\n\n\nSFER\nV9\n0.000000e+00\n30\n0.10196667\n0.000\n1.434\n3.0731832\nNA\n1.00000000\n\n\nSFER\nWS\n-1.333333e-03\n56\n0.04076786\n0.000\n0.505\n2.2458971\nNA\n0.13887349\n\n\nSFER\nZ03027\nNA\n1\n0.00600000\n0.006\n0.006\nNA\nNA\nNA\n\n\nSFER\nZ03076\nNA\n1\n0.00000000\n0.000\n0.000\nNA\nNA\nNA\n\n\nSFER\nZ03116\nNA\n1\n0.01400000\n0.014\n0.014\nNA\nNA\nNA\n\n\nSFER\nZ03146\nNA\n1\n0.01000000\n0.010\n0.010\nNA\nNA\nNA\n\n\nSFER\nZ03198\nNA\n1\n0.00800000\n0.008\n0.008\nNA\nNA\nNA\n\n\nSFER\nZ04067\nNA\n1\n0.00300000\n0.003\n0.003\nNA\nNA\nNA\n\n\nSFER\nZ04068\nNA\n1\n0.00100000\n0.001\n0.001\nNA\nNA\nNA\n\n\nSFER\nZ04093\nNA\n1\n0.01500000\n0.015\n0.015\nNA\nNA\nNA\n\n\nSFER\nZ04099\nNA\n1\n0.00300000\n0.003\n0.003\nNA\nNA\nNA\n\n\nSFER\nZ04110\nNA\n1\n0.00900000\n0.009\n0.009\nNA\nNA\nNA\n\n\nSFER\nZ04610\nNA\n1\n0.00500000\n0.005\n0.005\nNA\nNA\nNA\n\n\n\n\n\n\n\n\n\nReporting Programs:\n\n\ndisplay reporting programs\nlibrary(ggplot2)\nggplot(df, aes(x = program)) +\n  geom_bar() +\n  labs(title = \"Reporting Programs\", x = \"Program\", y = \"Count\")"
  },
  {
    "objectID": "analyte_reports/analyte_reports/Nitrate+Nitrite.html",
    "href": "analyte_reports/analyte_reports/Nitrate+Nitrite.html",
    "title": "Nitrate+Nitrite Report",
    "section": "",
    "text": "get data across all programs, filter for analyte\nlibrary('here')\nlibrary('dplyr')\nsource(here(\"R/getAllData.R\"))\nfull_df &lt;- getAllData()\ndf &lt;- filter(full_df, DEP.Analyte.Name == params$analyte)\n\n\n\n\ncreate .csv of analyte data\n# save df to csv\n# reduce to only cols we need & save to csv\ndf %&gt;%\n  mutate(\n    source = program,\n    site = Monitoring.Location.ID,\n    datetime = Activity.Start.Date.Time,\n    analyte = DEP.Analyte.Name,\n    value = DEP.Result.Value.Number,\n    units = DEP.Result.Unit,\n    latitude = Org.Decimal.Latitude,\n    longitude = Org.Decimal.Longitude,\n    sample_depth = Activity.Depth,\n    .keep = \"none\"\n) %&gt;%\n  write.csv(here(\"data\", \"exports\", \"unified-wq-db-samples\", paste0(params$analyte, \".csv\")))\n\n\nDownload data for this analyte here\n\nHistogram of DEP.Result.Value.Number:\n\n\ndisplay histogram of values\nlibrary(ggplot2)\nggplot(df, aes(x = DEP.Result.Value.Number)) +\n  geom_histogram(bins = 30, fill = \"blue\", color = \"black\") +\n  labs(title = \"Histogram of Values\", x = \"Value\", y = \"Count\")\n\n\n\n\n\n\n\n\n\n\n\nStation Statistics:\n\n\ncreate station statistics dataframe\nsource(here(\"R/seasonalMannKendall.R\"))\nlibrary(lubridate)  # for mdy_hms()\nlibrary(pander)  # for display\n\n# create table of samples for each station\nsamples_df &lt;- df %&gt;%\n  select(\n    program, \n    Monitoring.Location.ID, \n    Activity.Start.Date.Time,\n    analyte = DEP.Analyte.Name,\n    DEP.Result.Value.Number, \n    DEP.Result.Unit,\n    latitude = Org.Decimal.Latitude,\n    longitude = Org.Decimal.Longitude,\n    sample_depth = Activity.Depth\n    ) %&gt;%\n  # drop any with empty Monitoring.Location.ID\n  filter(!is.na(Monitoring.Location.ID)) %&gt;%\n  # drop any with empty Activity.Start.Date.Time\n  filter(!is.na(Activity.Start.Date.Time)) %&gt;%\n  # parse the \"MM/DD/YYYY HH:MM:SS\" strings into POSIXct\n  mutate(Activity.Start.Date.Time = mdy_hms(\n          Activity.Start.Date.Time,\n          tz = \"UTC\")) %&gt;%\n  distinct()\n\n\n# add statistics for each station\nsample_stats_df &lt;- samples_df %&gt;%\n  group_by(program, Monitoring.Location.ID) %&gt;%\n  reframe(\n    {\n      tmp &lt;- seasonalMannKendallVectorized(\n        Activity.Start.Date.Time,\n        DEP.Result.Value.Number\n      )\n    },\n    n_values = n(),\n    mean = mean(DEP.Result.Value.Number),\n    min = min(DEP.Result.Value.Number),\n    max = max(DEP.Result.Value.Number),\n    coefficient.of.variation = sd(DEP.Result.Value.Number) / mean(DEP.Result.Value.Number)\n  ) %&gt;%\n  mutate(\n    # create column significant_slope\n    significant_slope = ifelse(z &lt;= 0.05, slope, NA_real_),\n    pvalue = z\n  ) %&gt;%\n  # drop unwanted columns added by seasonalMannKendall\n  select(\n    -z,\n    -tau,\n    -chi_square\n  )\n\n\n\n# print(head(sample_stats_df))\n# # display sample_stats_df with pander\n# pander(sample_stats_df)\n\n\n\n\nsave stats to csv\nsample_stats_df %&gt;%\n  write.csv(here(\n    \"data\", \"exports\", \"seasonal-mann-kendall-stats\", paste0(params$analyte, \".csv\")))\n\n\nDownload data for this analyte’s statistics here\n\n\ndisplay with gt\nlibrary(gt)\nlibrary(scales)\nlibrary(tidyselect)  # for all_of()\nlibrary(RColorBrewer) # for brewer.pal()\n\n# ── color_column() ─────────────────────────────────────────────────────────────\n# gt_tbl   : a gt object that you’ve already created (e.g. `sample_stats_df %&gt;% gt()`)\n# df       : the original data.frame (must contain the column you want to color)\n# column   : a string, e.g. \"slope\" or \"n_values\"\n# palette  : a character vector of colours to feed to col_numeric()\n#\ncolor_column &lt;- function(gt_tbl, df, column, \n                         palette = c(\"red\", \"orange\", \"yellow\", \"green\", \"blue\", \"violet\"),\n                         domain = NULL) {\n  # 1) Pull out that column’s numeric values\n  vals &lt;- df[[column]]\n  if (!is.numeric(vals)) {\n    stop(sprintf(\"`%s` is not numeric; data_color() requires a numeric column.\", column))\n  }\n  \n  # 2) Compute its min and max (ignoring NA)\n  min_val &lt;- min(vals, na.rm = TRUE)\n  max_val &lt;- max(vals, na.rm = TRUE)\n  if (is.null(domain)) {\n    domain &lt;- c(min_val, max_val)\n  }\n  \n  # 3) Call data_color() on the gt table for that single column\n  gt_tbl %&gt;%\n    data_color(\n      columns = all_of(column),\n      colors  = col_numeric(\n        palette = palette,\n        domain  = domain\n      )\n    )\n}\nlibrary(dplyr)\nlibrary(gt)\n\n# 1) First build your gt table as usual:\ngt_tbl &lt;- sample_stats_df %&gt;% \n  gt()\n\n# slope blue (-) to red (+) (0 centered)\ntryCatch({\n  min_slope &lt;- min(sample_stats_df$slope,  na.rm = TRUE)\n  max_slope &lt;- max(sample_stats_df$slope,  na.rm = TRUE)\n  max_abs_slope &lt;- max(abs(min_slope), abs(max_slope))\n  gt_tbl &lt;- color_column(\n    gt_tbl, \n    df     = sample_stats_df, \n    column = \"slope\",\n    palette = rev(brewer.pal(11, \"RdBu\")),\n    domain  = c(-max_abs_slope, max_abs_slope)\n  )\n}, error = function(e) {\n  print(\"Error in slope color column\")\n  print(e)\n})\n\ntryCatch({\n  # pvalue Z\n  gt_tbl &lt;- color_column(\n    gt_tbl, \n    df      = sample_stats_df, \n    column  = \"z\", \n    palette = scales::brewer_pal(palette = \"Blues\")(9)\n  )\n}, error = function(e) {\n  print(\"Error in z color column\")\n  print(e)\n})\n\n\n[1] \"Error in z color column\"\n&lt;simpleError in color_column(gt_tbl, df = sample_stats_df, column = \"z\", palette = (scales::brewer_pal(palette = \"Blues\"))(9)): `z` is not numeric; data_color() requires a numeric column.&gt;\n\n\ndisplay with gt\n# slope blue (-) to red (+) (0 centered)\ntryCatch({\n  min_slope &lt;- min(sample_stats_df$significant_slope,  na.rm = TRUE)\n  max_slope &lt;- max(sample_stats_df$significant_slope,  na.rm = TRUE)\n  max_abs_slope &lt;- max(abs(min_slope), abs(max_slope))\n  gt_tbl &lt;- color_column(\n    gt_tbl, \n    df     = sample_stats_df, \n    column = \"significant_slope\",\n    palette = rev(brewer.pal(11, \"RdBu\")),\n    domain  = c(-max_abs_slope, max_abs_slope)\n  )\n}, error = function(e) {\n  print(\"Error in significant_slope color column\")\n  print(e)\n})\n\ntryCatch({\n  # mean values blue to red (0 centered)\n  min_mean &lt;- min(sample_stats_df$mean,  na.rm = TRUE)\n  max_mean &lt;- max(sample_stats_df$mean,  na.rm = TRUE)\n  max_abs_mean &lt;- max(abs(min_mean), abs(max_mean))\n  gt_tbl &lt;- color_column(\n    gt_tbl, \n    df     = sample_stats_df, \n    column = \"mean\",\n    palette = rev(brewer.pal(11, \"RdBu\")),\n    domain  = c(-max_abs_mean, max_abs_mean)\n  )\n}, error = function(e) {\n  print(\"Error in mean color column\")\n  print(e)\n})\n\ntryCatch({\n  # n values white to green\n  gt_tbl &lt;- color_column(\n    gt_tbl, \n    df      = sample_stats_df, \n    column  = \"n_values\", \n    palette = scales::brewer_pal(palette = \"Greens\")(9)\n  )\n}, error = function(e) {\n  print(\"Error in n_values color column\")\n  print(e)\n})\n\ntryCatch({\n  # min\n  gt_tbl &lt;- color_column(\n    gt_tbl, \n    df      = sample_stats_df, \n    column  = \"min\", \n    palette = scales::brewer_pal(palette = \"Blues\")(9)\n  )\n}, error = function(e) {\n  print(\"Error in min color column\")\n  print(e)\n})\n\ntryCatch({\n  # max\n  gt_tbl &lt;- color_column(\n    gt_tbl, \n    df      = sample_stats_df, \n    column  = \"max\", \n    palette = scales::brewer_pal(palette = \"Blues\")(9)\n  )\n}, error = function(e) {\n  print(\"Error in max color column\")\n  print(e)\n})\n\ntryCatch({\n  # coefficient.of.variation\n  gt_tbl &lt;- color_column(\n    gt_tbl, \n    df      = sample_stats_df, \n    column  = \"coefficient.of.variation\", \n    palette = scales::brewer_pal(palette = \"Blues\")(9)\n  )\n}, error = function(e) {\n  print(\"Error in coefficient.of.variation color column\")\n  print(e)\n})\n\n# 4) Render/display:\ngt_tbl\n\n\n\n\n\n\n\n\nprogram\nMonitoring.Location.ID\nslope\nn_values\nmean\nmin\nmax\ncoefficient.of.variation\nsignificant_slope\npvalue\n\n\n\n\nSFER\n1\n-0.0615000000\n53\n0.69564151\n0.000\n7.229\n1.6804223\n-0.061500000\n0.03498054\n\n\nSFER\n10\n-0.0050000000\n51\n0.35407843\n0.000\n3.827\n1.5806338\nNA\n0.64309920\n\n\nSFER\n11\n0.0020000000\n54\n0.32472222\n0.000\n5.504\n2.8058394\nNA\n0.61465744\n\n\nSFER\n12\n-0.0132857143\n54\n0.16764815\n0.000\n3.255\n2.7002209\n-0.013285714\n0.01490041\n\n\nSFER\n13\n-0.0083333333\n53\n0.37516981\n0.000\n8.642\n3.1308520\nNA\n0.37591174\n\n\nSFER\n14\n-0.0088000000\n54\n0.12766667\n0.000\n0.684\n1.3623942\nNA\n0.38934238\n\n\nSFER\n15\n-0.0041428571\n54\n0.22611111\n0.000\n6.750\n4.0659123\nNA\n0.21906998\n\n\nSFER\n15.5\n-0.0054285714\n52\n0.13375000\n0.000\n0.921\n1.6666837\nNA\n0.08867833\n\n\nSFER\n16\n-0.0283333333\n54\n0.44401852\n0.000\n3.156\n1.2362964\n-0.028333333\n0.01258727\n\n\nSFER\n17\n-0.0153750000\n55\n0.47689091\n0.000\n8.917\n2.9116252\n-0.015375000\n0.01355723\n\n\nSFER\n18\n0.0000000000\n55\n0.25554545\n0.000\n8.859\n4.6430786\nNA\n0.88453505\n\n\nSFER\n19\n-0.0040000000\n55\n0.53207273\n0.000\n8.549\n2.1745269\nNA\n0.88572541\n\n\nSFER\n2\n-0.0180000000\n53\n0.51507547\n0.000\n8.363\n2.2937451\nNA\n0.36616581\n\n\nSFER\n20\n0.0000000000\n55\n0.63636364\n0.000\n12.711\n3.3197555\nNA\n1.00000000\n\n\nSFER\n21.25\nNA\n1\n0.07000000\n0.070\n0.070\nNA\nNA\nNA\n\n\nSFER\n21.5\n0.0000000000\n53\n0.19275472\n0.000\n2.287\n1.9832260\nNA\n0.81906490\n\n\nSFER\n21LK\n-0.0027857143\n56\n0.41433929\n0.000\n14.600\n4.6898182\nNA\n0.29124411\n\n\nSFER\n22\n-0.0120500000\n57\n0.21757895\n0.000\n3.325\n2.0871428\nNA\n0.25459640\n\n\nSFER\n22.5\n-0.0082936508\n53\n0.11977358\n0.000\n1.133\n1.4620959\nNA\n0.11016552\n\n\nSFER\n23\n-0.0031250000\n57\n0.25331579\n0.000\n2.118\n1.4007717\nNA\n0.68695095\n\n\nSFER\n24\n0.0101625000\n57\n0.55638596\n0.000\n5.170\n1.4021361\nNA\n0.42024712\n\n\nSFER\n3\n-0.0110000000\n53\n0.31124528\n0.000\n4.019\n1.8283657\nNA\n0.29174934\n\n\nSFER\n30\n0.0000000000\n54\n0.31546296\n0.000\n7.799\n3.8581777\nNA\n1.00000000\n\n\nSFER\n30.5\n0.0009166667\n54\n0.14818519\n0.000\n2.295\n2.3689475\nNA\n0.51006753\n\n\nSFER\n31\n0.0002000000\n55\n0.33121818\n0.000\n11.452\n4.6505648\nNA\n0.94216611\n\n\nSFER\n32\n-0.0031666667\n56\n0.15889286\n0.000\n2.187\n2.0202329\nNA\n0.57128677\n\n\nSFER\n33\n-0.0057142857\n56\n0.12705357\n0.000\n0.472\n0.9704347\nNA\n0.28884437\n\n\nSFER\n34\n-0.0030000000\n56\n0.27696429\n0.000\n1.801\n1.4840967\nNA\n0.57509057\n\n\nSFER\n39\n-0.0005000000\n48\n0.16866667\n0.000\n1.829\n1.9350050\nNA\n0.80123090\n\n\nSFER\n4\n-0.0068333333\n44\n0.22293182\n0.000\n1.857\n1.4365324\nNA\n0.11447136\n\n\nSFER\n40\n0.0018392857\n52\n0.32015385\n0.000\n7.616\n3.3927296\nNA\n0.81940849\n\n\nSFER\n41\n-0.0025000000\n54\n0.16675926\n0.000\n0.981\n1.3950638\nNA\n0.34220982\n\n\nSFER\n42\n-0.0008194444\n55\n0.16590909\n0.000\n0.854\n1.2734436\nNA\n0.77638843\n\n\nSFER\n45\n-0.0050000000\n55\n0.17060000\n0.000\n1.682\n1.8928537\nNA\n0.25590862\n\n\nSFER\n46\n0.0025000000\n56\n0.19210714\n0.000\n3.762\n2.8460301\nNA\n0.62292610\n\n\nSFER\n47\n0.0008571429\n56\n0.08969643\n0.000\n0.652\n1.5763353\nNA\n0.43743946\n\n\nSFER\n48\n0.0035000000\n55\n0.13909091\n0.000\n1.722\n2.0811327\nNA\n0.27984961\n\n\nSFER\n49\n0.0010166667\n53\n0.18671698\n0.000\n2.323\n2.3129659\nNA\n0.61157020\n\n\nSFER\n5\n-0.0070833333\n44\n0.17604545\n0.000\n2.316\n2.0188823\n-0.007083333\n0.04021725\n\n\nSFER\n5.5\n-0.0077857143\n44\n0.44622727\n0.000\n7.134\n2.5045300\nNA\n0.59919295\n\n\nSFER\n50\n0.0033333333\n54\n0.13037037\n0.000\n1.136\n1.5597036\nNA\n0.42075184\n\n\nSFER\n51\n0.0028750000\n56\n0.16564286\n0.000\n1.814\n2.0315729\nNA\n0.12562759\n\n\nSFER\n52\n0.0002500000\n53\n0.33237736\n0.000\n9.361\n3.8698925\nNA\n0.88072762\n\n\nSFER\n53\n0.0000000000\n50\n0.14804000\n0.000\n2.036\n2.5893126\nNA\n0.79890667\n\n\nSFER\n54\n-0.0128928571\n68\n0.61054412\n0.000\n7.724\n2.0401761\nNA\n0.51649255\n\n\nSFER\n55\n-0.0072500000\n70\n0.21925714\n0.000\n1.955\n1.4121272\nNA\n0.10224633\n\n\nSFER\n56\n-0.0050000000\n71\n0.21335211\n0.000\n2.085\n1.6547621\nNA\n0.19573355\n\n\nSFER\n57\n0.0006527778\n72\n0.59147222\n0.000\n8.180\n2.6580813\nNA\n0.60505588\n\n\nSFER\n57.1\n0.0014583333\n72\n0.14994444\n0.000\n0.874\n1.3394649\nNA\n0.72028447\n\n\nSFER\n57.2\n0.0040178571\n71\n0.16545070\n0.000\n1.460\n1.5728120\n0.004017857\n0.03128026\n\n\nSFER\n57.3\n0.0027142857\n67\n0.16304478\n0.000\n1.816\n1.6923880\nNA\n0.29476237\n\n\nSFER\n58\n0.0007698413\n53\n0.10149057\n0.000\n0.898\n1.7047744\nNA\n0.44443882\n\n\nSFER\n59\n0.0028571429\n53\n0.45375472\n0.000\n9.275\n3.0020395\nNA\n0.58841352\n\n\nSFER\n6\n-0.0071428571\n45\n0.18922222\n0.000\n1.478\n1.5326653\nNA\n0.41260893\n\n\nSFER\n6.5\n-0.0044285714\n46\n0.15586957\n0.000\n1.430\n2.0825212\nNA\n0.05030887\n\n\nSFER\n60\n0.0043095238\n56\n0.20814286\n0.000\n1.420\n1.5610940\nNA\n0.19276797\n\n\nSFER\n61\n-0.0034166667\n56\n0.20508929\n0.000\n1.968\n1.5701314\nNA\n0.71821613\n\n\nSFER\n62\n0.0025952381\n56\n0.23203571\n0.000\n2.584\n1.7076714\nNA\n0.42727891\n\n\nSFER\n63\n0.0049583333\n54\n0.21203704\n0.000\n1.156\n1.3111749\nNA\n0.31683278\n\n\nSFER\n64\n0.0007142857\n48\n0.32612500\n0.000\n1.677\n1.2308332\nNA\n1.00000000\n\n\nSFER\n65\n-0.0128000000\n51\n0.72203922\n0.000\n8.922\n1.9434719\nNA\n0.50743187\n\n\nSFER\n66\n0.0019375000\n52\n0.30169231\n0.000\n3.404\n1.8403007\nNA\n0.87182617\n\n\nSFER\n67\n-0.0016666667\n52\n0.20930769\n0.000\n1.200\n1.2722690\nNA\n0.81097198\n\n\nSFER\n68\n0.0028888889\n55\n0.33470909\n0.000\n8.718\n3.5091210\nNA\n0.47240235\n\n\nSFER\n69\n-0.0002500000\n42\n0.18119048\n0.000\n1.010\n1.3903674\nNA\n1.00000000\n\n\nSFER\n7\n-0.0012500000\n54\n0.26796296\n0.000\n1.730\n1.1523036\nNA\n0.88725675\n\n\nSFER\n70\n-0.0110714286\n42\n0.16616667\n0.000\n1.066\n1.5613721\n-0.011071429\n0.03664283\n\n\nSFER\n71\nNA\n1\n0.31000000\n0.310\n0.310\nNA\nNA\nNA\n\n\nSFER\n8\n0.0012142857\n56\n0.28205357\n0.000\n5.286\n2.6647940\nNA\n0.73170172\n\n\nSFER\n9\n0.0000000000\n56\n0.40526786\n0.000\n8.211\n3.2038902\nNA\n0.78137466\n\n\nSFER\n9.5\n-0.0037500000\n52\n0.46857692\n0.000\n9.095\n3.4214116\nNA\n0.49913885\n\n\nSFER\n9.6\nNA\n1\n0.50300000\n0.503\n0.503\nNA\nNA\nNA\n\n\nSFER\n9.7\nNA\n1\n7.30500000\n7.305\n7.305\nNA\nNA\nNA\n\n\nSFER\n9.8\nNA\n1\n7.64800000\n7.648\n7.648\nNA\nNA\nNA\n\n\nSFER\nAC1\nNA\n1\n0.49500000\n0.495\n0.495\nNA\nNA\nNA\n\n\nSFER\nAC2\nNA\n1\n0.88000000\n0.880\n0.880\nNA\nNA\nNA\n\n\nSFER\nAC3\nNA\n1\n0.19000000\n0.190\n0.190\nNA\nNA\nNA\n\n\nSFER\nAC4\nNA\n1\n0.23000000\n0.230\n0.230\nNA\nNA\nNA\n\n\nSFER\nAC5\nNA\n1\n0.12000000\n0.120\n0.120\nNA\nNA\nNA\n\n\nSFER\nAC6\nNA\n1\n0.09000000\n0.090\n0.090\nNA\nNA\nNA\n\n\nSFER\nAMI1\n-0.0120000000\n26\n0.12330769\n0.000\n1.409\n2.5251401\nNA\n0.05134833\n\n\nSFER\nAMI2\n0.0100000000\n26\n0.06834615\n0.000\n0.886\n2.5130664\nNA\n0.22067136\n\n\nSFER\nAMI3\n0.0000000000\n26\n0.19296154\n0.000\n1.646\n2.1716680\nNA\n1.00000000\n\n\nSFER\nAMI4\n-0.0025000000\n25\n0.28852000\n0.000\n3.312\n2.4287516\nNA\n0.65199847\n\n\nSFER\nAMI5\n0.0000000000\n26\n0.15000000\n0.000\n1.190\n1.9941648\nNA\n0.46243273\n\n\nSFER\nAMI6\n0.0000000000\n26\n0.07726923\n0.000\n0.640\n1.7313101\nNA\n0.80649594\n\n\nSFER\nAMI7\n-0.0185000000\n26\n0.20511538\n0.000\n2.517\n2.6123967\nNA\n0.35020139\n\n\nSFER\nAMI8\n0.0100000000\n26\n0.19476923\n0.000\n1.700\n2.0687274\nNA\n1.00000000\n\n\nSFER\nAMI9\n0.0100000000\n26\n0.27134615\n0.000\n2.637\n2.2700658\nNA\n0.82859308\n\n\nSFER\nBG1\n-0.0460000000\n24\n0.34175000\n0.000\n1.680\n1.2043829\nNA\n0.36707002\n\n\nSFER\nBG10\nNA\n1\n0.07000000\n0.070\n0.070\nNA\nNA\nNA\n\n\nSFER\nBG11\nNA\n1\n0.05000000\n0.050\n0.050\nNA\nNA\nNA\n\n\nSFER\nBG12\nNA\n1\n0.04000000\n0.040\n0.040\nNA\nNA\nNA\n\n\nSFER\nBG13\nNA\n1\n0.08000000\n0.080\n0.080\nNA\nNA\nNA\n\n\nSFER\nBG14\nNA\n1\n0.04000000\n0.040\n0.040\nNA\nNA\nNA\n\n\nSFER\nBG15\nNA\n1\n0.03000000\n0.030\n0.030\nNA\nNA\nNA\n\n\nSFER\nBG16\nNA\n1\n0.00000000\n0.000\n0.000\nNA\nNA\nNA\n\n\nSFER\nBG17\nNA\n1\n0.10000000\n0.100\n0.100\nNA\nNA\nNA\n\n\nSFER\nBG18\nNA\n1\n0.06000000\n0.060\n0.060\nNA\nNA\nNA\n\n\nSFER\nBG2\n-0.0608333333\n30\n0.21696667\n0.000\n0.957\n0.9901909\nNA\n0.06423459\n\n\nSFER\nBG20\nNA\n1\n0.04000000\n0.040\n0.040\nNA\nNA\nNA\n\n\nSFER\nBG3\n-0.0100000000\n30\n0.08836667\n0.000\n0.300\n1.0104370\nNA\n0.86640105\n\n\nSFER\nBG4\n-0.0040833333\n30\n0.20706667\n0.000\n2.240\n2.0260939\nNA\n0.38647623\n\n\nSFER\nBG6\n0.1250000000\n11\n0.08318182\n0.000\n0.320\n1.2366375\nNA\n0.37109337\n\n\nSFER\nBG7\n0.0150000000\n11\n0.10500000\n0.000\n0.590\n1.6943283\nNA\n1.00000000\n\n\nSFER\nBG8\nNA\n1\n0.12000000\n0.120\n0.120\nNA\nNA\nNA\n\n\nSFER\nBG9\nNA\n1\n0.07000000\n0.070\n0.070\nNA\nNA\nNA\n\n\nSFER\nBK1\nNA\n1\n0.01300000\n0.013\n0.013\nNA\nNA\nNA\n\n\nSFER\nCAL1\n0.0060000000\n32\n0.26371875\n0.000\n1.478\n1.3165695\nNA\n0.77359325\n\n\nSFER\nCAL2\n-0.0032500000\n34\n0.23802941\n0.000\n1.664\n1.7423761\nNA\n0.89175585\n\n\nSFER\nCAL3\n0.0015833333\n34\n0.21320588\n0.000\n1.840\n1.7075424\nNA\n0.68309140\n\n\nSFER\nCAL4\n-0.0026500000\n34\n0.33397059\n0.000\n6.217\n3.2101864\nNA\n0.78740649\n\n\nSFER\nCAL5\n0.0033500000\n34\n0.31702941\n0.000\n6.229\n3.3475495\nNA\n0.68309140\n\n\nSFER\nCAL6\n-0.0355000000\n28\n0.19425000\n0.000\n2.488\n2.4790287\nNA\n0.26520539\n\n\nSFER\nCAL7\nNA\n1\n0.12000000\n0.120\n0.120\nNA\nNA\nNA\n\n\nSFER\nCAL8\nNA\n1\n0.35700000\n0.357\n0.357\nNA\nNA\nNA\n\n\nSFER\nCALA\nNA\n1\n0.05000000\n0.050\n0.050\nNA\nNA\nNA\n\n\nSFER\nCK1\nNA\n1\n0.06400000\n0.064\n0.064\nNA\nNA\nNA\n\n\nSFER\nCK2\nNA\n1\n0.01100000\n0.011\n0.011\nNA\nNA\nNA\n\n\nSFER\nCW1\n-0.0069000000\n16\n0.54375000\n0.000\n4.611\n2.1102152\nNA\n1.00000000\n\n\nSFER\nCW2\n0.0000000000\n16\n0.29556250\n0.000\n1.260\n1.3027167\nNA\n1.00000000\n\n\nSFER\nCW3\n0.0895000000\n17\n0.29300000\n0.000\n1.060\n1.2744304\nNA\n0.24156659\n\n\nSFER\nCW4\n0.0586000000\n16\n0.15056250\n0.000\n0.470\n1.0414030\n0.058600000\n0.03023902\n\n\nSFER\nCW5\n0.1286000000\n12\n0.17308333\n0.010\n0.800\n1.4138728\nNA\n0.14856177\n\n\nSFER\nCW6\n0.0095000000\n12\n0.12641667\n0.000\n0.550\n1.3982941\nNA\n0.69853536\n\n\nSFER\nCW7\n0.0000000000\n11\n0.19636364\n0.000\n1.730\n2.6112909\nNA\n1.00000000\n\n\nSFER\nCaseyhole\nNA\n1\n0.15900000\n0.159\n0.159\nNA\nNA\nNA\n\n\nSFER\nEB1\nNA\n1\n0.94000000\n0.940\n0.940\nNA\nNA\nNA\n\n\nSFER\nEB2\nNA\n1\n0.12400000\n0.124\n0.124\nNA\nNA\nNA\n\n\nSFER\nEH07\nNA\n1\n0.32600000\n0.326\n0.326\nNA\nNA\nNA\n\n\nSFER\nEH08\nNA\n1\n0.74200000\n0.742\n0.742\nNA\nNA\nNA\n\n\nSFER\nEKIN\n-0.0173333333\n51\n0.20874510\n0.000\n1.239\n1.1484809\n-0.017333333\n0.01976428\n\n\nSFER\nEKMID\n-0.0081666667\n52\n0.21957692\n0.000\n1.093\n1.2373279\nNA\n0.14662615\n\n\nSFER\nEKOFF\n-0.0060000000\n53\n0.26749057\n0.000\n4.076\n2.1665076\nNA\n0.51082130\n\n\nSFER\nGP1\nNA\n4\n0.12625000\n0.000\n0.379\n1.3582465\nNA\nNA\n\n\nSFER\nGP1.5\nNA\n1\n0.06200000\n0.062\n0.062\nNA\nNA\nNA\n\n\nSFER\nGP2\nNA\n4\n0.04025000\n0.000\n0.118\n1.3827562\nNA\nNA\n\n\nSFER\nGP3\nNA\n4\n0.07625000\n0.000\n0.176\n0.9698048\nNA\nNA\n\n\nSFER\nGP4\nNA\n4\n0.03775000\n0.000\n0.089\n1.1910469\nNA\nNA\n\n\nSFER\nGP5\n-0.0194750000\n34\n0.12261765\n0.000\n0.711\n1.4700017\nNA\n0.40688024\n\n\nSFER\nGS\nNA\n1\n0.00000000\n0.000\n0.000\nNA\nNA\nNA\n\n\nSFER\nGlider\nNA\n2\n0.02500000\n0.000\n0.050\n1.4142136\nNA\nNA\n\n\nSFER\nHB1\nNA\n1\n0.08000000\n0.080\n0.080\nNA\nNA\nNA\n\n\nSFER\nHB2\nNA\n1\n2.54000000\n2.540\n2.540\nNA\nNA\nNA\n\n\nSFER\nHB3\nNA\n1\n1.46000000\n1.460\n1.460\nNA\nNA\nNA\n\n\nSFER\nHB4\nNA\n1\n1.18000000\n1.180\n1.180\nNA\nNA\nNA\n\n\nSFER\nHB5\nNA\n1\n0.45000000\n0.450\n0.450\nNA\nNA\nNA\n\n\nSFER\nHB6\nNA\n1\n0.05000000\n0.050\n0.050\nNA\nNA\nNA\n\n\nSFER\nJunkpile\nNA\n1\n0.03000000\n0.030\n0.030\nNA\nNA\nNA\n\n\nSFER\nKW1\n-0.0045000000\n34\n0.24005882\n0.000\n4.281\n3.0350866\nNA\n1.00000000\n\n\nSFER\nKW2\n0.0260000000\n34\n0.44788235\n0.000\n2.374\n1.3460185\nNA\n0.33168507\n\n\nSFER\nKW3\n0.0055000000\n34\n0.11591176\n0.000\n0.686\n1.2983150\nNA\n0.38811881\n\n\nSFER\nKW4\n0.0108750000\n33\n0.24466667\n0.000\n2.222\n2.0945116\nNA\n0.06418997\n\n\nSFER\nL1\n0.0400000000\n9\n0.25222222\n0.010\n1.180\n1.6637554\nNA\n1.00000000\n\n\nSFER\nL3\n0.1000000000\n9\n0.15000000\n0.000\n0.930\n2.0088692\nNA\n1.00000000\n\n\nSFER\nL5\n0.0000000000\n9\n0.15777778\n0.000\n1.080\n2.2394366\nNA\n1.00000000\n\n\nSFER\nL7\n0.0475000000\n9\n0.08722222\n0.000\n0.390\n1.3897908\nNA\n1.00000000\n\n\nSFER\nL9\n-0.0100000000\n10\n0.06000000\n0.000\n0.420\n2.1358203\nNA\n1.00000000\n\n\nSFER\nM01\nNA\n1\n0.00000000\n0.000\n0.000\nNA\nNA\nNA\n\n\nSFER\nM02\nNA\n1\n0.06600000\n0.066\n0.066\nNA\nNA\nNA\n\n\nSFER\nM03\nNA\n1\n0.04900000\n0.049\n0.049\nNA\nNA\nNA\n\n\nSFER\nM04\nNA\n1\n0.29000000\n0.290\n0.290\nNA\nNA\nNA\n\n\nSFER\nM05\nNA\n1\n0.01700000\n0.017\n0.017\nNA\nNA\nNA\n\n\nSFER\nMR\n-0.0222857143\n54\n0.40644444\n0.000\n7.759\n3.1281974\n-0.022285714\n0.02970594\n\n\nSFER\nMudhole\nNA\n1\n0.00500000\n0.005\n0.005\nNA\nNA\nNA\n\n\nSFER\nNaplesBlueHole\nNA\n1\n0.05500000\n0.055\n0.055\nNA\nNA\nNA\n\n\nSFER\nPLUME\nNA\n1\n0.02000000\n0.020\n0.020\nNA\nNA\nNA\n\n\nSFER\nROME4\n0.0100000000\n11\n0.10636364\n0.000\n0.620\n1.7700564\nNA\n1.00000000\n\n\nSFER\nROME5\n-0.0300000000\n11\n0.22681818\n0.020\n0.950\n1.2023337\nNA\n1.00000000\n\n\nSFER\nRP1\n0.0055000000\n34\n0.20755882\n0.000\n1.780\n1.6089669\nNA\n0.89369467\n\n\nSFER\nRP2\n-0.0009250000\n34\n0.36429412\n0.000\n3.546\n2.0042525\nNA\n1.00000000\n\n\nSFER\nRP3\n0.0000000000\n35\n0.17971429\n0.000\n2.196\n2.1619510\nNA\n1.00000000\n\n\nSFER\nRP4\n-0.0061666667\n34\n0.08288235\n0.000\n0.345\n1.0023232\nNA\n0.41849223\n\n\nSFER\nRedTide\nNA\n1\n0.00000000\n0.000\n0.000\nNA\nNA\nNA\n\n\nSFER\nTB1\n-0.0087500000\n29\n0.14237931\n0.000\n1.098\n1.8391087\nNA\n0.08897301\n\n\nSFER\nTB10\n-0.0250000000\n27\n0.20059259\n0.000\n2.844\n2.7625457\n-0.025000000\n0.03705622\n\n\nSFER\nTB11\nNA\n2\n0.15250000\n0.075\n0.230\n0.7186987\nNA\nNA\n\n\nSFER\nTB12\nNA\n1\n0.05900000\n0.059\n0.059\nNA\nNA\nNA\n\n\nSFER\nTB13\nNA\n1\n0.02400000\n0.024\n0.024\nNA\nNA\nNA\n\n\nSFER\nTB2\n-0.0020000000\n29\n0.18427586\n0.000\n2.096\n2.2094126\nNA\n0.85669821\n\n\nSFER\nTB3\n0.0125000000\n29\n0.13755172\n0.000\n1.150\n1.7296795\nNA\n0.36658221\n\n\nSFER\nTB4\n0.0200000000\n29\n0.26889655\n0.000\n1.740\n1.8153534\nNA\n0.36658221\n\n\nSFER\nTB5\n-0.0002500000\n29\n0.22475862\n0.000\n2.394\n2.3198178\nNA\n0.44141833\n\n\nSFER\nTB6\nNA\n2\n0.42650000\n0.000\n0.853\n1.4142136\nNA\nNA\n\n\nSFER\nTB7\nNA\n2\n0.23000000\n0.000\n0.460\n1.4142136\nNA\nNA\n\n\nSFER\nTB8\nNA\n2\n0.07200000\n0.000\n0.144\n1.4142136\nNA\nNA\n\n\nSFER\nTB9\nNA\n2\n0.26700000\n0.000\n0.534\n1.4142136\nNA\nNA\n\n\nSFER\nTBA\nNA\n1\n0.07100000\n0.071\n0.071\nNA\nNA\nNA\n\n\nSFER\nTBB\nNA\n1\n0.23900000\n0.239\n0.239\nNA\nNA\nNA\n\n\nSFER\nTBC\nNA\n1\n0.06300000\n0.063\n0.063\nNA\nNA\nNA\n\n\nSFER\nUKIN\n-0.0131428571\n52\n0.29536538\n0.000\n4.733\n2.3809140\n-0.013142857\n0.04495783\n\n\nSFER\nUKMID\n-0.0074166667\n53\n0.12935849\n0.000\n1.005\n1.6830079\n-0.007416667\n0.03538882\n\n\nSFER\nUKOFF\n-0.0036000000\n53\n0.36658491\n0.000\n9.177\n3.6300378\nNA\n0.09635823\n\n\nSFER\nV1\n0.0238750000\n30\n0.20293333\n0.000\n0.912\n1.2923051\nNA\n0.43300340\n\n\nSFER\nV10\nNA\n1\n0.32900000\n0.329\n0.329\nNA\nNA\nNA\n\n\nSFER\nV11\nNA\n1\n0.21800000\n0.218\n0.218\nNA\nNA\nNA\n\n\nSFER\nV2\n0.0000000000\n29\n0.13334483\n0.000\n0.876\n1.5025484\nNA\n1.00000000\n\n\nSFER\nV3\n-0.0037500000\n29\n0.29472414\n0.000\n3.611\n2.3788265\nNA\n1.00000000\n\n\nSFER\nV4\n0.0000000000\n30\n0.16463333\n0.000\n0.840\n1.3982132\nNA\n0.86763233\n\n\nSFER\nV5\n-0.0235000000\n29\n0.33103448\n0.000\n5.602\n3.1737701\nNA\n0.18587673\n\n\nSFER\nV6\n0.0000000000\n30\n0.39480000\n0.000\n5.735\n2.6934906\nNA\n1.00000000\n\n\nSFER\nV7\n-0.0281250000\n30\n0.25740000\n0.000\n1.800\n1.7425670\nNA\n0.24767627\n\n\nSFER\nV8\n-0.0268000000\n29\n0.14575862\n0.000\n1.697\n2.2361434\nNA\n0.36658221\n\n\nSFER\nV9\n-0.0300000000\n30\n0.36920000\n0.000\n5.263\n2.8826783\nNA\n0.18039189\n\n\nSFER\nWS\n-0.0166428571\n56\n0.65866071\n0.000\n11.990\n3.0648299\nNA\n0.24372228\n\n\nSFER\nZ03027\nNA\n1\n0.00000000\n0.000\n0.000\nNA\nNA\nNA\n\n\nSFER\nZ03076\nNA\n1\n0.00000000\n0.000\n0.000\nNA\nNA\nNA\n\n\nSFER\nZ03116\nNA\n1\n0.00000000\n0.000\n0.000\nNA\nNA\nNA\n\n\nSFER\nZ03146\nNA\n1\n0.00000000\n0.000\n0.000\nNA\nNA\nNA\n\n\nSFER\nZ03198\nNA\n1\n0.00000000\n0.000\n0.000\nNA\nNA\nNA\n\n\nSFER\nZ04067\nNA\n1\n0.00000000\n0.000\n0.000\nNA\nNA\nNA\n\n\nSFER\nZ04068\nNA\n1\n0.00000000\n0.000\n0.000\nNA\nNA\nNA\n\n\nSFER\nZ04093\nNA\n1\n0.13300000\n0.133\n0.133\nNA\nNA\nNA\n\n\nSFER\nZ04099\nNA\n1\n0.00000000\n0.000\n0.000\nNA\nNA\nNA\n\n\nSFER\nZ04110\nNA\n1\n0.00000000\n0.000\n0.000\nNA\nNA\nNA\n\n\nSFER\nZ04610\nNA\n1\n0.00000000\n0.000\n0.000\nNA\nNA\nNA\n\n\n\n\n\n\n\n\n\nReporting Programs:\n\n\ndisplay reporting programs\nlibrary(ggplot2)\nggplot(df, aes(x = program)) +\n  geom_bar() +\n  labs(title = \"Reporting Programs\", x = \"Program\", y = \"Count\")"
  },
  {
    "objectID": "analyte_reports/analyte_reports/Enterococci.html",
    "href": "analyte_reports/analyte_reports/Enterococci.html",
    "title": "Enterococci Report",
    "section": "",
    "text": "get data across all programs, filter for analyte\nlibrary('here')\nlibrary('dplyr')\nsource(here(\"R/getAllData.R\"))\nfull_df &lt;- getAllData()\ndf &lt;- filter(full_df, DEP.Analyte.Name == params$analyte)\n\n\n\n\ncreate .csv of analyte data\n# save df to csv\n# reduce to only cols we need & save to csv\ndf %&gt;%\n  mutate(\n    source = program,\n    site = Monitoring.Location.ID,\n    datetime = Activity.Start.Date.Time,\n    analyte = DEP.Analyte.Name,\n    value = DEP.Result.Value.Number,\n    units = DEP.Result.Unit,\n    latitude = Org.Decimal.Latitude,\n    longitude = Org.Decimal.Longitude,\n    sample_depth = Activity.Depth,\n    .keep = \"none\"\n) %&gt;%\n  write.csv(here(\"data\", \"exports\", \"unified-wq-db-samples\", paste0(params$analyte, \".csv\")))\n\n\nDownload data for this analyte here\n\nHistogram of DEP.Result.Value.Number:\n\n\ndisplay histogram of values\nlibrary(ggplot2)\nggplot(df, aes(x = DEP.Result.Value.Number)) +\n  geom_histogram(bins = 30, fill = \"blue\", color = \"black\") +\n  labs(title = \"Histogram of Values\", x = \"Value\", y = \"Count\")\n\n\n\n\n\n\n\n\n\n\n\nStation Statistics:\n\n\ncreate station statistics dataframe\nsource(here(\"R/seasonalMannKendall.R\"))\nlibrary(lubridate)  # for mdy_hms()\nlibrary(pander)  # for display\n\n# create table of samples for each station\nsamples_df &lt;- df %&gt;%\n  select(\n    program, \n    Monitoring.Location.ID, \n    Activity.Start.Date.Time,\n    analyte = DEP.Analyte.Name,\n    DEP.Result.Value.Number, \n    DEP.Result.Unit,\n    latitude = Org.Decimal.Latitude,\n    longitude = Org.Decimal.Longitude,\n    sample_depth = Activity.Depth\n    ) %&gt;%\n  # drop any with empty Monitoring.Location.ID\n  filter(!is.na(Monitoring.Location.ID)) %&gt;%\n  # drop any with empty Activity.Start.Date.Time\n  filter(!is.na(Activity.Start.Date.Time)) %&gt;%\n  # parse the \"MM/DD/YYYY HH:MM:SS\" strings into POSIXct\n  mutate(Activity.Start.Date.Time = mdy_hms(\n          Activity.Start.Date.Time,\n          tz = \"UTC\")) %&gt;%\n  distinct()\n\n\n# add statistics for each station\nsample_stats_df &lt;- samples_df %&gt;%\n  group_by(program, Monitoring.Location.ID) %&gt;%\n  reframe(\n    {\n      tmp &lt;- seasonalMannKendallVectorized(\n        Activity.Start.Date.Time,\n        DEP.Result.Value.Number\n      )\n    },\n    n_values = n(),\n    mean = mean(DEP.Result.Value.Number),\n    min = min(DEP.Result.Value.Number),\n    max = max(DEP.Result.Value.Number),\n    coefficient.of.variation = sd(DEP.Result.Value.Number) / mean(DEP.Result.Value.Number)\n  ) %&gt;%\n  mutate(\n    # create column significant_slope\n    significant_slope = ifelse(z &lt;= 0.05, slope, NA_real_),\n    pvalue = z\n  ) %&gt;%\n  # drop unwanted columns added by seasonalMannKendall\n  select(\n    -z,\n    -tau,\n    -chi_square\n  )\n\n\n\n# print(head(sample_stats_df))\n# # display sample_stats_df with pander\n# pander(sample_stats_df)\n\n\n\n\nsave stats to csv\nsample_stats_df %&gt;%\n  write.csv(here(\n    \"data\", \"exports\", \"seasonal-mann-kendall-stats\", paste0(params$analyte, \".csv\")))\n\n\nDownload data for this analyte’s statistics here\n\n\ndisplay with gt\nlibrary(gt)\nlibrary(scales)\nlibrary(tidyselect)  # for all_of()\nlibrary(RColorBrewer) # for brewer.pal()\n\n# ── color_column() ─────────────────────────────────────────────────────────────\n# gt_tbl   : a gt object that you’ve already created (e.g. `sample_stats_df %&gt;% gt()`)\n# df       : the original data.frame (must contain the column you want to color)\n# column   : a string, e.g. \"slope\" or \"n_values\"\n# palette  : a character vector of colours to feed to col_numeric()\n#\ncolor_column &lt;- function(gt_tbl, df, column, \n                         palette = c(\"red\", \"orange\", \"yellow\", \"green\", \"blue\", \"violet\"),\n                         domain = NULL) {\n  # 1) Pull out that column’s numeric values\n  vals &lt;- df[[column]]\n  if (!is.numeric(vals)) {\n    stop(sprintf(\"`%s` is not numeric; data_color() requires a numeric column.\", column))\n  }\n  \n  # 2) Compute its min and max (ignoring NA)\n  min_val &lt;- min(vals, na.rm = TRUE)\n  max_val &lt;- max(vals, na.rm = TRUE)\n  if (is.null(domain)) {\n    domain &lt;- c(min_val, max_val)\n  }\n  \n  # 3) Call data_color() on the gt table for that single column\n  gt_tbl %&gt;%\n    data_color(\n      columns = all_of(column),\n      colors  = col_numeric(\n        palette = palette,\n        domain  = domain\n      )\n    )\n}\nlibrary(dplyr)\nlibrary(gt)\n\n# 1) First build your gt table as usual:\ngt_tbl &lt;- sample_stats_df %&gt;% \n  gt()\n\n# slope blue (-) to red (+) (0 centered)\ntryCatch({\n  min_slope &lt;- min(sample_stats_df$slope,  na.rm = TRUE)\n  max_slope &lt;- max(sample_stats_df$slope,  na.rm = TRUE)\n  max_abs_slope &lt;- max(abs(min_slope), abs(max_slope))\n  gt_tbl &lt;- color_column(\n    gt_tbl, \n    df     = sample_stats_df, \n    column = \"slope\",\n    palette = rev(brewer.pal(11, \"RdBu\")),\n    domain  = c(-max_abs_slope, max_abs_slope)\n  )\n}, error = function(e) {\n  print(\"Error in slope color column\")\n  print(e)\n})\n\n\n[1] \"Error in slope color column\"\n&lt;rlang_error in col_numeric(palette = palette, domain = domain): Wasn't able to determine range of `domain`&gt;\n\n\ndisplay with gt\ntryCatch({\n  # pvalue Z\n  gt_tbl &lt;- color_column(\n    gt_tbl, \n    df      = sample_stats_df, \n    column  = \"z\", \n    palette = scales::brewer_pal(palette = \"Blues\")(9)\n  )\n}, error = function(e) {\n  print(\"Error in z color column\")\n  print(e)\n})\n\n\n[1] \"Error in z color column\"\n&lt;simpleError in color_column(gt_tbl, df = sample_stats_df, column = \"z\", palette = (scales::brewer_pal(palette = \"Blues\"))(9)): `z` is not numeric; data_color() requires a numeric column.&gt;\n\n\ndisplay with gt\n# slope blue (-) to red (+) (0 centered)\ntryCatch({\n  min_slope &lt;- min(sample_stats_df$significant_slope,  na.rm = TRUE)\n  max_slope &lt;- max(sample_stats_df$significant_slope,  na.rm = TRUE)\n  max_abs_slope &lt;- max(abs(min_slope), abs(max_slope))\n  gt_tbl &lt;- color_column(\n    gt_tbl, \n    df     = sample_stats_df, \n    column = \"significant_slope\",\n    palette = rev(brewer.pal(11, \"RdBu\")),\n    domain  = c(-max_abs_slope, max_abs_slope)\n  )\n}, error = function(e) {\n  print(\"Error in significant_slope color column\")\n  print(e)\n})\n\n\n[1] \"Error in significant_slope color column\"\n&lt;simpleError in color_column(gt_tbl, df = sample_stats_df, column = \"significant_slope\",     palette = rev(brewer.pal(11, \"RdBu\")), domain = c(-max_abs_slope,         max_abs_slope)): `significant_slope` is not numeric; data_color() requires a numeric column.&gt;\n\n\ndisplay with gt\ntryCatch({\n  # mean values blue to red (0 centered)\n  min_mean &lt;- min(sample_stats_df$mean,  na.rm = TRUE)\n  max_mean &lt;- max(sample_stats_df$mean,  na.rm = TRUE)\n  max_abs_mean &lt;- max(abs(min_mean), abs(max_mean))\n  gt_tbl &lt;- color_column(\n    gt_tbl, \n    df     = sample_stats_df, \n    column = \"mean\",\n    palette = rev(brewer.pal(11, \"RdBu\")),\n    domain  = c(-max_abs_mean, max_abs_mean)\n  )\n}, error = function(e) {\n  print(\"Error in mean color column\")\n  print(e)\n})\n\ntryCatch({\n  # n values white to green\n  gt_tbl &lt;- color_column(\n    gt_tbl, \n    df      = sample_stats_df, \n    column  = \"n_values\", \n    palette = scales::brewer_pal(palette = \"Greens\")(9)\n  )\n}, error = function(e) {\n  print(\"Error in n_values color column\")\n  print(e)\n})\n\ntryCatch({\n  # min\n  gt_tbl &lt;- color_column(\n    gt_tbl, \n    df      = sample_stats_df, \n    column  = \"min\", \n    palette = scales::brewer_pal(palette = \"Blues\")(9)\n  )\n}, error = function(e) {\n  print(\"Error in min color column\")\n  print(e)\n})\n\ntryCatch({\n  # max\n  gt_tbl &lt;- color_column(\n    gt_tbl, \n    df      = sample_stats_df, \n    column  = \"max\", \n    palette = scales::brewer_pal(palette = \"Blues\")(9)\n  )\n}, error = function(e) {\n  print(\"Error in max color column\")\n  print(e)\n})\n\ntryCatch({\n  # coefficient.of.variation\n  gt_tbl &lt;- color_column(\n    gt_tbl, \n    df      = sample_stats_df, \n    column  = \"coefficient.of.variation\", \n    palette = scales::brewer_pal(palette = \"Blues\")(9)\n  )\n}, error = function(e) {\n  print(\"Error in coefficient.of.variation color column\")\n  print(e)\n})\n\n# 4) Render/display:\ngt_tbl\n\n\n\n\n\n\n\n\nprogram\nMonitoring.Location.ID\nslope\nn_values\nmean\nmin\nmax\ncoefficient.of.variation\nsignificant_slope\npvalue\n\n\n\n\nMiamiBeach\n#1\nNA\n1\n10.0000\n10\n10\nNA\nNA\nNA\n\n\nMiamiBeach\n#10\nNA\n1\n20.0000\n20\n20\nNA\nNA\nNA\n\n\nMiamiBeach\n#11\nNA\n1\n51.0000\n51\n51\nNA\nNA\nNA\n\n\nMiamiBeach\n#12\nNA\n1\n4350.0000\n4350\n4350\nNA\nNA\nNA\n\n\nMiamiBeach\n#13\nNA\n1\n10.0000\n10\n10\nNA\nNA\nNA\n\n\nMiamiBeach\n#14\nNA\n1\n10.0000\n10\n10\nNA\nNA\nNA\n\n\nMiamiBeach\n#15\nNA\n1\n20.0000\n20\n20\nNA\nNA\nNA\n\n\nMiamiBeach\n#16\nNA\n1\n10.0000\n10\n10\nNA\nNA\nNA\n\n\nMiamiBeach\n#17\nNA\n1\n10.0000\n10\n10\nNA\nNA\nNA\n\n\nMiamiBeach\n#18\nNA\n1\n10.0000\n10\n10\nNA\nNA\nNA\n\n\nMiamiBeach\n#19\nNA\n1\nNA\nNA\nNA\nNA\nNA\nNA\n\n\nMiamiBeach\n#2\nNA\n1\n31.0000\n31\n31\nNA\nNA\nNA\n\n\nMiamiBeach\n#20\nNA\n1\n20.0000\n20\n20\nNA\nNA\nNA\n\n\nMiamiBeach\n#21\nNA\n1\n10.0000\n10\n10\nNA\nNA\nNA\n\n\nMiamiBeach\n#22\nNA\n1\n10.0000\n10\n10\nNA\nNA\nNA\n\n\nMiamiBeach\n#23\nNA\n1\n63.0000\n63\n63\nNA\nNA\nNA\n\n\nMiamiBeach\n#24\nNA\n1\n10.0000\n10\n10\nNA\nNA\nNA\n\n\nMiamiBeach\n#3\nNA\n1\nNA\nNA\nNA\nNA\nNA\nNA\n\n\nMiamiBeach\n#3A\nNA\n1\n3650.0000\n3650\n3650\nNA\nNA\nNA\n\n\nMiamiBeach\n#3B\nNA\n1\n10.0000\n10\n10\nNA\nNA\nNA\n\n\nMiamiBeach\n#4\nNA\n1\nNA\nNA\nNA\nNA\nNA\nNA\n\n\nMiamiBeach\n#5\nNA\n1\n20.0000\n20\n20\nNA\nNA\nNA\n\n\nMiamiBeach\n#6\nNA\n1\n359.0000\n359\n359\nNA\nNA\nNA\n\n\nMiamiBeach\n#7\nNA\n1\n31.0000\n31\n31\nNA\nNA\nNA\n\n\nMiamiBeach\n#8\nNA\n1\n20.0000\n20\n20\nNA\nNA\nNA\n\n\nMiamiBeach\n#9\nNA\n1\n10.0000\n10\n10\nNA\nNA\nNA\n\n\nMiamiBeach\n1\nNA\n11\nNA\nNA\nNA\nNA\nNA\nNA\n\n\nMiamiBeach\n10\nNA\n11\nNA\nNA\nNA\nNA\nNA\nNA\n\n\nMiamiBeach\n11\nNA\n11\nNA\nNA\nNA\nNA\nNA\nNA\n\n\nMiamiBeach\n12\nNA\n11\n661.1818\n85\n3430\n1.50604\nNA\nNA\n\n\nMiamiBeach\n13\nNA\n11\nNA\nNA\nNA\nNA\nNA\nNA\n\n\nMiamiBeach\n14\nNA\n11\nNA\nNA\nNA\nNA\nNA\nNA\n\n\nMiamiBeach\n15\nNA\n11\nNA\nNA\nNA\nNA\nNA\nNA\n\n\nMiamiBeach\n16\nNA\n11\nNA\nNA\nNA\nNA\nNA\nNA\n\n\nMiamiBeach\n17\nNA\n11\nNA\nNA\nNA\nNA\nNA\nNA\n\n\nMiamiBeach\n18\nNA\n11\nNA\nNA\nNA\nNA\nNA\nNA\n\n\nMiamiBeach\n19\nNA\n11\nNA\nNA\nNA\nNA\nNA\nNA\n\n\nMiamiBeach\n2\nNA\n11\nNA\nNA\nNA\nNA\nNA\nNA\n\n\nMiamiBeach\n20\nNA\n11\nNA\nNA\nNA\nNA\nNA\nNA\n\n\nMiamiBeach\n21\nNA\n11\nNA\nNA\nNA\nNA\nNA\nNA\n\n\nMiamiBeach\n22\nNA\n11\nNA\nNA\nNA\nNA\nNA\nNA\n\n\nMiamiBeach\n23\nNA\n11\nNA\nNA\nNA\nNA\nNA\nNA\n\n\nMiamiBeach\n24\nNA\n11\nNA\nNA\nNA\nNA\nNA\nNA\n\n\nMiamiBeach\n25\nNA\n10\nNA\nNA\nNA\nNA\nNA\nNA\n\n\nMiamiBeach\n26\nNA\n11\nNA\nNA\nNA\nNA\nNA\nNA\n\n\nMiamiBeach\n27\nNA\n11\nNA\nNA\nNA\nNA\nNA\nNA\n\n\nMiamiBeach\n28\nNA\n11\nNA\nNA\nNA\nNA\nNA\nNA\n\n\nMiamiBeach\n29\nNA\n11\nNA\nNA\nNA\nNA\nNA\nNA\n\n\nMiamiBeach\n3\nNA\n11\nNA\nNA\nNA\nNA\nNA\nNA\n\n\nMiamiBeach\n30\nNA\n11\nNA\nNA\nNA\nNA\nNA\nNA\n\n\nMiamiBeach\n31\nNA\n11\nNA\nNA\nNA\nNA\nNA\nNA\n\n\nMiamiBeach\n32\nNA\n11\nNA\nNA\nNA\nNA\nNA\nNA\n\n\nMiamiBeach\n33\nNA\n11\nNA\nNA\nNA\nNA\nNA\nNA\n\n\nMiamiBeach\n34\nNA\n11\nNA\nNA\nNA\nNA\nNA\nNA\n\n\nMiamiBeach\n35\nNA\n11\nNA\nNA\nNA\nNA\nNA\nNA\n\n\nMiamiBeach\n36\nNA\n11\nNA\nNA\nNA\nNA\nNA\nNA\n\n\nMiamiBeach\n37\nNA\n11\nNA\nNA\nNA\nNA\nNA\nNA\n\n\nMiamiBeach\n38\nNA\n11\nNA\nNA\nNA\nNA\nNA\nNA\n\n\nMiamiBeach\n39\nNA\n11\nNA\nNA\nNA\nNA\nNA\nNA\n\n\nMiamiBeach\n3A\nNA\n8\nNA\nNA\nNA\nNA\nNA\nNA\n\n\nMiamiBeach\n3B\nNA\n9\nNA\nNA\nNA\nNA\nNA\nNA\n\n\nMiamiBeach\n3b\nNA\n1\n10.0000\n10\n10\nNA\nNA\nNA\n\n\nMiamiBeach\n4\nNA\n11\nNA\nNA\nNA\nNA\nNA\nNA\n\n\nMiamiBeach\n40\nNA\n11\nNA\nNA\nNA\nNA\nNA\nNA\n\n\nMiamiBeach\n41\nNA\n11\nNA\nNA\nNA\nNA\nNA\nNA\n\n\nMiamiBeach\n5\nNA\n11\nNA\nNA\nNA\nNA\nNA\nNA\n\n\nMiamiBeach\n6\nNA\n11\nNA\nNA\nNA\nNA\nNA\nNA\n\n\nMiamiBeach\n7\nNA\n11\nNA\nNA\nNA\nNA\nNA\nNA\n\n\nMiamiBeach\n8\nNA\n11\nNA\nNA\nNA\nNA\nNA\nNA\n\n\nMiamiBeach\n9\nNA\n11\nNA\nNA\nNA\nNA\nNA\nNA\n\n\n\n\n\n\n\n\n\nReporting Programs:\n\n\ndisplay reporting programs\nlibrary(ggplot2)\nggplot(df, aes(x = program)) +\n  geom_bar() +\n  labs(title = \"Reporting Programs\", x = \"Program\", y = \"Count\")"
  },
  {
    "objectID": "analyte_reports/analyte_reports/Chlorophyll_a.html",
    "href": "analyte_reports/analyte_reports/Chlorophyll_a.html",
    "title": "Chlorophyll_a Report",
    "section": "",
    "text": "get data across all programs, filter for analyte\nlibrary('here')\nlibrary('dplyr')\nsource(here(\"R/getAllData.R\"))\nfull_df &lt;- getAllData()\ndf &lt;- filter(full_df, DEP.Analyte.Name == params$analyte)\n\n\n\n\ncreate .csv of analyte data\n# save df to csv\n# reduce to only cols we need & save to csv\ndf %&gt;%\n  mutate(\n    source = program,\n    site = Monitoring.Location.ID,\n    datetime = Activity.Start.Date.Time,\n    analyte = DEP.Analyte.Name,\n    value = DEP.Result.Value.Number,\n    units = DEP.Result.Unit,\n    latitude = Org.Decimal.Latitude,\n    longitude = Org.Decimal.Longitude,\n    sample_depth = Activity.Depth,\n    .keep = \"none\"\n) %&gt;%\n  write.csv(here(\"data\", \"exports\", \"unified-wq-db-samples\", paste0(params$analyte, \".csv\")))\n\n\nDownload data for this analyte here\n\nHistogram of DEP.Result.Value.Number:\n\n\ndisplay histogram of values\nlibrary(ggplot2)\nggplot(df, aes(x = DEP.Result.Value.Number)) +\n  geom_histogram(bins = 30, fill = \"blue\", color = \"black\") +\n  labs(title = \"Histogram of Values\", x = \"Value\", y = \"Count\")\n\n\n\n\n\n\n\n\n\n\n\nStation Statistics:\n\n\ncreate station statistics dataframe\nsource(here(\"R/seasonalMannKendall.R\"))\nlibrary(lubridate)  # for mdy_hms()\nlibrary(pander)  # for display\n\n# create table of samples for each station\nsamples_df &lt;- df %&gt;%\n  select(\n    program, \n    Monitoring.Location.ID, \n    Activity.Start.Date.Time,\n    analyte = DEP.Analyte.Name,\n    DEP.Result.Value.Number, \n    DEP.Result.Unit,\n    latitude = Org.Decimal.Latitude,\n    longitude = Org.Decimal.Longitude,\n    sample_depth = Activity.Depth\n    ) %&gt;%\n  # drop any with empty Monitoring.Location.ID\n  filter(!is.na(Monitoring.Location.ID)) %&gt;%\n  # drop any with empty Activity.Start.Date.Time\n  filter(!is.na(Activity.Start.Date.Time)) %&gt;%\n  # parse the \"MM/DD/YYYY HH:MM:SS\" strings into POSIXct\n  mutate(Activity.Start.Date.Time = mdy_hms(\n          Activity.Start.Date.Time,\n          tz = \"UTC\")) %&gt;%\n  distinct()\n\n\n# add statistics for each station\nsample_stats_df &lt;- samples_df %&gt;%\n  group_by(program, Monitoring.Location.ID) %&gt;%\n  reframe(\n    {\n      tmp &lt;- seasonalMannKendallVectorized(\n        Activity.Start.Date.Time,\n        DEP.Result.Value.Number\n      )\n    },\n    n_values = n(),\n    mean = mean(DEP.Result.Value.Number),\n    min = min(DEP.Result.Value.Number),\n    max = max(DEP.Result.Value.Number),\n    coefficient.of.variation = sd(DEP.Result.Value.Number) / mean(DEP.Result.Value.Number)\n  ) %&gt;%\n  mutate(\n    # create column significant_slope\n    significant_slope = ifelse(z &lt;= 0.05, slope, NA_real_),\n    pvalue = z\n  ) %&gt;%\n  # drop unwanted columns added by seasonalMannKendall\n  select(\n    -z,\n    -tau,\n    -chi_square\n  )\n\n\n\n# print(head(sample_stats_df))\n# # display sample_stats_df with pander\n# pander(sample_stats_df)\n\n\n\n\nsave stats to csv\nsample_stats_df %&gt;%\n  write.csv(here(\n    \"data\", \"exports\", \"seasonal-mann-kendall-stats\", paste0(params$analyte, \".csv\")))\n\n\nDownload data for this analyte’s statistics here\n\n\ndisplay with gt\nlibrary(gt)\nlibrary(scales)\nlibrary(tidyselect)  # for all_of()\nlibrary(RColorBrewer) # for brewer.pal()\n\n# ── color_column() ─────────────────────────────────────────────────────────────\n# gt_tbl   : a gt object that you’ve already created (e.g. `sample_stats_df %&gt;% gt()`)\n# df       : the original data.frame (must contain the column you want to color)\n# column   : a string, e.g. \"slope\" or \"n_values\"\n# palette  : a character vector of colours to feed to col_numeric()\n#\ncolor_column &lt;- function(gt_tbl, df, column, \n                         palette = c(\"red\", \"orange\", \"yellow\", \"green\", \"blue\", \"violet\"),\n                         domain = NULL) {\n  # 1) Pull out that column’s numeric values\n  vals &lt;- df[[column]]\n  if (!is.numeric(vals)) {\n    stop(sprintf(\"`%s` is not numeric; data_color() requires a numeric column.\", column))\n  }\n  \n  # 2) Compute its min and max (ignoring NA)\n  min_val &lt;- min(vals, na.rm = TRUE)\n  max_val &lt;- max(vals, na.rm = TRUE)\n  if (is.null(domain)) {\n    domain &lt;- c(min_val, max_val)\n  }\n  \n  # 3) Call data_color() on the gt table for that single column\n  gt_tbl %&gt;%\n    data_color(\n      columns = all_of(column),\n      colors  = col_numeric(\n        palette = palette,\n        domain  = domain\n      )\n    )\n}\nlibrary(dplyr)\nlibrary(gt)\n\n# 1) First build your gt table as usual:\ngt_tbl &lt;- sample_stats_df %&gt;% \n  gt()\n\n# slope blue (-) to red (+) (0 centered)\ntryCatch({\n  min_slope &lt;- min(sample_stats_df$slope,  na.rm = TRUE)\n  max_slope &lt;- max(sample_stats_df$slope,  na.rm = TRUE)\n  max_abs_slope &lt;- max(abs(min_slope), abs(max_slope))\n  gt_tbl &lt;- color_column(\n    gt_tbl, \n    df     = sample_stats_df, \n    column = \"slope\",\n    palette = rev(brewer.pal(11, \"RdBu\")),\n    domain  = c(-max_abs_slope, max_abs_slope)\n  )\n}, error = function(e) {\n  print(\"Error in slope color column\")\n  print(e)\n})\n\n\n[1] \"Error in slope color column\"\n&lt;rlang_error in col_numeric(palette = palette, domain = domain): Wasn't able to determine range of `domain`&gt;\n\n\ndisplay with gt\ntryCatch({\n  # pvalue Z\n  gt_tbl &lt;- color_column(\n    gt_tbl, \n    df      = sample_stats_df, \n    column  = \"z\", \n    palette = scales::brewer_pal(palette = \"Blues\")(9)\n  )\n}, error = function(e) {\n  print(\"Error in z color column\")\n  print(e)\n})\n\n\n[1] \"Error in z color column\"\n&lt;simpleError in color_column(gt_tbl, df = sample_stats_df, column = \"z\", palette = (scales::brewer_pal(palette = \"Blues\"))(9)): `z` is not numeric; data_color() requires a numeric column.&gt;\n\n\ndisplay with gt\n# slope blue (-) to red (+) (0 centered)\ntryCatch({\n  min_slope &lt;- min(sample_stats_df$significant_slope,  na.rm = TRUE)\n  max_slope &lt;- max(sample_stats_df$significant_slope,  na.rm = TRUE)\n  max_abs_slope &lt;- max(abs(min_slope), abs(max_slope))\n  gt_tbl &lt;- color_column(\n    gt_tbl, \n    df     = sample_stats_df, \n    column = \"significant_slope\",\n    palette = rev(brewer.pal(11, \"RdBu\")),\n    domain  = c(-max_abs_slope, max_abs_slope)\n  )\n}, error = function(e) {\n  print(\"Error in significant_slope color column\")\n  print(e)\n})\n\n\n[1] \"Error in significant_slope color column\"\n&lt;simpleError in color_column(gt_tbl, df = sample_stats_df, column = \"significant_slope\",     palette = rev(brewer.pal(11, \"RdBu\")), domain = c(-max_abs_slope,         max_abs_slope)): `significant_slope` is not numeric; data_color() requires a numeric column.&gt;\n\n\ndisplay with gt\ntryCatch({\n  # mean values blue to red (0 centered)\n  min_mean &lt;- min(sample_stats_df$mean,  na.rm = TRUE)\n  max_mean &lt;- max(sample_stats_df$mean,  na.rm = TRUE)\n  max_abs_mean &lt;- max(abs(min_mean), abs(max_mean))\n  gt_tbl &lt;- color_column(\n    gt_tbl, \n    df     = sample_stats_df, \n    column = \"mean\",\n    palette = rev(brewer.pal(11, \"RdBu\")),\n    domain  = c(-max_abs_mean, max_abs_mean)\n  )\n}, error = function(e) {\n  print(\"Error in mean color column\")\n  print(e)\n})\n\n\n[1] \"Error in mean color column\"\n&lt;rlang_error in col_numeric(palette = palette, domain = domain): Wasn't able to determine range of `domain`&gt;\n\n\ndisplay with gt\ntryCatch({\n  # n values white to green\n  gt_tbl &lt;- color_column(\n    gt_tbl, \n    df      = sample_stats_df, \n    column  = \"n_values\", \n    palette = scales::brewer_pal(palette = \"Greens\")(9)\n  )\n}, error = function(e) {\n  print(\"Error in n_values color column\")\n  print(e)\n})\n\n\n[1] \"Error in n_values color column\"\n&lt;rlang_error in col_numeric(palette = palette, domain = domain): Wasn't able to determine range of `domain`&gt;\n\n\ndisplay with gt\ntryCatch({\n  # min\n  gt_tbl &lt;- color_column(\n    gt_tbl, \n    df      = sample_stats_df, \n    column  = \"min\", \n    palette = scales::brewer_pal(palette = \"Blues\")(9)\n  )\n}, error = function(e) {\n  print(\"Error in min color column\")\n  print(e)\n})\n\n\n[1] \"Error in min color column\"\n&lt;rlang_error in col_numeric(palette = palette, domain = domain): Wasn't able to determine range of `domain`&gt;\n\n\ndisplay with gt\ntryCatch({\n  # max\n  gt_tbl &lt;- color_column(\n    gt_tbl, \n    df      = sample_stats_df, \n    column  = \"max\", \n    palette = scales::brewer_pal(palette = \"Blues\")(9)\n  )\n}, error = function(e) {\n  print(\"Error in max color column\")\n  print(e)\n})\n\n\n[1] \"Error in max color column\"\n&lt;rlang_error in col_numeric(palette = palette, domain = domain): Wasn't able to determine range of `domain`&gt;\n\n\ndisplay with gt\ntryCatch({\n  # coefficient.of.variation\n  gt_tbl &lt;- color_column(\n    gt_tbl, \n    df      = sample_stats_df, \n    column  = \"coefficient.of.variation\", \n    palette = scales::brewer_pal(palette = \"Blues\")(9)\n  )\n}, error = function(e) {\n  print(\"Error in coefficient.of.variation color column\")\n  print(e)\n})\n\n\n[1] \"Error in coefficient.of.variation color column\"\n&lt;rlang_error in col_numeric(palette = palette, domain = domain): Wasn't able to determine range of `domain`&gt;\n\n\ndisplay with gt\n# 4) Render/display:\ngt_tbl\n\n\n\n\n\n\n\n\nprogram\nMonitoring.Location.ID\nslope\nn_values\nmean\nmin\nmax\ncoefficient.of.variation\nsignificant_slope\npvalue\n\n\n\n\n\n\n\n\n\n\n\nReporting Programs:\n\n\ndisplay reporting programs\nlibrary(ggplot2)\nggplot(df, aes(x = program)) +\n  geom_bar() +\n  labs(title = \"Reporting Programs\", x = \"Program\", y = \"Count\")"
  },
  {
    "objectID": "analyte_reports/analyte_reports/Ammonia_plus_Ammonium.html",
    "href": "analyte_reports/analyte_reports/Ammonia_plus_Ammonium.html",
    "title": "Ammonia_plus_Ammonium Report",
    "section": "",
    "text": "get data across all programs, filter for analyte\nlibrary('here')\nlibrary('dplyr')\nsource(here(\"R/getAllData.R\"))\nfull_df &lt;- getAllData()\ndf &lt;- filter(full_df, DEP.Analyte.Name == params$analyte)\n\n\n\n\ncreate .csv of analyte data\n# save df to csv\n# reduce to only cols we need & save to csv\ndf %&gt;%\n  mutate(\n    source = program,\n    site = Monitoring.Location.ID,\n    datetime = Activity.Start.Date.Time,\n    analyte = DEP.Analyte.Name,\n    value = DEP.Result.Value.Number,\n    units = DEP.Result.Unit,\n    latitude = Org.Decimal.Latitude,\n    longitude = Org.Decimal.Longitude,\n    sample_depth = Activity.Depth,\n    .keep = \"none\"\n) %&gt;%\n  write.csv(here(\"data\", \"exports\", \"unified-wq-db-samples\", paste0(params$analyte, \".csv\")))\n\n\nDownload data for this analyte here\n\nHistogram of DEP.Result.Value.Number:\n\n\ndisplay histogram of values\nlibrary(ggplot2)\nggplot(df, aes(x = DEP.Result.Value.Number)) +\n  geom_histogram(bins = 30, fill = \"blue\", color = \"black\") +\n  labs(title = \"Histogram of Values\", x = \"Value\", y = \"Count\")\n\n\n\n\n\n\n\n\n\n\n\nStation Statistics:\n\n\ncreate station statistics dataframe\nsource(here(\"R/seasonalMannKendall.R\"))\nlibrary(lubridate)  # for mdy_hms()\nlibrary(pander)  # for display\n\n# create table of samples for each station\nsamples_df &lt;- df %&gt;%\n  select(\n    program, \n    Monitoring.Location.ID, \n    Activity.Start.Date.Time,\n    analyte = DEP.Analyte.Name,\n    DEP.Result.Value.Number, \n    DEP.Result.Unit,\n    latitude = Org.Decimal.Latitude,\n    longitude = Org.Decimal.Longitude,\n    sample_depth = Activity.Depth\n    ) %&gt;%\n  # drop any with empty Monitoring.Location.ID\n  filter(!is.na(Monitoring.Location.ID)) %&gt;%\n  # drop any with empty Activity.Start.Date.Time\n  filter(!is.na(Activity.Start.Date.Time)) %&gt;%\n  # parse the \"MM/DD/YYYY HH:MM:SS\" strings into POSIXct\n  mutate(Activity.Start.Date.Time = mdy_hms(\n          Activity.Start.Date.Time,\n          tz = \"UTC\")) %&gt;%\n  distinct()\n\n\n# add statistics for each station\nsample_stats_df &lt;- samples_df %&gt;%\n  group_by(program, Monitoring.Location.ID) %&gt;%\n  reframe(\n    {\n      tmp &lt;- seasonalMannKendallVectorized(\n        Activity.Start.Date.Time,\n        DEP.Result.Value.Number\n      )\n    },\n    n_values = n(),\n    mean = mean(DEP.Result.Value.Number),\n    min = min(DEP.Result.Value.Number),\n    max = max(DEP.Result.Value.Number),\n    coefficient.of.variation = sd(DEP.Result.Value.Number) / mean(DEP.Result.Value.Number)\n  ) %&gt;%\n  mutate(\n    # create column significant_slope\n    significant_slope = ifelse(z &lt;= 0.05, slope, NA_real_),\n    pvalue = z\n  ) %&gt;%\n  # drop unwanted columns added by seasonalMannKendall\n  select(\n    -z,\n    -tau,\n    -chi_square\n  )\n\n\n\n# print(head(sample_stats_df))\n# # display sample_stats_df with pander\n# pander(sample_stats_df)\n\n\n\n\nsave stats to csv\nsample_stats_df %&gt;%\n  write.csv(here(\n    \"data\", \"exports\", \"seasonal-mann-kendall-stats\", paste0(params$analyte, \".csv\")))\n\n\nDownload data for this analyte’s statistics here\n\n\ndisplay with gt\nlibrary(gt)\nlibrary(scales)\nlibrary(tidyselect)  # for all_of()\nlibrary(RColorBrewer) # for brewer.pal()\n\n# ── color_column() ─────────────────────────────────────────────────────────────\n# gt_tbl   : a gt object that you’ve already created (e.g. `sample_stats_df %&gt;% gt()`)\n# df       : the original data.frame (must contain the column you want to color)\n# column   : a string, e.g. \"slope\" or \"n_values\"\n# palette  : a character vector of colours to feed to col_numeric()\n#\ncolor_column &lt;- function(gt_tbl, df, column, \n                         palette = c(\"red\", \"orange\", \"yellow\", \"green\", \"blue\", \"violet\"),\n                         domain = NULL) {\n  # 1) Pull out that column’s numeric values\n  vals &lt;- df[[column]]\n  if (!is.numeric(vals)) {\n    stop(sprintf(\"`%s` is not numeric; data_color() requires a numeric column.\", column))\n  }\n  \n  # 2) Compute its min and max (ignoring NA)\n  min_val &lt;- min(vals, na.rm = TRUE)\n  max_val &lt;- max(vals, na.rm = TRUE)\n  if (is.null(domain)) {\n    domain &lt;- c(min_val, max_val)\n  }\n  \n  # 3) Call data_color() on the gt table for that single column\n  gt_tbl %&gt;%\n    data_color(\n      columns = all_of(column),\n      colors  = col_numeric(\n        palette = palette,\n        domain  = domain\n      )\n    )\n}\nlibrary(dplyr)\nlibrary(gt)\n\n# 1) First build your gt table as usual:\ngt_tbl &lt;- sample_stats_df %&gt;% \n  gt()\n\n# slope blue (-) to red (+) (0 centered)\ntryCatch({\n  min_slope &lt;- min(sample_stats_df$slope,  na.rm = TRUE)\n  max_slope &lt;- max(sample_stats_df$slope,  na.rm = TRUE)\n  max_abs_slope &lt;- max(abs(min_slope), abs(max_slope))\n  gt_tbl &lt;- color_column(\n    gt_tbl, \n    df     = sample_stats_df, \n    column = \"slope\",\n    palette = rev(brewer.pal(11, \"RdBu\")),\n    domain  = c(-max_abs_slope, max_abs_slope)\n  )\n}, error = function(e) {\n  print(\"Error in slope color column\")\n  print(e)\n})\n\n\n[1] \"Error in slope color column\"\n&lt;rlang_error in col_numeric(palette = palette, domain = domain): Wasn't able to determine range of `domain`&gt;\n\n\ndisplay with gt\ntryCatch({\n  # pvalue Z\n  gt_tbl &lt;- color_column(\n    gt_tbl, \n    df      = sample_stats_df, \n    column  = \"z\", \n    palette = scales::brewer_pal(palette = \"Blues\")(9)\n  )\n}, error = function(e) {\n  print(\"Error in z color column\")\n  print(e)\n})\n\n\n[1] \"Error in z color column\"\n&lt;simpleError in color_column(gt_tbl, df = sample_stats_df, column = \"z\", palette = (scales::brewer_pal(palette = \"Blues\"))(9)): `z` is not numeric; data_color() requires a numeric column.&gt;\n\n\ndisplay with gt\n# slope blue (-) to red (+) (0 centered)\ntryCatch({\n  min_slope &lt;- min(sample_stats_df$significant_slope,  na.rm = TRUE)\n  max_slope &lt;- max(sample_stats_df$significant_slope,  na.rm = TRUE)\n  max_abs_slope &lt;- max(abs(min_slope), abs(max_slope))\n  gt_tbl &lt;- color_column(\n    gt_tbl, \n    df     = sample_stats_df, \n    column = \"significant_slope\",\n    palette = rev(brewer.pal(11, \"RdBu\")),\n    domain  = c(-max_abs_slope, max_abs_slope)\n  )\n}, error = function(e) {\n  print(\"Error in significant_slope color column\")\n  print(e)\n})\n\n\n[1] \"Error in significant_slope color column\"\n&lt;simpleError in color_column(gt_tbl, df = sample_stats_df, column = \"significant_slope\",     palette = rev(brewer.pal(11, \"RdBu\")), domain = c(-max_abs_slope,         max_abs_slope)): `significant_slope` is not numeric; data_color() requires a numeric column.&gt;\n\n\ndisplay with gt\ntryCatch({\n  # mean values blue to red (0 centered)\n  min_mean &lt;- min(sample_stats_df$mean,  na.rm = TRUE)\n  max_mean &lt;- max(sample_stats_df$mean,  na.rm = TRUE)\n  max_abs_mean &lt;- max(abs(min_mean), abs(max_mean))\n  gt_tbl &lt;- color_column(\n    gt_tbl, \n    df     = sample_stats_df, \n    column = \"mean\",\n    palette = rev(brewer.pal(11, \"RdBu\")),\n    domain  = c(-max_abs_mean, max_abs_mean)\n  )\n}, error = function(e) {\n  print(\"Error in mean color column\")\n  print(e)\n})\n\n\n[1] \"Error in mean color column\"\n&lt;rlang_error in col_numeric(palette = palette, domain = domain): Wasn't able to determine range of `domain`&gt;\n\n\ndisplay with gt\ntryCatch({\n  # n values white to green\n  gt_tbl &lt;- color_column(\n    gt_tbl, \n    df      = sample_stats_df, \n    column  = \"n_values\", \n    palette = scales::brewer_pal(palette = \"Greens\")(9)\n  )\n}, error = function(e) {\n  print(\"Error in n_values color column\")\n  print(e)\n})\n\n\n[1] \"Error in n_values color column\"\n&lt;rlang_error in col_numeric(palette = palette, domain = domain): Wasn't able to determine range of `domain`&gt;\n\n\ndisplay with gt\ntryCatch({\n  # min\n  gt_tbl &lt;- color_column(\n    gt_tbl, \n    df      = sample_stats_df, \n    column  = \"min\", \n    palette = scales::brewer_pal(palette = \"Blues\")(9)\n  )\n}, error = function(e) {\n  print(\"Error in min color column\")\n  print(e)\n})\n\n\n[1] \"Error in min color column\"\n&lt;rlang_error in col_numeric(palette = palette, domain = domain): Wasn't able to determine range of `domain`&gt;\n\n\ndisplay with gt\ntryCatch({\n  # max\n  gt_tbl &lt;- color_column(\n    gt_tbl, \n    df      = sample_stats_df, \n    column  = \"max\", \n    palette = scales::brewer_pal(palette = \"Blues\")(9)\n  )\n}, error = function(e) {\n  print(\"Error in max color column\")\n  print(e)\n})\n\n\n[1] \"Error in max color column\"\n&lt;rlang_error in col_numeric(palette = palette, domain = domain): Wasn't able to determine range of `domain`&gt;\n\n\ndisplay with gt\ntryCatch({\n  # coefficient.of.variation\n  gt_tbl &lt;- color_column(\n    gt_tbl, \n    df      = sample_stats_df, \n    column  = \"coefficient.of.variation\", \n    palette = scales::brewer_pal(palette = \"Blues\")(9)\n  )\n}, error = function(e) {\n  print(\"Error in coefficient.of.variation color column\")\n  print(e)\n})\n\n\n[1] \"Error in coefficient.of.variation color column\"\n&lt;rlang_error in col_numeric(palette = palette, domain = domain): Wasn't able to determine range of `domain`&gt;\n\n\ndisplay with gt\n# 4) Render/display:\ngt_tbl\n\n\n\n\n\n\n\n\nprogram\nMonitoring.Location.ID\nslope\nn_values\nmean\nmin\nmax\ncoefficient.of.variation\nsignificant_slope\npvalue\n\n\n\n\n\n\n\n\n\n\n\nReporting Programs:\n\n\ndisplay reporting programs\nlibrary(ggplot2)\nggplot(df, aes(x = program)) +\n  geom_bar() +\n  labs(title = \"Reporting Programs\", x = \"Program\", y = \"Count\")"
  },
  {
    "objectID": "provider_reports/provider_reports_template.html",
    "href": "provider_reports/provider_reports_template.html",
    "title": "BROWARD Data",
    "section": "",
    "text": "Provider Data Assesment\n\n\nCode\nlibrarian::shelf(\n  dplyr,\n  glue,\n  here,\n  tidyr\n)\n\n\n\n\nread in the WIN txt pipe-delimited file\nsource(here(\"R/getData.R\"))\ndf &lt;- getData(params$org_id)\n\n# Ensure the result value column is numeric (coerce if needed)\ndf$DEP.Result.Value.Number &lt;- as.numeric(df$DEP.Result.Value.Number)\n\n\n\n\nCode\nlibrary(dplyr)\nlibrary(tidyr)\nlibrary(ggplot2)\n\nsource(here::here(\"R/presenceTable.R\"))\n\nheat_long &lt;- getPresenceHeatmapTable(df)\n\n\n\n\nCode\nplotHeatmap(heat_long)\n\n\n\n\n\n\n\n\n\n\n\ncreate map with unique points\n# check for missing lat/lon\nif (all(is.na(df$Org.Decimal.Latitude)) || all(is.na(df$Org.Decimal.Longitude))) {\n  cat(\"Cannot make map: All rows have missing latitude or longitude.\")\n} else {\n  library(leaflet)\n  library(dplyr)\n\n  # 1. Filter out rows & keep only one per unique lat/lon\n  df_unique_locs &lt;- df %&gt;%\n    filter(!is.na(Org.Decimal.Latitude), !is.na(Org.Decimal.Longitude)) %&gt;%\n    distinct(Org.Decimal.Latitude, Org.Decimal.Longitude, .keep_all = TRUE)\n\n  # 2. Plot all unique points (no clustering)\n  leaflet(df_unique_locs) %&gt;%\n    addProviderTiles(providers$OpenStreetMap) %&gt;%\n    addCircleMarkers(\n      lng         = ~Org.Decimal.Longitude,\n      lat         = ~Org.Decimal.Latitude,\n      radius      = 4,\n      color       = \"blue\",\n      fillOpacity = 0.5,\n      popup       = ~paste0(\n        \"Monitoring Location: \", Monitoring.Location.ID\n      )\n      # clusterOptions removed to show every point at all zoom levels\n    )\n}\n\n\n\n\n\n\n\n\nvisualize distribution of points through time\nlibrary(ggplot2)\nlibrary(lubridate)\n\n# Convert Activity.Start.Date.Time to proper datetime if it isn't already\ndf$`Activity.Start.Date.Time` &lt;- as.POSIXct(as.character(df$`Activity.Start.Date.Time`), format = \"%m/%d/%Y %H:%M:%S\")\n\n\n# Create a dataframe with unique sampling events\nsampling_events &lt;- df %&gt;%\n  distinct(`Activity.Start.Date.Time`, Monitoring.Location.ID) %&gt;%\n  arrange(`Activity.Start.Date.Time`)\n\n\n\n\nCreate time distribution plot\nggplot(sampling_events, aes(x = `Activity.Start.Date.Time`)) +\n  geom_histogram(bins = 30, fill = \"steelblue\", color = \"white\", alpha = 0.7) +\n  labs(\n    title = \"Distribution of Sampling Events Over Time\",\n    x = \"Date\",\n    y = \"Number of Sampling Events\"\n  ) +\n  theme_minimal() +\n  theme(\n    axis.text.x = element_text(angle = 45, hjust = 1),\n    panel.grid.minor = element_blank()\n  )\n\n\n\n\n\n\n\n\n\n\n\nCode\n# Create a heatmap of sampling locations over time\n# drop rows with missing dates or IDs\nsampling_events &lt;- sampling_events %&gt;%\n  filter(!is.na(`Activity.Start.Date.Time`), !is.na(Monitoring.Location.ID))\n# if sampling_events is empty, skip this plot\nif (nrow(sampling_events) &gt; 0) {\n  ggplot(sampling_events, \n          aes(x = `Activity.Start.Date.Time`, \n              y = Monitoring.Location.ID)) +\n      geom_point(color = \"steelblue\", alpha = 0.7) +\n      labs(\n        title = \"Sampling Locations Over Time\",\n        x = \"Date\",\n        y = \"Monitoring Location ID\"\n      ) +\n      theme_minimal() +\n      theme(\n        axis.text.x = element_text(angle = 45, hjust = 1),\n        panel.grid.minor = element_blank()\n      )\n} else {\n  print(\"No sampling events with valid dates & IDs\")\n}\n\n\n\n\n\n\n\n\n\n\n\nCode\ndate_range &lt;- range(df$`Activity.Start.Date.Time`, na.rm = TRUE)\n  cat(\"Earliest sampling date: \", format(date_range[1], \"%Y-%m-%d %H:%M:%S\"), \"\\n\")\n\n\nEarliest sampling date:  2017-03-06 08:55:00 \n\n\nCode\n  cat(\"Latest   sampling date: \", format(date_range[2], \"%Y-%m-%d %H:%M:%S\"), \"\\n\")\n\n\nLatest   sampling date:  2024-11-05 11:55:00 \n\n\n\nDownload Data For This Provider"
  },
  {
    "objectID": "provider_reports/provider_reports/PALMBEACH.html",
    "href": "provider_reports/provider_reports/PALMBEACH.html",
    "title": "PALMBEACH Data",
    "section": "",
    "text": "Provider Data Assesment\n\n\nCode\nlibrarian::shelf(\n  dplyr,\n  glue,\n  here,\n  tidyr\n)\n\n\n\n\nread in the WIN txt pipe-delimited file\nsource(here(\"R/getData.R\"))\ndf &lt;- getData(params$org_id)\n\n# Ensure the result value column is numeric (coerce if needed)\ndf$DEP.Result.Value.Number &lt;- as.numeric(df$DEP.Result.Value.Number)\n\n\n\n\nCode\nlibrary(dplyr)\nlibrary(tidyr)\nlibrary(ggplot2)\n\nsource(here::here(\"R/presenceTable.R\"))\n\nheat_long &lt;- getPresenceHeatmapTable(df)\n\n\n\n\nCode\nplotHeatmap(heat_long)\n\n\n\n\n\n\n\n\n\n\n\ncreate map with unique points\n# check for missing lat/lon\nif (all(is.na(df$Org.Decimal.Latitude)) || all(is.na(df$Org.Decimal.Longitude))) {\n  cat(\"Cannot make map: All rows have missing latitude or longitude.\")\n} else {\n  library(leaflet)\n  library(dplyr)\n\n  # 1. Filter out rows & keep only one per unique lat/lon\n  df_unique_locs &lt;- df %&gt;%\n    filter(!is.na(Org.Decimal.Latitude), !is.na(Org.Decimal.Longitude)) %&gt;%\n    distinct(Org.Decimal.Latitude, Org.Decimal.Longitude, .keep_all = TRUE)\n\n  # 2. Plot all unique points (no clustering)\n  leaflet(df_unique_locs) %&gt;%\n    addProviderTiles(providers$OpenStreetMap) %&gt;%\n    addCircleMarkers(\n      lng         = ~Org.Decimal.Longitude,\n      lat         = ~Org.Decimal.Latitude,\n      radius      = 4,\n      color       = \"blue\",\n      fillOpacity = 0.5,\n      popup       = ~paste0(\n        \"Monitoring Location: \", Monitoring.Location.ID\n      )\n      # clusterOptions removed to show every point at all zoom levels\n    )\n}\n\n\n\n\n\n\n\n\nvisualize distribution of points through time\nlibrary(ggplot2)\nlibrary(lubridate)\n\n# Convert Activity.Start.Date.Time to proper datetime if it isn't already\ndf$`Activity.Start.Date.Time` &lt;- as.POSIXct(as.character(df$`Activity.Start.Date.Time`), format = \"%m/%d/%Y %H:%M:%S\")\n\n\n# Create a dataframe with unique sampling events\nsampling_events &lt;- df %&gt;%\n  distinct(`Activity.Start.Date.Time`, Monitoring.Location.ID) %&gt;%\n  arrange(`Activity.Start.Date.Time`)\n\n\n\n\nCreate time distribution plot\nggplot(sampling_events, aes(x = `Activity.Start.Date.Time`)) +\n  geom_histogram(bins = 30, fill = \"steelblue\", color = \"white\", alpha = 0.7) +\n  labs(\n    title = \"Distribution of Sampling Events Over Time\",\n    x = \"Date\",\n    y = \"Number of Sampling Events\"\n  ) +\n  theme_minimal() +\n  theme(\n    axis.text.x = element_text(angle = 45, hjust = 1),\n    panel.grid.minor = element_blank()\n  )\n\n\n\n\n\n\n\n\n\n\n\nCode\n# Create a heatmap of sampling locations over time\n# drop rows with missing dates or IDs\nsampling_events &lt;- sampling_events %&gt;%\n  filter(!is.na(`Activity.Start.Date.Time`), !is.na(Monitoring.Location.ID))\n# if sampling_events is empty, skip this plot\nif (nrow(sampling_events) &gt; 0) {\n  ggplot(sampling_events, \n          aes(x = `Activity.Start.Date.Time`, \n              y = Monitoring.Location.ID)) +\n      geom_point(color = \"steelblue\", alpha = 0.7) +\n      labs(\n        title = \"Sampling Locations Over Time\",\n        x = \"Date\",\n        y = \"Monitoring Location ID\"\n      ) +\n      theme_minimal() +\n      theme(\n        axis.text.x = element_text(angle = 45, hjust = 1),\n        panel.grid.minor = element_blank()\n      )\n} else {\n  print(\"No sampling events with valid dates & IDs\")\n}\n\n\n\n\n\n\n\n\n\n\n\nCode\ndate_range &lt;- range(df$`Activity.Start.Date.Time`, na.rm = TRUE)\n  cat(\"Earliest sampling date: \", format(date_range[1], \"%Y-%m-%d %H:%M:%S\"), \"\\n\")\n\n\nEarliest sampling date:  2018-03-08 10:20:00 \n\n\nCode\n  cat(\"Latest   sampling date: \", format(date_range[2], \"%Y-%m-%d %H:%M:%S\"), \"\\n\")\n\n\nLatest   sampling date:  2025-03-20 12:00:00 \n\n\n\nDownload Data For This Provider"
  },
  {
    "objectID": "provider_reports/provider_reports/FIU_WQMP.html",
    "href": "provider_reports/provider_reports/FIU_WQMP.html",
    "title": "FIU_WQMP Data",
    "section": "",
    "text": "Provider Data Assesment\n\n\nCode\nlibrarian::shelf(\n  dplyr,\n  glue,\n  here,\n  tidyr\n)\n\n\n\n\nread in the WIN txt pipe-delimited file\nsource(here(\"R/getData.R\"))\ndf &lt;- getData(params$org_id)\n\n# Ensure the result value column is numeric (coerce if needed)\ndf$DEP.Result.Value.Number &lt;- as.numeric(df$DEP.Result.Value.Number)\n\n\n\n\nCode\nlibrary(dplyr)\nlibrary(tidyr)\nlibrary(ggplot2)\n\nsource(here::here(\"R/presenceTable.R\"))\n\nheat_long &lt;- getPresenceHeatmapTable(df)\n\n\n\n\nCode\nplotHeatmap(heat_long)\n\n\n\n\n\n\n\n\n\n\n\ncreate map with unique points\n# check for missing lat/lon\nif (all(is.na(df$Org.Decimal.Latitude)) || all(is.na(df$Org.Decimal.Longitude))) {\n  cat(\"Cannot make map: All rows have missing latitude or longitude.\")\n} else {\n  library(leaflet)\n  library(dplyr)\n\n  # 1. Filter out rows & keep only one per unique lat/lon\n  df_unique_locs &lt;- df %&gt;%\n    filter(!is.na(Org.Decimal.Latitude), !is.na(Org.Decimal.Longitude)) %&gt;%\n    distinct(Org.Decimal.Latitude, Org.Decimal.Longitude, .keep_all = TRUE)\n\n  # 2. Plot all unique points (no clustering)\n  leaflet(df_unique_locs) %&gt;%\n    addProviderTiles(providers$OpenStreetMap) %&gt;%\n    addCircleMarkers(\n      lng         = ~Org.Decimal.Longitude,\n      lat         = ~Org.Decimal.Latitude,\n      radius      = 4,\n      color       = \"blue\",\n      fillOpacity = 0.5,\n      popup       = ~paste0(\n        \"Monitoring Location: \", Monitoring.Location.ID\n      )\n      # clusterOptions removed to show every point at all zoom levels\n    )\n}\n\n\n\n\n\n\n\n\nvisualize distribution of points through time\nlibrary(ggplot2)\nlibrary(lubridate)\n\n# Convert Activity.Start.Date.Time to proper datetime if it isn't already\ndf$`Activity.Start.Date.Time` &lt;- as.POSIXct(as.character(df$`Activity.Start.Date.Time`), format = \"%m/%d/%Y %H:%M:%S\")\n\n\n# Create a dataframe with unique sampling events\nsampling_events &lt;- df %&gt;%\n  distinct(`Activity.Start.Date.Time`, Monitoring.Location.ID) %&gt;%\n  arrange(`Activity.Start.Date.Time`)\n\n\n\n\nCreate time distribution plot\nggplot(sampling_events, aes(x = `Activity.Start.Date.Time`)) +\n  geom_histogram(bins = 30, fill = \"steelblue\", color = \"white\", alpha = 0.7) +\n  labs(\n    title = \"Distribution of Sampling Events Over Time\",\n    x = \"Date\",\n    y = \"Number of Sampling Events\"\n  ) +\n  theme_minimal() +\n  theme(\n    axis.text.x = element_text(angle = 45, hjust = 1),\n    panel.grid.minor = element_blank()\n  )\n\n\n\n\n\n\n\n\n\n\n\nCode\n# Create a heatmap of sampling locations over time\n# drop rows with missing dates or IDs\nsampling_events &lt;- sampling_events %&gt;%\n  filter(!is.na(`Activity.Start.Date.Time`), !is.na(Monitoring.Location.ID))\n# if sampling_events is empty, skip this plot\nif (nrow(sampling_events) &gt; 0) {\n  ggplot(sampling_events, \n          aes(x = `Activity.Start.Date.Time`, \n              y = Monitoring.Location.ID)) +\n      geom_point(color = \"steelblue\", alpha = 0.7) +\n      labs(\n        title = \"Sampling Locations Over Time\",\n        x = \"Date\",\n        y = \"Monitoring Location ID\"\n      ) +\n      theme_minimal() +\n      theme(\n        axis.text.x = element_text(angle = 45, hjust = 1),\n        panel.grid.minor = element_blank()\n      )\n} else {\n  print(\"No sampling events with valid dates & IDs\")\n}\n\n\n\n\n\n\n\n\n\n\n\nCode\ndate_range &lt;- range(df$`Activity.Start.Date.Time`, na.rm = TRUE)\n  cat(\"Earliest sampling date: \", format(date_range[1], \"%Y-%m-%d %H:%M:%S\"), \"\\n\")\n\n\nEarliest sampling date:  2014-02-04 10:55:00 \n\n\nCode\n  cat(\"Latest   sampling date: \", format(date_range[2], \"%Y-%m-%d %H:%M:%S\"), \"\\n\")\n\n\nLatest   sampling date:  2023-06-19 16:37:00 \n\n\n\nDownload Data For This Provider"
  },
  {
    "objectID": "provider_reports/provider_reports/DEP.html",
    "href": "provider_reports/provider_reports/DEP.html",
    "title": "DEP Data",
    "section": "",
    "text": "Provider Data Assesment\n\n\nCode\nlibrarian::shelf(\n  dplyr,\n  glue,\n  here,\n  tidyr\n)\n\n\n\n\nread in the WIN txt pipe-delimited file\nsource(here(\"R/getData.R\"))\ndf &lt;- getData(params$org_id)\n\n# Ensure the result value column is numeric (coerce if needed)\ndf$DEP.Result.Value.Number &lt;- as.numeric(df$DEP.Result.Value.Number)\n\n\n\n\nCode\nlibrary(dplyr)\nlibrary(tidyr)\nlibrary(ggplot2)\n\nsource(here::here(\"R/presenceTable.R\"))\n\nheat_long &lt;- getPresenceHeatmapTable(df)\n\n\n\n\nCode\nplotHeatmap(heat_long)\n\n\n\n\n\n\n\n\n\n\n\ncreate map with unique points\n# check for missing lat/lon\nif (all(is.na(df$Org.Decimal.Latitude)) || all(is.na(df$Org.Decimal.Longitude))) {\n  cat(\"Cannot make map: All rows have missing latitude or longitude.\")\n} else {\n  library(leaflet)\n  library(dplyr)\n\n  # 1. Filter out rows & keep only one per unique lat/lon\n  df_unique_locs &lt;- df %&gt;%\n    filter(!is.na(Org.Decimal.Latitude), !is.na(Org.Decimal.Longitude)) %&gt;%\n    distinct(Org.Decimal.Latitude, Org.Decimal.Longitude, .keep_all = TRUE)\n\n  # 2. Plot all unique points (no clustering)\n  leaflet(df_unique_locs) %&gt;%\n    addProviderTiles(providers$OpenStreetMap) %&gt;%\n    addCircleMarkers(\n      lng         = ~Org.Decimal.Longitude,\n      lat         = ~Org.Decimal.Latitude,\n      radius      = 4,\n      color       = \"blue\",\n      fillOpacity = 0.5,\n      popup       = ~paste0(\n        \"Monitoring Location: \", Monitoring.Location.ID\n      )\n      # clusterOptions removed to show every point at all zoom levels\n    )\n}\n\n\n\n\n\n\n\n\nvisualize distribution of points through time\nlibrary(ggplot2)\nlibrary(lubridate)\n\n# Convert Activity.Start.Date.Time to proper datetime if it isn't already\ndf$`Activity.Start.Date.Time` &lt;- as.POSIXct(as.character(df$`Activity.Start.Date.Time`), format = \"%m/%d/%Y %H:%M:%S\")\n\n\n# Create a dataframe with unique sampling events\nsampling_events &lt;- df %&gt;%\n  distinct(`Activity.Start.Date.Time`, Monitoring.Location.ID) %&gt;%\n  arrange(`Activity.Start.Date.Time`)\n\n\n\n\nCreate time distribution plot\nggplot(sampling_events, aes(x = `Activity.Start.Date.Time`)) +\n  geom_histogram(bins = 30, fill = \"steelblue\", color = \"white\", alpha = 0.7) +\n  labs(\n    title = \"Distribution of Sampling Events Over Time\",\n    x = \"Date\",\n    y = \"Number of Sampling Events\"\n  ) +\n  theme_minimal() +\n  theme(\n    axis.text.x = element_text(angle = 45, hjust = 1),\n    panel.grid.minor = element_blank()\n  )\n\n\n\n\n\n\n\n\n\n\n\nCode\n# Create a heatmap of sampling locations over time\n# drop rows with missing dates or IDs\nsampling_events &lt;- sampling_events %&gt;%\n  filter(!is.na(`Activity.Start.Date.Time`), !is.na(Monitoring.Location.ID))\n# if sampling_events is empty, skip this plot\nif (nrow(sampling_events) &gt; 0) {\n  ggplot(sampling_events, \n          aes(x = `Activity.Start.Date.Time`, \n              y = Monitoring.Location.ID)) +\n      geom_point(color = \"steelblue\", alpha = 0.7) +\n      labs(\n        title = \"Sampling Locations Over Time\",\n        x = \"Date\",\n        y = \"Monitoring Location ID\"\n      ) +\n      theme_minimal() +\n      theme(\n        axis.text.x = element_text(angle = 45, hjust = 1),\n        panel.grid.minor = element_blank()\n      )\n} else {\n  print(\"No sampling events with valid dates & IDs\")\n}\n\n\n\n\n\n\n\n\n\n\n\nCode\ndate_range &lt;- range(df$`Activity.Start.Date.Time`, na.rm = TRUE)\n  cat(\"Earliest sampling date: \", format(date_range[1], \"%Y-%m-%d %H:%M:%S\"), \"\\n\")\n\n\nEarliest sampling date:  2017-09-20 12:30:00 \n\n\nCode\n  cat(\"Latest   sampling date: \", format(date_range[2], \"%Y-%m-%d %H:%M:%S\"), \"\\n\")\n\n\nLatest   sampling date:  2024-12-19 15:00:00 \n\n\n\nDownload Data For This Provider"
  },
  {
    "objectID": "provider_reports/provider_reports/BBAP.html",
    "href": "provider_reports/provider_reports/BBAP.html",
    "title": "BBAP Data",
    "section": "",
    "text": "Provider Data Assesment\n\n\nCode\nlibrarian::shelf(\n  dplyr,\n  glue,\n  here,\n  tidyr\n)\n\n\n\n\nread in the WIN txt pipe-delimited file\nsource(here(\"R/getData.R\"))\ndf &lt;- getData(params$org_id)\n\n# Ensure the result value column is numeric (coerce if needed)\ndf$DEP.Result.Value.Number &lt;- as.numeric(df$DEP.Result.Value.Number)\n\n\n\n\nCode\nlibrary(dplyr)\nlibrary(tidyr)\nlibrary(ggplot2)\n\nsource(here::here(\"R/presenceTable.R\"))\n\nheat_long &lt;- getPresenceHeatmapTable(df)\n\n\n\n\nCode\nplotHeatmap(heat_long)\n\n\n\n\n\n\n\n\n\n\n\ncreate map with unique points\n# check for missing lat/lon\nif (all(is.na(df$Org.Decimal.Latitude)) || all(is.na(df$Org.Decimal.Longitude))) {\n  cat(\"Cannot make map: All rows have missing latitude or longitude.\")\n} else {\n  library(leaflet)\n  library(dplyr)\n\n  # 1. Filter out rows & keep only one per unique lat/lon\n  df_unique_locs &lt;- df %&gt;%\n    filter(!is.na(Org.Decimal.Latitude), !is.na(Org.Decimal.Longitude)) %&gt;%\n    distinct(Org.Decimal.Latitude, Org.Decimal.Longitude, .keep_all = TRUE)\n\n  # 2. Plot all unique points (no clustering)\n  leaflet(df_unique_locs) %&gt;%\n    addProviderTiles(providers$OpenStreetMap) %&gt;%\n    addCircleMarkers(\n      lng         = ~Org.Decimal.Longitude,\n      lat         = ~Org.Decimal.Latitude,\n      radius      = 4,\n      color       = \"blue\",\n      fillOpacity = 0.5,\n      popup       = ~paste0(\n        \"Monitoring Location: \", Monitoring.Location.ID\n      )\n      # clusterOptions removed to show every point at all zoom levels\n    )\n}\n\n\n\n\n\n\n\n\nvisualize distribution of points through time\nlibrary(ggplot2)\nlibrary(lubridate)\n\n# Convert Activity.Start.Date.Time to proper datetime if it isn't already\ndf$`Activity.Start.Date.Time` &lt;- as.POSIXct(as.character(df$`Activity.Start.Date.Time`), format = \"%m/%d/%Y %H:%M:%S\")\n\n\n# Create a dataframe with unique sampling events\nsampling_events &lt;- df %&gt;%\n  distinct(`Activity.Start.Date.Time`, Monitoring.Location.ID) %&gt;%\n  arrange(`Activity.Start.Date.Time`)\n\n\n\n\nCreate time distribution plot\nggplot(sampling_events, aes(x = `Activity.Start.Date.Time`)) +\n  geom_histogram(bins = 30, fill = \"steelblue\", color = \"white\", alpha = 0.7) +\n  labs(\n    title = \"Distribution of Sampling Events Over Time\",\n    x = \"Date\",\n    y = \"Number of Sampling Events\"\n  ) +\n  theme_minimal() +\n  theme(\n    axis.text.x = element_text(angle = 45, hjust = 1),\n    panel.grid.minor = element_blank()\n  )\n\n\n\n\n\n\n\n\n\n\n\nCode\n# Create a heatmap of sampling locations over time\n# drop rows with missing dates or IDs\nsampling_events &lt;- sampling_events %&gt;%\n  filter(!is.na(`Activity.Start.Date.Time`), !is.na(Monitoring.Location.ID))\n# if sampling_events is empty, skip this plot\nif (nrow(sampling_events) &gt; 0) {\n  ggplot(sampling_events, \n          aes(x = `Activity.Start.Date.Time`, \n              y = Monitoring.Location.ID)) +\n      geom_point(color = \"steelblue\", alpha = 0.7) +\n      labs(\n        title = \"Sampling Locations Over Time\",\n        x = \"Date\",\n        y = \"Monitoring Location ID\"\n      ) +\n      theme_minimal() +\n      theme(\n        axis.text.x = element_text(angle = 45, hjust = 1),\n        panel.grid.minor = element_blank()\n      )\n} else {\n  print(\"No sampling events with valid dates & IDs\")\n}\n\n\n\n\n\n\n\n\n\n\n\nCode\ndate_range &lt;- range(df$`Activity.Start.Date.Time`, na.rm = TRUE)\n  cat(\"Earliest sampling date: \", format(date_range[1], \"%Y-%m-%d %H:%M:%S\"), \"\\n\")\n\n\nEarliest sampling date:  2019-02-14 12:30:00 \n\n\nCode\n  cat(\"Latest   sampling date: \", format(date_range[2], \"%Y-%m-%d %H:%M:%S\"), \"\\n\")\n\n\nLatest   sampling date:  2025-02-25 12:45:00 \n\n\n\nDownload Data For This Provider"
  },
  {
    "objectID": "provider_reports/provider_reports.html",
    "href": "provider_reports/provider_reports.html",
    "title": "Provider Reports",
    "section": "",
    "text": "BBAP Data\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nBROWARD Data\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nDEP Data\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nDERM_BBWQ Data\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nFIU_WQMP Data\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nMiamiBeach Data\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nPALMBEACH Data\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nSFER Data\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "analyte_reports/analyte_reports.html",
    "href": "analyte_reports/analyte_reports.html",
    "title": "Analyte Reports",
    "section": "",
    "text": "Ammonia Report\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nAmmonia_plus_Ammonium Report\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nAmmonium Report\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nChlorophyll_a Report\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nDissolved_Oxygen Report\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nEnterococci Report\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nFecal_Coliforms Report\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nNitrate Report\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nNitrate+Nitrite Report\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nNitrite Report\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nOrthophosphate Report\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nPheophytin Report\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nPhosphorus Report\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nSalinity Report\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nSilicate Report\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nSpecific_Conductivity Report\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nTemperature Report\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nTotal_Kjeldahl_Nitrogen Report\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nTotal_Nitrogen Report\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nTurbidity Report\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\npH Report\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Florida’s Coral Reef Water Quality Data Compilation (FCRWQDC)",
    "section": "",
    "text": "Data ingestion and initial analysis from FL WIN water quality database and other sources. Below are some statistics on data across all analytes and programs. For more information on specific analytes and providers, see the analyte reports and provider reports.\nData for each analyte can be downloaded from the relevant analyte report. The full compiled data can be downloaded from the University of South Florida here\nFlorida Coral Reef Water Quality Database Compilation (FCRWQDC). This work is a product of the University of South Florida Institute for Marine Remote Sensing (IMaRS), funded by the Florida Department of Environmental Protection (FDEP).\n\n\nget data across all programs\nlibrary(\"here\")\nsource(here(\"R/getAllData.R\"))\ndf &lt;- getAllData()\n\n\n\n\ncreate .csv of all data\n# reduce to only cols we need & save to csv\ndf %&gt;%\n  mutate(\n    source = program,\n    site = Monitoring.Location.ID,\n    datetime = Activity.Start.Date.Time,\n    analyte = DEP.Analyte.Name,\n    value = DEP.Result.Value.Number,\n    units = DEP.Result.Unit,\n    latitude = Org.Decimal.Latitude,\n    longitude = Org.Decimal.Longitude,\n    sample_depth = Activity.Depth,\n    .keep = \"none\") %&gt;%\n  write.csv(here(\"data\", \"exports\", \"allData.csv\"))\n\n\n\nList of Analytes:\n\n\nlist all analytes\nprint(unique(df$DEP.Analyte.Name))\n\n\n [1] \"Temperature\"                                 \n [2] \"Salinity\"                                    \n [3] \"Ammonium\"                                    \n [4] \"Nitrite\"                                     \n [5] \"Nitrate\"                                     \n [6] \"Nitrate+Nitrite\"                             \n [7] \"Orthophosphate\"                              \n [8] \"Silicate\"                                    \n [9] \"Chlorophyll a\"                               \n[10] \"Pheophytin\"                                  \n[11] \"Dissolved Oxygen (Discrete)\"                 \n[12] \"Dissolved Oxygen (CTD)\"                      \n[13] \"Dissolved Oxygen\"                            \n[14] \"Water Temperature\"                           \n[15] \"pH\"                                          \n[16] \"Specific Conductivity\"                       \n[17] \"Turbidity\"                                   \n[18] \"Total Kjeldahl Nitrogen\"                     \n[19] \"NO2+3, Filtered\"                             \n[20] \"Total Phosphorus\"                            \n[21] \"Total Nitrogen\"                              \n[22] \"Fecal Coliforms\"                             \n[23] \"Enterococci\"                                 \n[24] \"Field pH\"                                    \n[25] \"Field Temperature\"                           \n[26] \"Field Specific Conductance\"                  \n[27] \"Oxygen, Dissolved\"                           \n[28] \"Nitrogen, Ammonia\"                           \n[29] \"Nitrogen, Kjeldahl, Total\"                   \n[30] \"Nitrogen, NO2 plus NO3\"                      \n[31] \"Phosphorus, Total (as P) LL\"                 \n[32] \"Ammonia (N)\"                                 \n[33] \"Temperature, Water\"                          \n[34] \"Nitrogen- Total Kjeldahl\"                    \n[35] \"Nitrate-Nitrite (N)\"                         \n[36] \"Phosphorus- Total\"                           \n[37] \"Chlorophyll a, free of pheophytin\"           \n[38] \"Orthophosphate (P)\"                          \n[39] \"Chlorophyll a- corrected\"                    \n[40] \"Chlorophyll a, corrected for pheophytin\"     \n[41] \"Dissolved oxygen (DO)\"                       \n[42] \"Phosphorus, orthophosphate as P\"             \n[43] \"Temperature, water\"                          \n[44] \"Nitrogen, Kjeldahl\"                          \n[45] \"Nitrogen, Nitrite (NO2) + Nitrate (NO3) as N\"\n[46] \"Nitrogen, ammonia (NH3) + ammonium (NH4)\"    \n[47] \"Phosphorus as P\"                             \n[48] \"Nitrite (N)\"                                 \n[49] \"Nitrogen- Total\"                             \n[50] \"Silica (SiO2)\"                               \n[51] \"Chlorophyll a- uncorrected\"                  \n[52] \"Nitrate (N)\"                                 \n[53] \"Nitrogen, ammonia as N\"                      \n[54] \"Nitrogen, Nitrate (NO3) as N\"                \n[55] \"Nitrogen, Nitrite (NO2) as N\"                \n[56] \"Nitrogen, ammonia (NH3) as NH3\"              \n[57] \"Nitrogen, Nitrate (NO3) as NO3\"              \n[58] \"Nitrogen, Nitrite (NO2) as NO2\"              \n[59] \"Chlorophyll a, uncorrected for pheophytin\"   \n\n\n\n\nOverall statistics:\n\n\nskimr on all data\nlibrary(skimr)\nskim(df)\n\n\n\nData summary\n\n\nName\ndf\n\n\nNumber of rows\n429787\n\n\nNumber of columns\n91\n\n\n_______________________\n\n\n\nColumn type frequency:\n\n\n\ncharacter\n63\n\n\nlogical\n3\n\n\nnumeric\n25\n\n\n________________________\n\n\n\nGroup variables\nNone\n\n\n\nVariable type: character\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmin\nmax\nempty\nn_unique\nwhitespace\n\n\n\n\nDEP.Result.ID\n76427\n0.82\n7\n43\n0\n300741\n0\n\n\nActivity.ID\n76427\n0.82\n7\n29\n0\n74419\n0\n\n\ntime\n371347\n0.14\n5\n5\n0\n1421\n0\n\n\nActivity.Start.Date.Time\n63\n1.00\n12\n19\n0\n44013\n0\n\n\nMonitoring.Location.ID\n0\n1.00\n1\n14\n0\n699\n0\n\n\nActivity.Type\n76427\n0.82\n1\n15\n0\n5\n0\n\n\nActivity.Depth.Unit\n76427\n0.82\n1\n7\n0\n4\n0\n\n\nActivity.Depth.Top.Bottom.Unit\n371347\n0.14\n4\n4\n0\n2\n0\n\n\nSample.Collection.Type\n76427\n0.82\n1\n22\n0\n6\n0\n\n\nValue.Qualifier\n123883\n0.71\n0\n5\n175856\n115\n0\n\n\nResult.Comments\n134824\n0.69\n0\n874\n260783\n833\n0\n\n\nDEP.Analyte.Name\n0\n1.00\n2\n44\n0\n59\n0\n\n\nDEP.Result.Unit\n0\n1.00\n0\n10\n5173\n20\n0\n\n\noriginal.analyte.name\n0\n1.00\n2\n44\n0\n59\n0\n\n\nprogram\n0\n1.00\n3\n10\n0\n8\n0\n\n\nProgramName\n406746\n0.05\n36\n36\n0\n1\n0\n\n\nHabitat\n406746\n0.05\n12\n12\n0\n1\n0\n\n\nIndicatorName\n406746\n0.05\n9\n13\n0\n3\n0\n\n\nParameterName\n406746\n0.05\n2\n23\n0\n10\n0\n\n\nParameterUnits\n406746\n0.05\n3\n9\n0\n6\n0\n\n\nProgramLocationID\n406746\n0.05\n1\n2\n0\n55\n0\n\n\nManagedAreaName\n406746\n0.05\n29\n29\n0\n1\n0\n\n\nRegion\n406746\n0.05\n2\n2\n0\n1\n0\n\n\nActivityType\n406746\n0.05\n5\n6\n0\n2\n0\n\n\nSampleDate\n406746\n0.05\n23\n23\n0\n2134\n0\n\n\nActivityDepth_m\n406746\n0.05\n4\n4\n0\n1\n0\n\n\nRelativeDepth\n406746\n0.05\n7\n7\n0\n1\n0\n\n\nTotalDepth_m\n406746\n0.05\n4\n4\n0\n1\n0\n\n\nMDL\n406746\n0.05\n4\n4\n0\n1\n0\n\n\nPQL\n406746\n0.05\n4\n4\n0\n1\n0\n\n\nDetectionUnit\n406746\n0.05\n4\n4\n0\n2\n0\n\n\nValueQualifier\n406746\n0.05\n4\n4\n0\n1\n0\n\n\nValueQualifierSource\n406746\n0.05\n4\n4\n0\n1\n0\n\n\nSampleFraction\n406746\n0.05\n4\n4\n0\n1\n0\n\n\nResultComments\n406746\n0.05\n4\n21\n0\n2\n0\n\n\nSEACAR_QAQCFlagCode\n406746\n0.05\n6\n13\n0\n23\n0\n\n\nSEACAR_QAQC_Description\n406746\n0.05\n98\n195\n0\n23\n0\n\n\nSEACAR_EventID\n406746\n0.05\n36\n36\n0\n2394\n0\n\n\nExportVersion\n406746\n0.05\n23\n23\n0\n2\n0\n\n\ndata_source\n400821\n0.07\n5\n10\n0\n2\n0\n\n\nCLIENT SAMPLE ID\n423862\n0.01\n1\n3\n0\n70\n0\n\n\nLAB SAMPLE ID\n423862\n0.01\n11\n11\n0\n494\n0\n\n\nMATRIX\n423862\n0.01\n5\n5\n0\n1\n0\n\n\nCOLLECTED\n423862\n0.01\n10\n10\n0\n23\n0\n\n\nANALYTE\n423862\n0.01\n8\n27\n0\n12\n0\n\n\nSAMPLE RESULT\n424832\n0.01\n3\n9\n0\n1545\n0\n\n\nREPORTING LIMIT\n426330\n0.01\n1\n6\n0\n10\n0\n\n\nUNITS\n423862\n0.01\n3\n10\n0\n8\n0\n\n\nMETHOD\n423862\n0.01\n10\n29\n0\n8\n0\n\n\nDILUTION\n423862\n0.01\n1\n2\n0\n5\n0\n\n\nANALYZED\n423862\n0.01\n10\n10\n0\n123\n0\n\n\nPREPARED\n423862\n0.01\n10\n10\n0\n127\n0\n\n\nsource_file\n423862\n0.01\n19\n22\n0\n23\n0\n\n\nSAMPLE COLLECTION DATE\n423862\n0.01\n9\n10\n0\n23\n0\n\n\nOrganization.ID\n87406\n0.80\n7\n9\n0\n8\n0\n\n\nOrg.Latitude..DD.MM.SS.SSSS.\n336469\n0.22\n0\n11\n83882\n22\n0\n\n\nOrg.Longitude..DD.MM.SS.SSSS.\n336469\n0.22\n0\n12\n83882\n22\n0\n\n\nWBID\n134867\n0.69\n0\n6\n14084\n115\n0\n\n\nMatrix\n134867\n0.69\n21\n21\n0\n1\n0\n\n\nSampling.Agency.Name\n87406\n0.80\n7\n58\n0\n8\n0\n\n\nDEP.Result.Value.Text\n237296\n0.45\n0\n12\n192318\n2\n0\n\n\nSample.Fraction\n134867\n0.69\n0\n9\n129643\n3\n0\n\n\nLab.ID\n134867\n0.69\n0\n6\n102313\n10\n0\n\n\n\nVariable type: logical\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmean\ncount\n\n\n\n\nActivity.Top.Depth\n429787\n0\nNaN\n:\n\n\nActivity.Bottom.Depth\n429787\n0\nNaN\n:\n\n\nAudit.Censored.Decisions\n429787\n0\nNaN\n:\n\n\n\nVariable type: numeric\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmean\nsd\np0\np25\np50\np75\np100\nhist\n\n\n\n\nyear\n371347\n0.14\n2020.14\n2.99\n2014.00\n2018.00\n2021.00\n2023.00\n2024.00\n▅▅▅▇▇\n\n\nmonth\n371347\n0.14\n6.60\n3.56\n1.00\n3.00\n7.00\n10.00\n12.00\n▇▅▅▅▇\n\n\nday\n371347\n0.14\n14.53\n8.56\n1.00\n7.00\n14.00\n22.00\n31.00\n▇▆▆▆▃\n\n\nlat_deg\n371347\n0.14\n25.10\n0.99\n24.00\n24.00\n25.00\n25.00\n28.00\n▅▇▂▂▁\n\n\nlat_min\n371347\n0.14\n30.31\n15.93\n0.03\n20.42\n33.09\n42.61\n59.83\n▆▅▇▇▅\n\n\nOrg.Decimal.Latitude\n53386\n0.88\n25.78\n0.65\n24.40\n25.46\n25.79\n26.09\n28.78\n▂▇▂▁▁\n\n\nlon_deg\n371347\n0.14\n-81.14\n0.82\n-85.00\n-82.00\n-81.00\n-81.00\n-80.00\n▁▁▃▇▃\n\n\nlon_min\n371347\n0.14\n26.48\n17.05\n0.00\n12.17\n22.69\n42.98\n60.00\n▇▇▅▃▅\n\n\nOrg.Decimal.Longitude\n53386\n0.88\n-80.51\n0.69\n-85.02\n-80.45\n-80.21\n-80.12\n-79.29\n▁▁▁▂▇\n\n\nActivity.Depth\n28966\n0.93\n0.41\n0.23\n0.00\n0.12\n0.50\n0.50\n1.00\n▃▁▇▂▁\n\n\nDEP.Result.Value.Number\n6782\n0.98\n22.82\n778.59\n-0.03\n0.02\n0.31\n6.98\n53465.00\n▇▁▁▁▁\n\n\nRowID\n406746\n0.05\n1009723.34\n798651.12\n486217.00\n514368.00\n534968.00\n1551534.00\n3870318.00\n▇▂▁▁▁\n\n\nProgramID\n406746\n0.05\n4058.00\n0.00\n4058.00\n4058.00\n4058.00\n4058.00\n4058.00\n▁▁▇▁▁\n\n\nIndicatorID\n406746\n0.05\n6.72\n0.64\n6.00\n6.00\n7.00\n7.00\n8.00\n▆▁▇▁▂\n\n\nParameterID\n406746\n0.05\n8.84\n6.57\n1.00\n3.00\n6.00\n16.00\n19.00\n▇▅▁▂▆\n\n\nAreaID\n406746\n0.05\n6.00\n0.00\n6.00\n6.00\n6.00\n6.00\n6.00\n▁▁▇▁▁\n\n\nResultValue\n406746\n0.05\n12.86\n41.22\n0.00\n0.29\n4.89\n24.47\n5389.00\n▇▁▁▁▁\n\n\nYear\n406746\n0.05\n2019.17\n2.12\n2016.00\n2017.00\n2019.00\n2021.00\n2023.00\n▇▆▇▃▅\n\n\nMonth\n406746\n0.05\n6.55\n3.44\n1.00\n3.00\n7.00\n9.00\n12.00\n▇▅▅▆▇\n\n\nOriginalLatitude\n406746\n0.05\n25.80\n0.02\n25.77\n25.78\n25.79\n25.81\n25.87\n▆▇▂▁▂\n\n\nOriginalLongitude\n406746\n0.05\n-80.15\n0.01\n-80.17\n-80.16\n-80.15\n-80.13\n-80.12\n▇▆▅▅▇\n\n\nInclude\n406746\n0.05\n1.00\n0.04\n0.00\n1.00\n1.00\n1.00\n1.00\n▁▁▁▁▇\n\n\nMADup\n406746\n0.05\n1.00\n0.00\n1.00\n1.00\n1.00\n1.00\n1.00\n▁▁▇▁▁\n\n\nDEP.MDL\n237156\n0.45\n0.05\n0.49\n0.00\n0.00\n0.01\n0.06\n50.50\n▇▁▁▁▁\n\n\nDEP.PQL\n237156\n0.45\n0.15\n2.38\n0.00\n0.01\n0.03\n0.10\n250.00\n▇▁▁▁▁\n\n\n\n\n\n\n\nCreate artistic data image\nlibrary(dplyr)\nlibrary(reshape2)  # for melt()\nlibrary(ggplot2)\nlibrary(viridis)\nlibrary(RColorBrewer)# for scale_fill_distiller()\n\n# 1. Extract & drop NA\nvals_raw &lt;- df$DEP.Result.Value.Number\nvals_raw &lt;- vals_raw[!is.na(vals_raw)]\n\n# 2. Log-transform\nv1 &lt;- log10(vals_raw + 1)\n\n# 3. Percentile of the log-values\npct1 &lt;- ecdf(v1)(v1)\n\n# 4. Grid dims\nN    &lt;- length(pct1)\nncol &lt;- ceiling(sqrt(N))\nnrow &lt;- ceiling(N / ncol)\n\n# 5. Pad\npad_len &lt;- (nrow * ncol) - N\np1_pad  &lt;- c(pct1, rep(NA, pad_len))\n\n# 6. Matrix & melt\nmat_p1 &lt;- matrix(p1_pad, nrow = nrow, ncol = ncol, byrow = TRUE)\nmat_long_p1 &lt;- melt(mat_p1, varnames = c(\"row\",\"col\"), value.name = \"pct_log\")\n\n# 7. Plot\nggplot(mat_long_p1, aes(x = col, y = row, fill = pct_log)) +\n  geom_tile(color = NA) +\n  scale_fill_distiller(\n    palette   = \"Spectral\",  # try \"RdYlBu\", \"PuOr\", \"BrBG\", etc.\n    direction = 1,           # reverse=FALSE so low values start at red-ish end\n    na.value  = \"grey90\",    # color for the padded NA cells\n    guide     = \"none\"       # hide the legend; remove if you want a colorbar\n  ) +\n  scale_y_reverse() +\n  theme_void() +\n  theme(legend.position = \"none\")\n\n\n\n\n\n\n\n\n\n\nIf you have visualization ideas for this data, please open a github issue here."
  },
  {
    "objectID": "provider_reports/provider_reports/BROWARD.html",
    "href": "provider_reports/provider_reports/BROWARD.html",
    "title": "BROWARD Data",
    "section": "",
    "text": "Provider Data Assesment\n\n\nCode\nlibrarian::shelf(\n  dplyr,\n  glue,\n  here,\n  tidyr\n)\n\n\n\n\nread in the WIN txt pipe-delimited file\nsource(here(\"R/getData.R\"))\ndf &lt;- getData(params$org_id)\n\n# Ensure the result value column is numeric (coerce if needed)\ndf$DEP.Result.Value.Number &lt;- as.numeric(df$DEP.Result.Value.Number)\n\n\n\n\nCode\nlibrary(dplyr)\nlibrary(tidyr)\nlibrary(ggplot2)\n\nsource(here::here(\"R/presenceTable.R\"))\n\nheat_long &lt;- getPresenceHeatmapTable(df)\n\n\n\n\nCode\nplotHeatmap(heat_long)\n\n\n\n\n\n\n\n\n\n\n\ncreate map with unique points\n# check for missing lat/lon\nif (all(is.na(df$Org.Decimal.Latitude)) || all(is.na(df$Org.Decimal.Longitude))) {\n  cat(\"Cannot make map: All rows have missing latitude or longitude.\")\n} else {\n  library(leaflet)\n  library(dplyr)\n\n  # 1. Filter out rows & keep only one per unique lat/lon\n  df_unique_locs &lt;- df %&gt;%\n    filter(!is.na(Org.Decimal.Latitude), !is.na(Org.Decimal.Longitude)) %&gt;%\n    distinct(Org.Decimal.Latitude, Org.Decimal.Longitude, .keep_all = TRUE)\n\n  # 2. Plot all unique points (no clustering)\n  leaflet(df_unique_locs) %&gt;%\n    addProviderTiles(providers$OpenStreetMap) %&gt;%\n    addCircleMarkers(\n      lng         = ~Org.Decimal.Longitude,\n      lat         = ~Org.Decimal.Latitude,\n      radius      = 4,\n      color       = \"blue\",\n      fillOpacity = 0.5,\n      popup       = ~paste0(\n        \"Monitoring Location: \", Monitoring.Location.ID\n      )\n      # clusterOptions removed to show every point at all zoom levels\n    )\n}\n\n\n\n\n\n\n\n\nvisualize distribution of points through time\nlibrary(ggplot2)\nlibrary(lubridate)\n\n# Convert Activity.Start.Date.Time to proper datetime if it isn't already\ndf$`Activity.Start.Date.Time` &lt;- as.POSIXct(as.character(df$`Activity.Start.Date.Time`), format = \"%m/%d/%Y %H:%M:%S\")\n\n\n# Create a dataframe with unique sampling events\nsampling_events &lt;- df %&gt;%\n  distinct(`Activity.Start.Date.Time`, Monitoring.Location.ID) %&gt;%\n  arrange(`Activity.Start.Date.Time`)\n\n\n\n\nCreate time distribution plot\nggplot(sampling_events, aes(x = `Activity.Start.Date.Time`)) +\n  geom_histogram(bins = 30, fill = \"steelblue\", color = \"white\", alpha = 0.7) +\n  labs(\n    title = \"Distribution of Sampling Events Over Time\",\n    x = \"Date\",\n    y = \"Number of Sampling Events\"\n  ) +\n  theme_minimal() +\n  theme(\n    axis.text.x = element_text(angle = 45, hjust = 1),\n    panel.grid.minor = element_blank()\n  )\n\n\n\n\n\n\n\n\n\n\n\nCode\n# Create a heatmap of sampling locations over time\n# drop rows with missing dates or IDs\nsampling_events &lt;- sampling_events %&gt;%\n  filter(!is.na(`Activity.Start.Date.Time`), !is.na(Monitoring.Location.ID))\n# if sampling_events is empty, skip this plot\nif (nrow(sampling_events) &gt; 0) {\n  ggplot(sampling_events, \n          aes(x = `Activity.Start.Date.Time`, \n              y = Monitoring.Location.ID)) +\n      geom_point(color = \"steelblue\", alpha = 0.7) +\n      labs(\n        title = \"Sampling Locations Over Time\",\n        x = \"Date\",\n        y = \"Monitoring Location ID\"\n      ) +\n      theme_minimal() +\n      theme(\n        axis.text.x = element_text(angle = 45, hjust = 1),\n        panel.grid.minor = element_blank()\n      )\n} else {\n  print(\"No sampling events with valid dates & IDs\")\n}\n\n\n\n\n\n\n\n\n\n\n\nCode\ndate_range &lt;- range(df$`Activity.Start.Date.Time`, na.rm = TRUE)\n  cat(\"Earliest sampling date: \", format(date_range[1], \"%Y-%m-%d %H:%M:%S\"), \"\\n\")\n\n\nEarliest sampling date:  2017-03-06 08:55:00 \n\n\nCode\n  cat(\"Latest   sampling date: \", format(date_range[2], \"%Y-%m-%d %H:%M:%S\"), \"\\n\")\n\n\nLatest   sampling date:  2024-11-05 11:55:00 \n\n\n\nDownload Data For This Provider"
  },
  {
    "objectID": "provider_reports/provider_reports/DERM_BBWQ.html",
    "href": "provider_reports/provider_reports/DERM_BBWQ.html",
    "title": "DERM_BBWQ Data",
    "section": "",
    "text": "Provider Data Assesment\n\n\nCode\nlibrarian::shelf(\n  dplyr,\n  glue,\n  here,\n  tidyr\n)\n\n\n\n\nread in the WIN txt pipe-delimited file\nsource(here(\"R/getData.R\"))\ndf &lt;- getData(params$org_id)\n\n# Ensure the result value column is numeric (coerce if needed)\ndf$DEP.Result.Value.Number &lt;- as.numeric(df$DEP.Result.Value.Number)\n\n\n\n\nCode\nlibrary(dplyr)\nlibrary(tidyr)\nlibrary(ggplot2)\n\nsource(here::here(\"R/presenceTable.R\"))\n\nheat_long &lt;- getPresenceHeatmapTable(df)\n\n\n\n\nCode\nplotHeatmap(heat_long)\n\n\n\n\n\n\n\n\n\n\n\ncreate map with unique points\n# check for missing lat/lon\nif (all(is.na(df$Org.Decimal.Latitude)) || all(is.na(df$Org.Decimal.Longitude))) {\n  cat(\"Cannot make map: All rows have missing latitude or longitude.\")\n} else {\n  library(leaflet)\n  library(dplyr)\n\n  # 1. Filter out rows & keep only one per unique lat/lon\n  df_unique_locs &lt;- df %&gt;%\n    filter(!is.na(Org.Decimal.Latitude), !is.na(Org.Decimal.Longitude)) %&gt;%\n    distinct(Org.Decimal.Latitude, Org.Decimal.Longitude, .keep_all = TRUE)\n\n  # 2. Plot all unique points (no clustering)\n  leaflet(df_unique_locs) %&gt;%\n    addProviderTiles(providers$OpenStreetMap) %&gt;%\n    addCircleMarkers(\n      lng         = ~Org.Decimal.Longitude,\n      lat         = ~Org.Decimal.Latitude,\n      radius      = 4,\n      color       = \"blue\",\n      fillOpacity = 0.5,\n      popup       = ~paste0(\n        \"Monitoring Location: \", Monitoring.Location.ID\n      )\n      # clusterOptions removed to show every point at all zoom levels\n    )\n}\n\n\n\n\n\n\n\n\nvisualize distribution of points through time\nlibrary(ggplot2)\nlibrary(lubridate)\n\n# Convert Activity.Start.Date.Time to proper datetime if it isn't already\ndf$`Activity.Start.Date.Time` &lt;- as.POSIXct(as.character(df$`Activity.Start.Date.Time`), format = \"%m/%d/%Y %H:%M:%S\")\n\n\n# Create a dataframe with unique sampling events\nsampling_events &lt;- df %&gt;%\n  distinct(`Activity.Start.Date.Time`, Monitoring.Location.ID) %&gt;%\n  arrange(`Activity.Start.Date.Time`)\n\n\n\n\nCreate time distribution plot\nggplot(sampling_events, aes(x = `Activity.Start.Date.Time`)) +\n  geom_histogram(bins = 30, fill = \"steelblue\", color = \"white\", alpha = 0.7) +\n  labs(\n    title = \"Distribution of Sampling Events Over Time\",\n    x = \"Date\",\n    y = \"Number of Sampling Events\"\n  ) +\n  theme_minimal() +\n  theme(\n    axis.text.x = element_text(angle = 45, hjust = 1),\n    panel.grid.minor = element_blank()\n  )\n\n\n\n\n\n\n\n\n\n\n\nCode\n# Create a heatmap of sampling locations over time\n# drop rows with missing dates or IDs\nsampling_events &lt;- sampling_events %&gt;%\n  filter(!is.na(`Activity.Start.Date.Time`), !is.na(Monitoring.Location.ID))\n# if sampling_events is empty, skip this plot\nif (nrow(sampling_events) &gt; 0) {\n  ggplot(sampling_events, \n          aes(x = `Activity.Start.Date.Time`, \n              y = Monitoring.Location.ID)) +\n      geom_point(color = \"steelblue\", alpha = 0.7) +\n      labs(\n        title = \"Sampling Locations Over Time\",\n        x = \"Date\",\n        y = \"Monitoring Location ID\"\n      ) +\n      theme_minimal() +\n      theme(\n        axis.text.x = element_text(angle = 45, hjust = 1),\n        panel.grid.minor = element_blank()\n      )\n} else {\n  print(\"No sampling events with valid dates & IDs\")\n}\n\n\n\n\n\n\n\n\n\n\n\nCode\ndate_range &lt;- range(df$`Activity.Start.Date.Time`, na.rm = TRUE)\n  cat(\"Earliest sampling date: \", format(date_range[1], \"%Y-%m-%d %H:%M:%S\"), \"\\n\")\n\n\nEarliest sampling date:  2015-08-03 09:30:00 \n\n\nCode\n  cat(\"Latest   sampling date: \", format(date_range[2], \"%Y-%m-%d %H:%M:%S\"), \"\\n\")\n\n\nLatest   sampling date:  2024-12-05 11:08:02 \n\n\n\nDownload Data For This Provider"
  },
  {
    "objectID": "provider_reports/provider_reports/MiamiBeach.html",
    "href": "provider_reports/provider_reports/MiamiBeach.html",
    "title": "MiamiBeach Data",
    "section": "",
    "text": "Provider Data Assesment\n\n\nCode\nlibrarian::shelf(\n  dplyr,\n  glue,\n  here,\n  tidyr\n)\n\n\n\n\nread in the WIN txt pipe-delimited file\nsource(here(\"R/getData.R\"))\ndf &lt;- getData(params$org_id)\n\n# Ensure the result value column is numeric (coerce if needed)\ndf$DEP.Result.Value.Number &lt;- as.numeric(df$DEP.Result.Value.Number)\n\n\n\n\nCode\nlibrary(dplyr)\nlibrary(tidyr)\nlibrary(ggplot2)\n\nsource(here::here(\"R/presenceTable.R\"))\n\nheat_long &lt;- getPresenceHeatmapTable(df)\n\n\n\n\nCode\nplotHeatmap(heat_long)\n\n\n\n\n\n\n\n\n\n\n\ncreate map with unique points\n# check for missing lat/lon\nif (all(is.na(df$Org.Decimal.Latitude)) || all(is.na(df$Org.Decimal.Longitude))) {\n  cat(\"Cannot make map: All rows have missing latitude or longitude.\")\n} else {\n  library(leaflet)\n  library(dplyr)\n\n  # 1. Filter out rows & keep only one per unique lat/lon\n  df_unique_locs &lt;- df %&gt;%\n    filter(!is.na(Org.Decimal.Latitude), !is.na(Org.Decimal.Longitude)) %&gt;%\n    distinct(Org.Decimal.Latitude, Org.Decimal.Longitude, .keep_all = TRUE)\n\n  # 2. Plot all unique points (no clustering)\n  leaflet(df_unique_locs) %&gt;%\n    addProviderTiles(providers$OpenStreetMap) %&gt;%\n    addCircleMarkers(\n      lng         = ~Org.Decimal.Longitude,\n      lat         = ~Org.Decimal.Latitude,\n      radius      = 4,\n      color       = \"blue\",\n      fillOpacity = 0.5,\n      popup       = ~paste0(\n        \"Monitoring Location: \", Monitoring.Location.ID\n      )\n      # clusterOptions removed to show every point at all zoom levels\n    )\n}\n\n\n\n\n\n\n\n\nvisualize distribution of points through time\nlibrary(ggplot2)\nlibrary(lubridate)\n\n# Convert Activity.Start.Date.Time to proper datetime if it isn't already\ndf$`Activity.Start.Date.Time` &lt;- as.POSIXct(as.character(df$`Activity.Start.Date.Time`), format = \"%m/%d/%Y %H:%M:%S\")\n\n\n# Create a dataframe with unique sampling events\nsampling_events &lt;- df %&gt;%\n  distinct(`Activity.Start.Date.Time`, Monitoring.Location.ID) %&gt;%\n  arrange(`Activity.Start.Date.Time`)\n\n\n\n\nCreate time distribution plot\nggplot(sampling_events, aes(x = `Activity.Start.Date.Time`)) +\n  geom_histogram(bins = 30, fill = \"steelblue\", color = \"white\", alpha = 0.7) +\n  labs(\n    title = \"Distribution of Sampling Events Over Time\",\n    x = \"Date\",\n    y = \"Number of Sampling Events\"\n  ) +\n  theme_minimal() +\n  theme(\n    axis.text.x = element_text(angle = 45, hjust = 1),\n    panel.grid.minor = element_blank()\n  )\n\n\n\n\n\n\n\n\n\n\n\nCode\n# Create a heatmap of sampling locations over time\n# drop rows with missing dates or IDs\nsampling_events &lt;- sampling_events %&gt;%\n  filter(!is.na(`Activity.Start.Date.Time`), !is.na(Monitoring.Location.ID))\n# if sampling_events is empty, skip this plot\nif (nrow(sampling_events) &gt; 0) {\n  ggplot(sampling_events, \n          aes(x = `Activity.Start.Date.Time`, \n              y = Monitoring.Location.ID)) +\n      geom_point(color = \"steelblue\", alpha = 0.7) +\n      labs(\n        title = \"Sampling Locations Over Time\",\n        x = \"Date\",\n        y = \"Monitoring Location ID\"\n      ) +\n      theme_minimal() +\n      theme(\n        axis.text.x = element_text(angle = 45, hjust = 1),\n        panel.grid.minor = element_blank()\n      )\n} else {\n  print(\"No sampling events with valid dates & IDs\")\n}\n\n\n\n\n\n\n\n\n\n\n\nCode\ndate_range &lt;- range(df$`Activity.Start.Date.Time`, na.rm = TRUE)\n  cat(\"Earliest sampling date: \", format(date_range[1], \"%Y-%m-%d %H:%M:%S\"), \"\\n\")\n\n\nEarliest sampling date:  2016-08-16 10:40:00 \n\n\nCode\n  cat(\"Latest   sampling date: \", format(date_range[2], \"%Y-%m-%d %H:%M:%S\"), \"\\n\")\n\n\nLatest   sampling date:  2024-12-30 12:00:00 \n\n\n\nDownload Data For This Provider"
  },
  {
    "objectID": "provider_reports/provider_reports/SFER.html",
    "href": "provider_reports/provider_reports/SFER.html",
    "title": "SFER Data",
    "section": "",
    "text": "Provider Data Assesment\n\n\nCode\nlibrarian::shelf(\n  dplyr,\n  glue,\n  here,\n  tidyr\n)\n\n\n\n\nread in the WIN txt pipe-delimited file\nsource(here(\"R/getData.R\"))\ndf &lt;- getData(params$org_id)\n\n# Ensure the result value column is numeric (coerce if needed)\ndf$DEP.Result.Value.Number &lt;- as.numeric(df$DEP.Result.Value.Number)\n\n\n\n\nCode\nlibrary(dplyr)\nlibrary(tidyr)\nlibrary(ggplot2)\n\nsource(here::here(\"R/presenceTable.R\"))\n\nheat_long &lt;- getPresenceHeatmapTable(df)\n\n\n\n\nCode\nplotHeatmap(heat_long)\n\n\n\n\n\n\n\n\n\n\n\ncreate map with unique points\n# check for missing lat/lon\nif (all(is.na(df$Org.Decimal.Latitude)) || all(is.na(df$Org.Decimal.Longitude))) {\n  cat(\"Cannot make map: All rows have missing latitude or longitude.\")\n} else {\n  library(leaflet)\n  library(dplyr)\n\n  # 1. Filter out rows & keep only one per unique lat/lon\n  df_unique_locs &lt;- df %&gt;%\n    filter(!is.na(Org.Decimal.Latitude), !is.na(Org.Decimal.Longitude)) %&gt;%\n    distinct(Org.Decimal.Latitude, Org.Decimal.Longitude, .keep_all = TRUE)\n\n  # 2. Plot all unique points (no clustering)\n  leaflet(df_unique_locs) %&gt;%\n    addProviderTiles(providers$OpenStreetMap) %&gt;%\n    addCircleMarkers(\n      lng         = ~Org.Decimal.Longitude,\n      lat         = ~Org.Decimal.Latitude,\n      radius      = 4,\n      color       = \"blue\",\n      fillOpacity = 0.5,\n      popup       = ~paste0(\n        \"Monitoring Location: \", Monitoring.Location.ID\n      )\n      # clusterOptions removed to show every point at all zoom levels\n    )\n}\n\n\n\n\n\n\n\n\nvisualize distribution of points through time\nlibrary(ggplot2)\nlibrary(lubridate)\n\n# Convert Activity.Start.Date.Time to proper datetime if it isn't already\ndf$`Activity.Start.Date.Time` &lt;- as.POSIXct(as.character(df$`Activity.Start.Date.Time`), format = \"%m/%d/%Y %H:%M:%S\")\n\n\n# Create a dataframe with unique sampling events\nsampling_events &lt;- df %&gt;%\n  distinct(`Activity.Start.Date.Time`, Monitoring.Location.ID) %&gt;%\n  arrange(`Activity.Start.Date.Time`)\n\n\n\n\nCreate time distribution plot\nggplot(sampling_events, aes(x = `Activity.Start.Date.Time`)) +\n  geom_histogram(bins = 30, fill = \"steelblue\", color = \"white\", alpha = 0.7) +\n  labs(\n    title = \"Distribution of Sampling Events Over Time\",\n    x = \"Date\",\n    y = \"Number of Sampling Events\"\n  ) +\n  theme_minimal() +\n  theme(\n    axis.text.x = element_text(angle = 45, hjust = 1),\n    panel.grid.minor = element_blank()\n  )\n\n\n\n\n\n\n\n\n\n\n\nCode\n# Create a heatmap of sampling locations over time\n# drop rows with missing dates or IDs\nsampling_events &lt;- sampling_events %&gt;%\n  filter(!is.na(`Activity.Start.Date.Time`), !is.na(Monitoring.Location.ID))\n# if sampling_events is empty, skip this plot\nif (nrow(sampling_events) &gt; 0) {\n  ggplot(sampling_events, \n          aes(x = `Activity.Start.Date.Time`, \n              y = Monitoring.Location.ID)) +\n      geom_point(color = \"steelblue\", alpha = 0.7) +\n      labs(\n        title = \"Sampling Locations Over Time\",\n        x = \"Date\",\n        y = \"Monitoring Location ID\"\n      ) +\n      theme_minimal() +\n      theme(\n        axis.text.x = element_text(angle = 45, hjust = 1),\n        panel.grid.minor = element_blank()\n      )\n} else {\n  print(\"No sampling events with valid dates & IDs\")\n}\n\n\n\n\n\n\n\n\n\n\n\nCode\ndate_range &lt;- range(df$`Activity.Start.Date.Time`, na.rm = TRUE)\n  cat(\"Earliest sampling date: \", format(date_range[1], \"%Y-%m-%d %H:%M:%S\"), \"\\n\")\n\n\nEarliest sampling date:  2014-12-01 13:23:00 \n\n\nCode\n  cat(\"Latest   sampling date: \", format(date_range[2], \"%Y-%m-%d %H:%M:%S\"), \"\\n\")\n\n\nLatest   sampling date:  2024-11-17 23:54:00 \n\n\n\nDownload Data For This Provider"
  },
  {
    "objectID": "analyte_reports/analyte_reports/Ammonia.html",
    "href": "analyte_reports/analyte_reports/Ammonia.html",
    "title": "Ammonia Report",
    "section": "",
    "text": "get data across all programs, filter for analyte\nlibrary('here')\nlibrary('dplyr')\nsource(here(\"R/getAllData.R\"))\nfull_df &lt;- getAllData()\ndf &lt;- filter(full_df, DEP.Analyte.Name == params$analyte)\n\n\n\n\ncreate .csv of analyte data\n# save df to csv\n# reduce to only cols we need & save to csv\ndf %&gt;%\n  mutate(\n    source = program,\n    site = Monitoring.Location.ID,\n    datetime = Activity.Start.Date.Time,\n    analyte = DEP.Analyte.Name,\n    value = DEP.Result.Value.Number,\n    units = DEP.Result.Unit,\n    latitude = Org.Decimal.Latitude,\n    longitude = Org.Decimal.Longitude,\n    sample_depth = Activity.Depth,\n    .keep = \"none\"\n) %&gt;%\n  write.csv(here(\"data\", \"exports\", \"unified-wq-db-samples\", paste0(params$analyte, \".csv\")))\n\n\nDownload data for this analyte here\n\nHistogram of DEP.Result.Value.Number:\n\n\ndisplay histogram of values\nlibrary(ggplot2)\nggplot(df, aes(x = DEP.Result.Value.Number)) +\n  geom_histogram(bins = 30, fill = \"blue\", color = \"black\") +\n  labs(title = \"Histogram of Values\", x = \"Value\", y = \"Count\")\n\n\n\n\n\n\n\n\n\n\n\nStation Statistics:\n\n\ncreate station statistics dataframe\nsource(here(\"R/seasonalMannKendall.R\"))\nlibrary(lubridate)  # for mdy_hms()\nlibrary(pander)  # for display\n\n# create table of samples for each station\nsamples_df &lt;- df %&gt;%\n  select(\n    program, \n    Monitoring.Location.ID, \n    Activity.Start.Date.Time,\n    analyte = DEP.Analyte.Name,\n    DEP.Result.Value.Number, \n    DEP.Result.Unit,\n    latitude = Org.Decimal.Latitude,\n    longitude = Org.Decimal.Longitude,\n    sample_depth = Activity.Depth\n    ) %&gt;%\n  # drop any with empty Monitoring.Location.ID\n  filter(!is.na(Monitoring.Location.ID)) %&gt;%\n  # drop any with empty Activity.Start.Date.Time\n  filter(!is.na(Activity.Start.Date.Time)) %&gt;%\n  # parse the \"MM/DD/YYYY HH:MM:SS\" strings into POSIXct\n  mutate(Activity.Start.Date.Time = mdy_hms(\n          Activity.Start.Date.Time,\n          tz = \"UTC\")) %&gt;%\n  distinct()\n\n\n# add statistics for each station\nsample_stats_df &lt;- samples_df %&gt;%\n  group_by(program, Monitoring.Location.ID) %&gt;%\n  reframe(\n    {\n      tmp &lt;- seasonalMannKendallVectorized(\n        Activity.Start.Date.Time,\n        DEP.Result.Value.Number\n      )\n    },\n    n_values = n(),\n    mean = mean(DEP.Result.Value.Number),\n    min = min(DEP.Result.Value.Number),\n    max = max(DEP.Result.Value.Number),\n    coefficient.of.variation = sd(DEP.Result.Value.Number) / mean(DEP.Result.Value.Number)\n  ) %&gt;%\n  mutate(\n    # create column significant_slope\n    significant_slope = ifelse(z &lt;= 0.05, slope, NA_real_),\n    pvalue = z\n  ) %&gt;%\n  # drop unwanted columns added by seasonalMannKendall\n  select(\n    -z,\n    -tau,\n    -chi_square\n  )\n\n\n\n# print(head(sample_stats_df))\n# # display sample_stats_df with pander\n# pander(sample_stats_df)\n\n\n\n\nsave stats to csv\nsample_stats_df %&gt;%\n  write.csv(here(\n    \"data\", \"exports\", \"seasonal-mann-kendall-stats\", paste0(params$analyte, \".csv\")))\n\n\nDownload data for this analyte’s statistics here\n\n\ndisplay with gt\nlibrary(gt)\nlibrary(scales)\nlibrary(tidyselect)  # for all_of()\nlibrary(RColorBrewer) # for brewer.pal()\n\n# ── color_column() ─────────────────────────────────────────────────────────────\n# gt_tbl   : a gt object that you’ve already created (e.g. `sample_stats_df %&gt;% gt()`)\n# df       : the original data.frame (must contain the column you want to color)\n# column   : a string, e.g. \"slope\" or \"n_values\"\n# palette  : a character vector of colours to feed to col_numeric()\n#\ncolor_column &lt;- function(gt_tbl, df, column, \n                         palette = c(\"red\", \"orange\", \"yellow\", \"green\", \"blue\", \"violet\"),\n                         domain = NULL) {\n  # 1) Pull out that column’s numeric values\n  vals &lt;- df[[column]]\n  if (!is.numeric(vals)) {\n    stop(sprintf(\"`%s` is not numeric; data_color() requires a numeric column.\", column))\n  }\n  \n  # 2) Compute its min and max (ignoring NA)\n  min_val &lt;- min(vals, na.rm = TRUE)\n  max_val &lt;- max(vals, na.rm = TRUE)\n  if (is.null(domain)) {\n    domain &lt;- c(min_val, max_val)\n  }\n  \n  # 3) Call data_color() on the gt table for that single column\n  gt_tbl %&gt;%\n    data_color(\n      columns = all_of(column),\n      colors  = col_numeric(\n        palette = palette,\n        domain  = domain\n      )\n    )\n}\nlibrary(dplyr)\nlibrary(gt)\n\n# 1) First build your gt table as usual:\ngt_tbl &lt;- sample_stats_df %&gt;% \n  gt()\n\n# slope blue (-) to red (+) (0 centered)\ntryCatch({\n  min_slope &lt;- min(sample_stats_df$slope,  na.rm = TRUE)\n  max_slope &lt;- max(sample_stats_df$slope,  na.rm = TRUE)\n  max_abs_slope &lt;- max(abs(min_slope), abs(max_slope))\n  gt_tbl &lt;- color_column(\n    gt_tbl, \n    df     = sample_stats_df, \n    column = \"slope\",\n    palette = rev(brewer.pal(11, \"RdBu\")),\n    domain  = c(-max_abs_slope, max_abs_slope)\n  )\n}, error = function(e) {\n  print(\"Error in slope color column\")\n  print(e)\n})\n\n\n[1] \"Error in slope color column\"\n&lt;rlang_error in col_numeric(palette = palette, domain = domain): Wasn't able to determine range of `domain`&gt;\n\n\ndisplay with gt\ntryCatch({\n  # pvalue Z\n  gt_tbl &lt;- color_column(\n    gt_tbl, \n    df      = sample_stats_df, \n    column  = \"z\", \n    palette = scales::brewer_pal(palette = \"Blues\")(9)\n  )\n}, error = function(e) {\n  print(\"Error in z color column\")\n  print(e)\n})\n\n\n[1] \"Error in z color column\"\n&lt;simpleError in color_column(gt_tbl, df = sample_stats_df, column = \"z\", palette = (scales::brewer_pal(palette = \"Blues\"))(9)): `z` is not numeric; data_color() requires a numeric column.&gt;\n\n\ndisplay with gt\n# slope blue (-) to red (+) (0 centered)\ntryCatch({\n  min_slope &lt;- min(sample_stats_df$significant_slope,  na.rm = TRUE)\n  max_slope &lt;- max(sample_stats_df$significant_slope,  na.rm = TRUE)\n  max_abs_slope &lt;- max(abs(min_slope), abs(max_slope))\n  gt_tbl &lt;- color_column(\n    gt_tbl, \n    df     = sample_stats_df, \n    column = \"significant_slope\",\n    palette = rev(brewer.pal(11, \"RdBu\")),\n    domain  = c(-max_abs_slope, max_abs_slope)\n  )\n}, error = function(e) {\n  print(\"Error in significant_slope color column\")\n  print(e)\n})\n\n\n[1] \"Error in significant_slope color column\"\n&lt;simpleError in color_column(gt_tbl, df = sample_stats_df, column = \"significant_slope\",     palette = rev(brewer.pal(11, \"RdBu\")), domain = c(-max_abs_slope,         max_abs_slope)): `significant_slope` is not numeric; data_color() requires a numeric column.&gt;\n\n\ndisplay with gt\ntryCatch({\n  # mean values blue to red (0 centered)\n  min_mean &lt;- min(sample_stats_df$mean,  na.rm = TRUE)\n  max_mean &lt;- max(sample_stats_df$mean,  na.rm = TRUE)\n  max_abs_mean &lt;- max(abs(min_mean), abs(max_mean))\n  gt_tbl &lt;- color_column(\n    gt_tbl, \n    df     = sample_stats_df, \n    column = \"mean\",\n    palette = rev(brewer.pal(11, \"RdBu\")),\n    domain  = c(-max_abs_mean, max_abs_mean)\n  )\n}, error = function(e) {\n  print(\"Error in mean color column\")\n  print(e)\n})\n\n\n[1] \"Error in mean color column\"\n&lt;rlang_error in col_numeric(palette = palette, domain = domain): Wasn't able to determine range of `domain`&gt;\n\n\ndisplay with gt\ntryCatch({\n  # n values white to green\n  gt_tbl &lt;- color_column(\n    gt_tbl, \n    df      = sample_stats_df, \n    column  = \"n_values\", \n    palette = scales::brewer_pal(palette = \"Greens\")(9)\n  )\n}, error = function(e) {\n  print(\"Error in n_values color column\")\n  print(e)\n})\n\n\n[1] \"Error in n_values color column\"\n&lt;rlang_error in col_numeric(palette = palette, domain = domain): Wasn't able to determine range of `domain`&gt;\n\n\ndisplay with gt\ntryCatch({\n  # min\n  gt_tbl &lt;- color_column(\n    gt_tbl, \n    df      = sample_stats_df, \n    column  = \"min\", \n    palette = scales::brewer_pal(palette = \"Blues\")(9)\n  )\n}, error = function(e) {\n  print(\"Error in min color column\")\n  print(e)\n})\n\n\n[1] \"Error in min color column\"\n&lt;rlang_error in col_numeric(palette = palette, domain = domain): Wasn't able to determine range of `domain`&gt;\n\n\ndisplay with gt\ntryCatch({\n  # max\n  gt_tbl &lt;- color_column(\n    gt_tbl, \n    df      = sample_stats_df, \n    column  = \"max\", \n    palette = scales::brewer_pal(palette = \"Blues\")(9)\n  )\n}, error = function(e) {\n  print(\"Error in max color column\")\n  print(e)\n})\n\n\n[1] \"Error in max color column\"\n&lt;rlang_error in col_numeric(palette = palette, domain = domain): Wasn't able to determine range of `domain`&gt;\n\n\ndisplay with gt\ntryCatch({\n  # coefficient.of.variation\n  gt_tbl &lt;- color_column(\n    gt_tbl, \n    df      = sample_stats_df, \n    column  = \"coefficient.of.variation\", \n    palette = scales::brewer_pal(palette = \"Blues\")(9)\n  )\n}, error = function(e) {\n  print(\"Error in coefficient.of.variation color column\")\n  print(e)\n})\n\n\n[1] \"Error in coefficient.of.variation color column\"\n&lt;rlang_error in col_numeric(palette = palette, domain = domain): Wasn't able to determine range of `domain`&gt;\n\n\ndisplay with gt\n# 4) Render/display:\ngt_tbl\n\n\n\n\n\n\n\n\nprogram\nMonitoring.Location.ID\nslope\nn_values\nmean\nmin\nmax\ncoefficient.of.variation\nsignificant_slope\npvalue\n\n\n\n\n\n\n\n\n\n\n\nReporting Programs:\n\n\ndisplay reporting programs\nlibrary(ggplot2)\nggplot(df, aes(x = program)) +\n  geom_bar() +\n  labs(title = \"Reporting Programs\", x = \"Program\", y = \"Count\")"
  },
  {
    "objectID": "analyte_reports/analyte_reports/Ammonium.html",
    "href": "analyte_reports/analyte_reports/Ammonium.html",
    "title": "Ammonium Report",
    "section": "",
    "text": "get data across all programs, filter for analyte\nlibrary('here')\nlibrary('dplyr')\nsource(here(\"R/getAllData.R\"))\nfull_df &lt;- getAllData()\ndf &lt;- filter(full_df, DEP.Analyte.Name == params$analyte)\n\n\n\n\ncreate .csv of analyte data\n# save df to csv\n# reduce to only cols we need & save to csv\ndf %&gt;%\n  mutate(\n    source = program,\n    site = Monitoring.Location.ID,\n    datetime = Activity.Start.Date.Time,\n    analyte = DEP.Analyte.Name,\n    value = DEP.Result.Value.Number,\n    units = DEP.Result.Unit,\n    latitude = Org.Decimal.Latitude,\n    longitude = Org.Decimal.Longitude,\n    sample_depth = Activity.Depth,\n    .keep = \"none\"\n) %&gt;%\n  write.csv(here(\"data\", \"exports\", \"unified-wq-db-samples\", paste0(params$analyte, \".csv\")))\n\n\nDownload data for this analyte here\n\nHistogram of DEP.Result.Value.Number:\n\n\ndisplay histogram of values\nlibrary(ggplot2)\nggplot(df, aes(x = DEP.Result.Value.Number)) +\n  geom_histogram(bins = 30, fill = \"blue\", color = \"black\") +\n  labs(title = \"Histogram of Values\", x = \"Value\", y = \"Count\")\n\n\n\n\n\n\n\n\n\n\n\nStation Statistics:\n\n\ncreate station statistics dataframe\nsource(here(\"R/seasonalMannKendall.R\"))\nlibrary(lubridate)  # for mdy_hms()\nlibrary(pander)  # for display\n\n# create table of samples for each station\nsamples_df &lt;- df %&gt;%\n  select(\n    program, \n    Monitoring.Location.ID, \n    Activity.Start.Date.Time,\n    analyte = DEP.Analyte.Name,\n    DEP.Result.Value.Number, \n    DEP.Result.Unit,\n    latitude = Org.Decimal.Latitude,\n    longitude = Org.Decimal.Longitude,\n    sample_depth = Activity.Depth\n    ) %&gt;%\n  # drop any with empty Monitoring.Location.ID\n  filter(!is.na(Monitoring.Location.ID)) %&gt;%\n  # drop any with empty Activity.Start.Date.Time\n  filter(!is.na(Activity.Start.Date.Time)) %&gt;%\n  # parse the \"MM/DD/YYYY HH:MM:SS\" strings into POSIXct\n  mutate(Activity.Start.Date.Time = mdy_hms(\n          Activity.Start.Date.Time,\n          tz = \"UTC\")) %&gt;%\n  distinct()\n\n\n# add statistics for each station\nsample_stats_df &lt;- samples_df %&gt;%\n  group_by(program, Monitoring.Location.ID) %&gt;%\n  reframe(\n    {\n      tmp &lt;- seasonalMannKendallVectorized(\n        Activity.Start.Date.Time,\n        DEP.Result.Value.Number\n      )\n    },\n    n_values = n(),\n    mean = mean(DEP.Result.Value.Number),\n    min = min(DEP.Result.Value.Number),\n    max = max(DEP.Result.Value.Number),\n    coefficient.of.variation = sd(DEP.Result.Value.Number) / mean(DEP.Result.Value.Number)\n  ) %&gt;%\n  mutate(\n    # create column significant_slope\n    significant_slope = ifelse(z &lt;= 0.05, slope, NA_real_),\n    pvalue = z\n  ) %&gt;%\n  # drop unwanted columns added by seasonalMannKendall\n  select(\n    -z,\n    -tau,\n    -chi_square\n  )\n\n\n\n# print(head(sample_stats_df))\n# # display sample_stats_df with pander\n# pander(sample_stats_df)\n\n\n\n\nsave stats to csv\nsample_stats_df %&gt;%\n  write.csv(here(\n    \"data\", \"exports\", \"seasonal-mann-kendall-stats\", paste0(params$analyte, \".csv\")))\n\n\nDownload data for this analyte’s statistics here\n\n\ndisplay with gt\nlibrary(gt)\nlibrary(scales)\nlibrary(tidyselect)  # for all_of()\nlibrary(RColorBrewer) # for brewer.pal()\n\n# ── color_column() ─────────────────────────────────────────────────────────────\n# gt_tbl   : a gt object that you’ve already created (e.g. `sample_stats_df %&gt;% gt()`)\n# df       : the original data.frame (must contain the column you want to color)\n# column   : a string, e.g. \"slope\" or \"n_values\"\n# palette  : a character vector of colours to feed to col_numeric()\n#\ncolor_column &lt;- function(gt_tbl, df, column, \n                         palette = c(\"red\", \"orange\", \"yellow\", \"green\", \"blue\", \"violet\"),\n                         domain = NULL) {\n  # 1) Pull out that column’s numeric values\n  vals &lt;- df[[column]]\n  if (!is.numeric(vals)) {\n    stop(sprintf(\"`%s` is not numeric; data_color() requires a numeric column.\", column))\n  }\n  \n  # 2) Compute its min and max (ignoring NA)\n  min_val &lt;- min(vals, na.rm = TRUE)\n  max_val &lt;- max(vals, na.rm = TRUE)\n  if (is.null(domain)) {\n    domain &lt;- c(min_val, max_val)\n  }\n  \n  # 3) Call data_color() on the gt table for that single column\n  gt_tbl %&gt;%\n    data_color(\n      columns = all_of(column),\n      colors  = col_numeric(\n        palette = palette,\n        domain  = domain\n      )\n    )\n}\nlibrary(dplyr)\nlibrary(gt)\n\n# 1) First build your gt table as usual:\ngt_tbl &lt;- sample_stats_df %&gt;% \n  gt()\n\n# slope blue (-) to red (+) (0 centered)\ntryCatch({\n  min_slope &lt;- min(sample_stats_df$slope,  na.rm = TRUE)\n  max_slope &lt;- max(sample_stats_df$slope,  na.rm = TRUE)\n  max_abs_slope &lt;- max(abs(min_slope), abs(max_slope))\n  gt_tbl &lt;- color_column(\n    gt_tbl, \n    df     = sample_stats_df, \n    column = \"slope\",\n    palette = rev(brewer.pal(11, \"RdBu\")),\n    domain  = c(-max_abs_slope, max_abs_slope)\n  )\n}, error = function(e) {\n  print(\"Error in slope color column\")\n  print(e)\n})\n\ntryCatch({\n  # pvalue Z\n  gt_tbl &lt;- color_column(\n    gt_tbl, \n    df      = sample_stats_df, \n    column  = \"z\", \n    palette = scales::brewer_pal(palette = \"Blues\")(9)\n  )\n}, error = function(e) {\n  print(\"Error in z color column\")\n  print(e)\n})\n\n\n[1] \"Error in z color column\"\n&lt;simpleError in color_column(gt_tbl, df = sample_stats_df, column = \"z\", palette = (scales::brewer_pal(palette = \"Blues\"))(9)): `z` is not numeric; data_color() requires a numeric column.&gt;\n\n\ndisplay with gt\n# slope blue (-) to red (+) (0 centered)\ntryCatch({\n  min_slope &lt;- min(sample_stats_df$significant_slope,  na.rm = TRUE)\n  max_slope &lt;- max(sample_stats_df$significant_slope,  na.rm = TRUE)\n  max_abs_slope &lt;- max(abs(min_slope), abs(max_slope))\n  gt_tbl &lt;- color_column(\n    gt_tbl, \n    df     = sample_stats_df, \n    column = \"significant_slope\",\n    palette = rev(brewer.pal(11, \"RdBu\")),\n    domain  = c(-max_abs_slope, max_abs_slope)\n  )\n}, error = function(e) {\n  print(\"Error in significant_slope color column\")\n  print(e)\n})\n\ntryCatch({\n  # mean values blue to red (0 centered)\n  min_mean &lt;- min(sample_stats_df$mean,  na.rm = TRUE)\n  max_mean &lt;- max(sample_stats_df$mean,  na.rm = TRUE)\n  max_abs_mean &lt;- max(abs(min_mean), abs(max_mean))\n  gt_tbl &lt;- color_column(\n    gt_tbl, \n    df     = sample_stats_df, \n    column = \"mean\",\n    palette = rev(brewer.pal(11, \"RdBu\")),\n    domain  = c(-max_abs_mean, max_abs_mean)\n  )\n}, error = function(e) {\n  print(\"Error in mean color column\")\n  print(e)\n})\n\ntryCatch({\n  # n values white to green\n  gt_tbl &lt;- color_column(\n    gt_tbl, \n    df      = sample_stats_df, \n    column  = \"n_values\", \n    palette = scales::brewer_pal(palette = \"Greens\")(9)\n  )\n}, error = function(e) {\n  print(\"Error in n_values color column\")\n  print(e)\n})\n\ntryCatch({\n  # min\n  gt_tbl &lt;- color_column(\n    gt_tbl, \n    df      = sample_stats_df, \n    column  = \"min\", \n    palette = scales::brewer_pal(palette = \"Blues\")(9)\n  )\n}, error = function(e) {\n  print(\"Error in min color column\")\n  print(e)\n})\n\ntryCatch({\n  # max\n  gt_tbl &lt;- color_column(\n    gt_tbl, \n    df      = sample_stats_df, \n    column  = \"max\", \n    palette = scales::brewer_pal(palette = \"Blues\")(9)\n  )\n}, error = function(e) {\n  print(\"Error in max color column\")\n  print(e)\n})\n\ntryCatch({\n  # coefficient.of.variation\n  gt_tbl &lt;- color_column(\n    gt_tbl, \n    df      = sample_stats_df, \n    column  = \"coefficient.of.variation\", \n    palette = scales::brewer_pal(palette = \"Blues\")(9)\n  )\n}, error = function(e) {\n  print(\"Error in coefficient.of.variation color column\")\n  print(e)\n})\n\n# 4) Render/display:\ngt_tbl\n\n\n\n\n\n\n\n\nprogram\nMonitoring.Location.ID\nslope\nn_values\nmean\nmin\nmax\ncoefficient.of.variation\nsignificant_slope\npvalue\n\n\n\n\nSFER\n1\n-2.100000e-02\n53\n0.6463585\n0.000\n3.325\n0.95354015\nNA\n0.29894397\n\n\nSFER\n10\n-1.140000e-02\n51\n0.6004902\n0.000\n2.761\n0.93028277\nNA\n0.48571706\n\n\nSFER\n11\n1.220000e-02\n54\n0.5411852\n0.000\n3.108\n1.04636269\nNA\n0.42647481\n\n\nSFER\n12\n1.416667e-02\n54\n0.4012222\n0.000\n1.563\n0.85656709\nNA\n0.67059706\n\n\nSFER\n13\n1.533333e-02\n53\n0.5635283\n0.000\n3.326\n1.00100400\nNA\n0.70990047\n\n\nSFER\n14\n-1.333333e-03\n54\n0.4679074\n0.000\n2.457\n1.15163217\nNA\n0.94236762\n\n\nSFER\n15\n-7.000000e-03\n54\n0.4890741\n0.000\n3.539\n1.31724202\nNA\n0.66363180\n\n\nSFER\n15.5\n9.822222e-03\n52\n0.4486346\n0.000\n1.914\n0.96889055\nNA\n0.59207889\n\n\nSFER\n16\n2.950000e-02\n54\n0.7389630\n0.000\n4.488\n1.04217594\nNA\n0.14216210\n\n\nSFER\n17\n9.000000e-03\n55\n0.6284364\n0.000\n4.364\n1.11020687\nNA\n0.61404586\n\n\nSFER\n18\n2.000000e-03\n55\n0.4947091\n0.000\n3.620\n1.23427102\nNA\n0.94256704\n\n\nSFER\n19\n-2.750000e-03\n55\n0.7364182\n0.000\n4.337\n0.93267669\nNA\n0.88572541\n\n\nSFER\n2\n1.433333e-02\n53\n0.7521509\n0.000\n3.730\n1.12247591\nNA\n0.76664087\n\n\nSFER\n20\n6.250000e-03\n55\n0.6554364\n0.000\n3.215\n1.16426188\nNA\n0.34897999\n\n\nSFER\n21.25\nNA\n1\n0.7200000\n0.720\n0.720\nNA\nNA\nNA\n\n\nSFER\n21.5\n1.525000e-02\n53\n0.5626981\n0.000\n4.046\n1.36983850\nNA\n0.37064998\n\n\nSFER\n21LK\n-1.000000e-03\n56\n0.5032500\n0.000\n4.495\n1.49502986\nNA\n1.00000000\n\n\nSFER\n22\n8.625000e-03\n56\n0.5931786\n0.000\n4.900\n1.66614576\nNA\n0.49390006\n\n\nSFER\n22.5\n1.458333e-02\n52\n0.5166154\n0.000\n3.310\n1.21874496\nNA\n0.13784657\n\n\nSFER\n23\n2.192857e-02\n56\n0.6028750\n0.000\n3.528\n1.15602216\nNA\n0.33818051\n\n\nSFER\n24\n1.672222e-02\n56\n0.8489107\n0.000\n6.833\n1.53718560\nNA\n0.30593662\n\n\nSFER\n3\n3.666667e-02\n53\n0.5171887\n0.000\n1.945\n0.81883065\nNA\n0.18172182\n\n\nSFER\n30\n2.340000e-02\n53\n0.5486038\n0.000\n3.287\n1.28935336\nNA\n0.18435095\n\n\nSFER\n30.5\n4.137500e-02\n53\n0.5616415\n0.000\n4.363\n1.21815642\nNA\n0.05372893\n\n\nSFER\n31\n7.196429e-03\n54\n0.5409630\n0.000\n2.702\n1.06769475\nNA\n0.60384825\n\n\nSFER\n32\n1.285714e-03\n55\n0.5725636\n0.000\n2.728\n1.11134391\nNA\n0.88630694\n\n\nSFER\n33\n2.000000e-02\n55\n0.6174727\n0.000\n2.441\n0.89256348\nNA\n0.88630694\n\n\nSFER\n34\n6.500000e-03\n55\n0.8895455\n0.000\n4.640\n1.07370560\nNA\n0.82975304\n\n\nSFER\n39\n2.438889e-02\n47\n0.7509787\n0.000\n6.076\n1.20940345\nNA\n0.44359843\n\n\nSFER\n4\n2.600000e-03\n43\n0.4424651\n0.000\n1.261\n0.69634888\nNA\n1.00000000\n\n\nSFER\n40\n4.300000e-03\n51\n0.7406863\n0.000\n6.386\n1.33714657\nNA\n1.00000000\n\n\nSFER\n41\n2.428571e-02\n53\n0.6090755\n0.000\n2.906\n0.93461303\nNA\n0.33076626\n\n\nSFER\n42\n2.555556e-02\n54\n0.4742037\n0.000\n1.400\n0.80266572\nNA\n0.16432928\n\n\nSFER\n45\n1.031250e-02\n54\n0.7602778\n0.000\n5.410\n1.38457935\nNA\n0.88453505\n\n\nSFER\n46\n1.171429e-02\n55\n0.6403091\n0.000\n4.927\n1.15282983\nNA\n0.56737949\n\n\nSFER\n47\n3.180000e-02\n55\n0.7765455\n0.000\n3.541\n0.97260060\nNA\n0.25269406\n\n\nSFER\n48\n1.666667e-03\n54\n0.7957963\n0.000\n7.808\n1.46869363\nNA\n0.94165293\n\n\nSFER\n49\n5.369048e-03\n52\n0.9535192\n0.000\n7.122\n1.31012596\nNA\n0.60840780\n\n\nSFER\n5\n-9.285714e-03\n43\n0.4476512\n0.000\n1.168\n0.73615277\nNA\n0.70914701\n\n\nSFER\n5.5\n2.750000e-02\n45\n0.6622667\n0.000\n4.672\n1.18875726\nNA\n0.39175223\n\n\nSFER\n50\n2.666667e-02\n54\n1.0227037\n0.000\n13.342\n1.85847895\nNA\n0.38104805\n\n\nSFER\n51\n4.300000e-02\n55\n0.8174182\n0.000\n4.095\n0.96637068\nNA\n0.22305790\n\n\nSFER\n52\n2.555556e-02\n53\n0.8622453\n0.000\n3.769\n0.89749718\nNA\n0.55061576\n\n\nSFER\n53\n-3.783333e-02\n50\n0.9238000\n0.000\n6.884\n1.34571692\nNA\n0.62069072\n\n\nSFER\n54\n-5.633333e-03\n67\n1.1505821\n0.000\n14.135\n1.71914191\nNA\n0.86982963\n\n\nSFER\n55\n-8.333333e-03\n69\n0.7782899\n0.000\n3.990\n1.05180042\nNA\n0.83072776\n\n\nSFER\n56\n-1.147222e-02\n70\n0.6754429\n0.000\n3.113\n0.86232455\nNA\n0.63608110\n\n\nSFER\n57\n3.000000e-02\n71\n0.7059014\n0.000\n2.717\n0.89777188\nNA\n0.27598409\n\n\nSFER\n57.1\n2.404167e-02\n71\n0.6582254\n0.000\n3.640\n1.01414092\nNA\n0.07739066\n\n\nSFER\n57.2\n2.663393e-02\n71\n0.5324366\n0.000\n3.368\n1.06742958\n0.02663393\n0.03285944\n\n\nSFER\n57.3\n2.444444e-02\n67\n0.5601045\n0.000\n2.162\n1.00970935\nNA\n0.08141261\n\n\nSFER\n58\n-5.125000e-03\n53\n0.5543396\n0.000\n2.661\n1.04194215\nNA\n0.88203830\n\n\nSFER\n59\n4.662500e-02\n53\n0.7960377\n0.000\n5.880\n1.21661750\nNA\n0.05470862\n\n\nSFER\n6\n-4.250000e-03\n46\n0.5862826\n0.000\n4.651\n1.46416751\nNA\n1.00000000\n\n\nSFER\n6.5\n8.952381e-03\n47\n0.5194043\n0.000\n4.408\n1.32983826\nNA\n0.79649897\n\n\nSFER\n60\n-2.500000e-02\n55\n0.9050182\n0.000\n5.150\n1.11003511\nNA\n0.29982906\n\n\nSFER\n61\n-8.571429e-04\n55\n0.8426545\n0.000\n4.460\n0.98382557\nNA\n1.00000000\n\n\nSFER\n62\n-1.600000e-02\n55\n0.8432182\n0.000\n3.226\n0.92048538\nNA\n0.65679471\n\n\nSFER\n63\n-1.505000e-02\n53\n0.7753585\n0.000\n3.070\n0.86563348\nNA\n0.43158413\n\n\nSFER\n64\n-2.916667e-02\n48\n0.8727083\n0.000\n3.128\n0.91606786\nNA\n0.42511725\n\n\nSFER\n65\n-3.333333e-05\n51\n1.0740196\n0.000\n5.060\n1.11154384\nNA\n1.00000000\n\n\nSFER\n66\n2.055952e-02\n52\n0.9130769\n0.000\n11.204\n1.71419592\nNA\n0.29587985\n\n\nSFER\n67\n8.428571e-03\n52\n0.9528077\n0.000\n6.443\n1.35289715\nNA\n0.63348201\n\n\nSFER\n68\n-2.380000e-02\n54\n0.7242778\n0.000\n3.861\n1.01280199\nNA\n0.71439304\n\n\nSFER\n69\n2.270635e-02\n42\n0.9446905\n0.000\n9.150\n1.71660983\nNA\n0.58685947\n\n\nSFER\n7\n0.000000e+00\n54\n0.5815370\n0.000\n1.850\n0.78259293\nNA\n1.00000000\n\n\nSFER\n70\n-1.168750e-02\n42\n0.7937381\n0.000\n3.719\n1.14238202\nNA\n0.58685947\n\n\nSFER\n71\nNA\n1\n0.6800000\n0.680\n0.680\nNA\nNA\nNA\n\n\nSFER\n8\n6.375000e-03\n56\n0.4685357\n0.000\n3.145\n1.21433013\nNA\n0.68424133\n\n\nSFER\n9\n-5.000000e-03\n56\n0.5305893\n0.000\n3.991\n1.23682406\nNA\n0.83850208\n\n\nSFER\n9.5\n2.425000e-02\n52\n0.6440769\n0.000\n10.584\n2.27364893\nNA\n0.41141041\n\n\nSFER\n9.6\nNA\n1\n0.0000000\n0.000\n0.000\nNA\nNA\nNA\n\n\nSFER\n9.7\nNA\n1\n0.0000000\n0.000\n0.000\nNA\nNA\nNA\n\n\nSFER\n9.8\nNA\n1\n0.0000000\n0.000\n0.000\nNA\nNA\nNA\n\n\nSFER\nAC1\nNA\n1\n0.9500000\n0.950\n0.950\nNA\nNA\nNA\n\n\nSFER\nAC2\nNA\n1\n1.0700000\n1.070\n1.070\nNA\nNA\nNA\n\n\nSFER\nAC3\nNA\n1\n0.9700000\n0.970\n0.970\nNA\nNA\nNA\n\n\nSFER\nAC4\nNA\n1\n0.7000000\n0.700\n0.700\nNA\nNA\nNA\n\n\nSFER\nAC5\nNA\n1\n0.6900000\n0.690\n0.690\nNA\nNA\nNA\n\n\nSFER\nAC6\nNA\n1\n1.4100000\n1.410\n1.410\nNA\nNA\nNA\n\n\nSFER\nAMI1\n-1.700000e-01\n26\n0.7661538\n0.080\n3.685\n1.09759908\nNA\n0.20421927\n\n\nSFER\nAMI2\n-1.340000e-01\n26\n0.7063846\n0.040\n3.463\n0.96993171\nNA\n0.20421927\n\n\nSFER\nAMI3\n3.500000e-02\n26\n0.6017692\n0.005\n3.544\n1.26772593\nNA\n1.00000000\n\n\nSFER\nAMI4\n6.000000e-02\n25\n0.6017600\n0.150\n1.890\n0.66990874\nNA\n0.65199847\n\n\nSFER\nAMI5\n-3.000000e-01\n26\n0.7049231\n0.050\n3.905\n1.06324769\n-0.30000000\n0.01110922\n\n\nSFER\nAMI6\n-1.270000e-01\n26\n0.4906923\n0.010\n1.245\n0.70681408\nNA\n0.67214397\n\n\nSFER\nAMI7\n-1.250000e-01\n26\n0.4495385\n0.000\n4.083\n1.77179168\nNA\n0.20421927\n\n\nSFER\nAMI8\n-1.100000e-01\n26\n0.5790385\n0.000\n1.790\n0.78902886\nNA\n0.27901631\n\n\nSFER\nAMI9\n3.250000e-02\n26\n0.7615769\n0.000\n6.510\n1.71069765\nNA\n1.00000000\n\n\nSFER\nBG1\n-1.250000e-01\n24\n1.4925000\n0.020\n6.435\n1.06924696\nNA\n0.36707002\n\n\nSFER\nBG10\nNA\n1\n0.4300000\n0.430\n0.430\nNA\nNA\nNA\n\n\nSFER\nBG11\nNA\n1\n0.3800000\n0.380\n0.380\nNA\nNA\nNA\n\n\nSFER\nBG12\nNA\n1\n7.0700000\n7.070\n7.070\nNA\nNA\nNA\n\n\nSFER\nBG13\nNA\n1\n1.4400000\n1.440\n1.440\nNA\nNA\nNA\n\n\nSFER\nBG14\nNA\n1\n1.8100000\n1.810\n1.810\nNA\nNA\nNA\n\n\nSFER\nBG15\nNA\n1\n1.7600000\n1.760\n1.760\nNA\nNA\nNA\n\n\nSFER\nBG16\nNA\n1\n1.8100000\n1.810\n1.810\nNA\nNA\nNA\n\n\nSFER\nBG17\nNA\n1\n0.7600000\n0.760\n0.760\nNA\nNA\nNA\n\n\nSFER\nBG18\nNA\n1\n0.2300000\n0.230\n0.230\nNA\nNA\nNA\n\n\nSFER\nBG2\n2.787500e-02\n29\n1.1005517\n0.020\n5.306\n0.97996541\nNA\n0.86110827\n\n\nSFER\nBG20\nNA\n1\n0.2000000\n0.200\n0.200\nNA\nNA\nNA\n\n\nSFER\nBG3\n-5.800000e-02\n29\n0.9536207\n0.090\n7.820\n1.61845468\nNA\n0.38167307\n\n\nSFER\nBG4\n-1.305000e-01\n29\n0.7300000\n0.000\n2.807\n1.00468710\nNA\n0.05427953\n\n\nSFER\nBG6\n-3.000000e-02\n11\n0.5154545\n0.040\n1.795\n0.91367685\nNA\n1.00000000\n\n\nSFER\nBG7\n8.500000e-02\n11\n0.6809091\n0.040\n2.240\n0.91979082\nNA\n1.00000000\n\n\nSFER\nBG8\nNA\n1\n2.4900000\n2.490\n2.490\nNA\nNA\nNA\n\n\nSFER\nBG9\nNA\n1\n3.7100000\n3.710\n3.710\nNA\nNA\nNA\n\n\nSFER\nBK1\nNA\n1\n0.0000000\n0.000\n0.000\nNA\nNA\nNA\n\n\nSFER\nCAL1\n-6.660000e-02\n31\n1.0099355\n0.132\n4.293\n0.93622247\nNA\n0.37460825\n\n\nSFER\nCAL2\n-2.360000e-02\n33\n0.8684545\n0.000\n2.908\n0.89650211\nNA\n0.49356279\n\n\nSFER\nCAL3\n-7.500000e-02\n33\n1.0310909\n0.080\n4.325\n0.94123025\nNA\n0.21780875\n\n\nSFER\nCAL4\n-5.670000e-02\n33\n0.6785758\n0.049\n3.119\n0.98792099\nNA\n0.21780875\n\n\nSFER\nCAL5\n1.260000e-02\n33\n0.7551818\n0.030\n2.970\n0.99637440\nNA\n0.89108562\n\n\nSFER\nCAL6\n-1.066250e-01\n27\n0.6336667\n0.000\n2.203\n0.86869460\nNA\n0.18059962\n\n\nSFER\nCAL7\nNA\n1\n2.4130000\n2.413\n2.413\nNA\nNA\nNA\n\n\nSFER\nCAL8\nNA\n1\n1.7470000\n1.747\n1.747\nNA\nNA\nNA\n\n\nSFER\nCALA\nNA\n1\n0.4590000\n0.459\n0.459\nNA\nNA\nNA\n\n\nSFER\nCK1\nNA\n1\n0.6770000\n0.677\n0.677\nNA\nNA\nNA\n\n\nSFER\nCK2\nNA\n1\n0.3880000\n0.388\n0.388\nNA\nNA\nNA\n\n\nSFER\nCW1\n-1.422500e-01\n16\n1.3818125\n0.290\n7.210\n1.20286741\nNA\n0.73409518\n\n\nSFER\nCW2\n-9.120000e-02\n16\n0.8763125\n0.100\n2.180\n0.81899647\nNA\n1.00000000\n\n\nSFER\nCW3\n3.618000e-01\n17\n1.1486471\n0.140\n4.160\n1.02354233\nNA\n0.16005735\n\n\nSFER\nCW4\n3.750000e-01\n16\n0.7733125\n0.050\n1.780\n0.65426165\nNA\n0.08942936\n\n\nSFER\nCW5\n6.500000e-01\n12\n0.6887500\n0.150\n1.500\n0.64289129\nNA\n0.47010076\n\n\nSFER\nCW6\n6.000000e-02\n12\n0.7074167\n0.030\n2.930\n1.15255414\nNA\n1.00000000\n\n\nSFER\nCW7\n5.000000e-01\n11\n0.3845455\n0.070\n0.870\n0.69800911\nNA\n0.37109337\n\n\nSFER\nCaseyhole\nNA\n1\n0.2610000\n0.261\n0.261\nNA\nNA\nNA\n\n\nSFER\nEH07\nNA\n1\n1.6080000\n1.608\n1.608\nNA\nNA\nNA\n\n\nSFER\nEH08\nNA\n1\n3.1110000\n3.111\n3.111\nNA\nNA\nNA\n\n\nSFER\nEKIN\n-2.792857e-02\n51\n0.5153922\n0.000\n2.894\n1.08805692\n-0.02792857\n0.02203881\n\n\nSFER\nEKMID\n-2.750000e-02\n52\n0.4478654\n0.000\n2.470\n0.97519381\nNA\n0.11001164\n\n\nSFER\nEKOFF\n1.220000e-02\n53\n0.4643585\n0.000\n2.212\n0.91194357\nNA\n0.56131407\n\n\nSFER\nGP1\nNA\n4\n0.4290000\n0.164\n1.042\n0.96056342\nNA\nNA\n\n\nSFER\nGP2\nNA\n4\n0.4777500\n0.000\n1.055\n0.92638376\nNA\nNA\n\n\nSFER\nGP3\nNA\n4\n0.5230000\n0.210\n1.243\n0.92534461\nNA\nNA\n\n\nSFER\nGP4\nNA\n4\n0.4367500\n0.141\n1.084\n0.99668570\nNA\nNA\n\n\nSFER\nGP5\n-6.210000e-02\n33\n0.5090000\n0.000\n1.932\n0.76146950\nNA\n0.89108562\n\n\nSFER\nGS\nNA\n1\n0.3340000\n0.334\n0.334\nNA\nNA\nNA\n\n\nSFER\nGlider\nNA\n2\n0.4900000\n0.310\n0.670\n0.51950702\nNA\nNA\n\n\nSFER\nHB1\nNA\n1\n0.4400000\n0.440\n0.440\nNA\nNA\nNA\n\n\nSFER\nHB2\nNA\n1\n1.9000000\n1.900\n1.900\nNA\nNA\nNA\n\n\nSFER\nHB3\nNA\n1\n2.1900000\n2.190\n2.190\nNA\nNA\nNA\n\n\nSFER\nHB4\nNA\n1\n1.6400000\n1.640\n1.640\nNA\nNA\nNA\n\n\nSFER\nHB5\nNA\n1\n1.3400000\n1.340\n1.340\nNA\nNA\nNA\n\n\nSFER\nHB6\nNA\n1\n0.0700000\n0.070\n0.070\nNA\nNA\nNA\n\n\nSFER\nJunkpile\nNA\n1\n0.3880000\n0.388\n0.388\nNA\nNA\nNA\n\n\nSFER\nKW1\n3.950000e-02\n33\n0.6290000\n0.030\n3.324\n1.05552027\nNA\n0.24985077\n\n\nSFER\nKW2\n3.195000e-02\n33\n0.9227879\n0.000\n3.785\n0.99421042\nNA\n0.47654621\n\n\nSFER\nKW3\n2.650000e-02\n33\n0.5680909\n0.000\n3.667\n1.15348242\nNA\n0.66929113\n\n\nSFER\nKW4\n6.050000e-02\n32\n0.6671563\n0.000\n2.800\n0.98972586\nNA\n0.46421431\n\n\nSFER\nL1\n3.500000e-02\n9\n0.7055556\n0.050\n3.400\n1.45944877\nNA\n1.00000000\n\n\nSFER\nL3\n-3.000000e-02\n9\n0.4233333\n0.000\n2.300\n1.71153918\nNA\n1.00000000\n\n\nSFER\nL5\n-5.500000e-02\n9\n0.4833333\n0.030\n1.770\n1.28525896\nNA\n1.00000000\n\n\nSFER\nL7\n-1.275000e-01\n9\n0.3738889\n0.120\n1.100\n0.85193654\nNA\n0.47950012\n\n\nSFER\nL9\n-3.400000e-01\n10\n0.5070000\n0.010\n1.560\n1.03022669\nNA\n1.00000000\n\n\nSFER\nM01\nNA\n1\n0.8420000\n0.842\n0.842\nNA\nNA\nNA\n\n\nSFER\nM02\nNA\n1\n1.2470000\n1.247\n1.247\nNA\nNA\nNA\n\n\nSFER\nM03\nNA\n1\n1.2450000\n1.245\n1.245\nNA\nNA\nNA\n\n\nSFER\nM04\nNA\n1\n1.0190000\n1.019\n1.019\nNA\nNA\nNA\n\n\nSFER\nM05\nNA\n1\n1.2380000\n1.238\n1.238\nNA\nNA\nNA\n\n\nSFER\nMR\n-4.875000e-03\n54\n0.4642037\n0.000\n3.104\n1.14508333\nNA\n0.78235947\n\n\nSFER\nMudhole\nNA\n1\n0.3260000\n0.326\n0.326\nNA\nNA\nNA\n\n\nSFER\nNaplesBlueHole\nNA\n1\n0.2260000\n0.226\n0.226\nNA\nNA\nNA\n\n\nSFER\nPLUME\nNA\n1\n0.8700000\n0.870\n0.870\nNA\nNA\nNA\n\n\nSFER\nROME4\n3.300000e-01\n11\n0.5354545\n0.030\n1.720\n1.17182864\nNA\n0.37109337\n\n\nSFER\nROME5\n-3.000000e-02\n11\n0.8731818\n0.190\n3.960\n1.21497236\nNA\n1.00000000\n\n\nSFER\nRP1\n-3.575000e-02\n33\n0.9912727\n0.030\n4.020\n1.09597775\nNA\n0.89108562\n\n\nSFER\nRP2\n4.400000e-02\n33\n0.7791515\n0.000\n3.391\n1.02319576\nNA\n0.89108562\n\n\nSFER\nRP3\n-1.000000e-02\n34\n0.7539118\n0.000\n2.434\n0.89409133\nNA\n0.69717236\n\n\nSFER\nRP4\n-3.666667e-03\n33\n0.9404545\n0.043\n3.900\n1.12307773\nNA\n0.89108562\n\n\nSFER\nRedTide\nNA\n1\n0.4260000\n0.426\n0.426\nNA\nNA\nNA\n\n\nSFER\nTB1\n-6.815000e-02\n29\n0.9885517\n0.030\n7.810\n1.55479626\nNA\n0.59965920\n\n\nSFER\nTB10\n-1.900000e-01\n27\n6.2487407\n0.030\n152.500\n4.67821411\nNA\n0.10959858\n\n\nSFER\nTB11\nNA\n2\n0.4425000\n0.420\n0.465\n0.07190916\nNA\nNA\n\n\nSFER\nTB12\nNA\n1\n0.3560000\n0.356\n0.356\nNA\nNA\nNA\n\n\nSFER\nTB13\nNA\n1\n0.4560000\n0.456\n0.456\nNA\nNA\nNA\n\n\nSFER\nTB2\n-4.400000e-02\n29\n0.7601034\n0.010\n3.240\n0.91550438\nNA\n0.86110827\n\n\nSFER\nTB3\n-6.887500e-02\n29\n0.8317241\n0.110\n4.217\n0.93529806\nNA\n0.86110827\n\n\nSFER\nTB4\n-4.600000e-02\n29\n0.6215517\n0.030\n1.987\n0.82274870\nNA\n0.38167307\n\n\nSFER\nTB5\n-4.250000e-02\n29\n0.5476552\n0.010\n1.950\n0.81749135\nNA\n0.47719662\n\n\nSFER\nTB6\nNA\n2\n1.3945000\n0.569\n2.220\n0.83716981\nNA\nNA\n\n\nSFER\nTB7\nNA\n2\n1.0340000\n0.609\n1.459\n0.58127733\nNA\nNA\n\n\nSFER\nTB8\nNA\n2\n0.6745000\n0.388\n0.961\n0.60070005\nNA\nNA\n\n\nSFER\nTB9\nNA\n2\n0.9080000\n0.436\n1.380\n0.73514185\nNA\nNA\n\n\nSFER\nTBA\nNA\n1\n0.4470000\n0.447\n0.447\nNA\nNA\nNA\n\n\nSFER\nTBB\nNA\n1\n0.4990000\n0.499\n0.499\nNA\nNA\nNA\n\n\nSFER\nTBC\nNA\n1\n0.5100000\n0.510\n0.510\nNA\nNA\nNA\n\n\nSFER\nUKIN\n-1.163095e-02\n52\n0.4898077\n0.000\n2.822\n1.07006970\nNA\n0.60647300\n\n\nSFER\nUKMID\n-1.500000e-02\n53\n0.4628491\n0.000\n2.947\n1.15686122\nNA\n0.19892427\n\n\nSFER\nUKOFF\n1.666667e-03\n53\n0.4703208\n0.000\n2.615\n1.18540264\nNA\n0.77528283\n\n\nSFER\nV1\n3.750000e-02\n30\n0.7999000\n0.000\n3.549\n1.02331467\nNA\n0.63804245\n\n\nSFER\nV10\nNA\n1\n0.2660000\n0.266\n0.266\nNA\nNA\nNA\n\n\nSFER\nV11\nNA\n1\n0.3220000\n0.322\n0.322\nNA\nNA\nNA\n\n\nSFER\nV2\n-7.400000e-02\n29\n0.6173103\n0.060\n3.530\n1.09723401\nNA\n0.11533218\n\n\nSFER\nV3\n-1.129167e-01\n29\n0.6282414\n0.000\n3.386\n1.16501704\nNA\n0.22067136\n\n\nSFER\nV4\n-7.979167e-02\n30\n0.5021667\n0.000\n1.490\n0.73915245\nNA\n0.34076185\n\n\nSFER\nV5\n-1.100000e-01\n29\n0.6415172\n0.000\n3.780\n1.33614504\nNA\n0.05427953\n\n\nSFER\nV6\n-4.750000e-03\n30\n0.6940000\n0.000\n3.548\n1.21282882\nNA\n1.00000000\n\n\nSFER\nV7\n6.000000e-02\n30\n0.7279333\n0.000\n2.275\n0.83788343\nNA\n0.62029402\n\n\nSFER\nV8\n-6.100000e-03\n29\n0.4334483\n0.000\n1.768\n1.04880314\nNA\n0.59965920\n\n\nSFER\nV9\n-7.020000e-02\n30\n0.5865333\n0.020\n3.787\n1.34344573\nNA\n0.40896134\n\n\nSFER\nWS\n0.000000e+00\n55\n0.4306364\n0.000\n3.188\n1.21611395\nNA\n0.94390732\n\n\nSFER\nZ03027\nNA\n1\n0.3600000\n0.360\n0.360\nNA\nNA\nNA\n\n\nSFER\nZ03076\nNA\n1\n0.4760000\n0.476\n0.476\nNA\nNA\nNA\n\n\nSFER\nZ03116\nNA\n1\n0.3820000\n0.382\n0.382\nNA\nNA\nNA\n\n\nSFER\nZ03146\nNA\n1\n0.5860000\n0.586\n0.586\nNA\nNA\nNA\n\n\nSFER\nZ03198\nNA\n1\n0.6120000\n0.612\n0.612\nNA\nNA\nNA\n\n\nSFER\nZ04067\nNA\n1\n1.2540000\n1.254\n1.254\nNA\nNA\nNA\n\n\nSFER\nZ04068\nNA\n1\n1.1050000\n1.105\n1.105\nNA\nNA\nNA\n\n\nSFER\nZ04093\nNA\n1\n0.5970000\n0.597\n0.597\nNA\nNA\nNA\n\n\nSFER\nZ04099\nNA\n1\n0.3500000\n0.350\n0.350\nNA\nNA\nNA\n\n\nSFER\nZ04110\nNA\n1\n0.3090000\n0.309\n0.309\nNA\nNA\nNA\n\n\nSFER\nZ04610\nNA\n1\n0.3400000\n0.340\n0.340\nNA\nNA\nNA\n\n\n\n\n\n\n\n\n\nReporting Programs:\n\n\ndisplay reporting programs\nlibrary(ggplot2)\nggplot(df, aes(x = program)) +\n  geom_bar() +\n  labs(title = \"Reporting Programs\", x = \"Program\", y = \"Count\")"
  },
  {
    "objectID": "analyte_reports/analyte_reports/Dissolved_Oxygen.html",
    "href": "analyte_reports/analyte_reports/Dissolved_Oxygen.html",
    "title": "Dissolved_Oxygen Report",
    "section": "",
    "text": "get data across all programs, filter for analyte\nlibrary('here')\nlibrary('dplyr')\nsource(here(\"R/getAllData.R\"))\nfull_df &lt;- getAllData()\ndf &lt;- filter(full_df, DEP.Analyte.Name == params$analyte)\n\n\n\n\ncreate .csv of analyte data\n# save df to csv\n# reduce to only cols we need & save to csv\ndf %&gt;%\n  mutate(\n    source = program,\n    site = Monitoring.Location.ID,\n    datetime = Activity.Start.Date.Time,\n    analyte = DEP.Analyte.Name,\n    value = DEP.Result.Value.Number,\n    units = DEP.Result.Unit,\n    latitude = Org.Decimal.Latitude,\n    longitude = Org.Decimal.Longitude,\n    sample_depth = Activity.Depth,\n    .keep = \"none\"\n) %&gt;%\n  write.csv(here(\"data\", \"exports\", \"unified-wq-db-samples\", paste0(params$analyte, \".csv\")))\n\n\nDownload data for this analyte here\n\nHistogram of DEP.Result.Value.Number:\n\n\ndisplay histogram of values\nlibrary(ggplot2)\nggplot(df, aes(x = DEP.Result.Value.Number)) +\n  geom_histogram(bins = 30, fill = \"blue\", color = \"black\") +\n  labs(title = \"Histogram of Values\", x = \"Value\", y = \"Count\")\n\n\n\n\n\n\n\n\n\n\n\nStation Statistics:\n\n\ncreate station statistics dataframe\nsource(here(\"R/seasonalMannKendall.R\"))\nlibrary(lubridate)  # for mdy_hms()\nlibrary(pander)  # for display\n\n# create table of samples for each station\nsamples_df &lt;- df %&gt;%\n  select(\n    program, \n    Monitoring.Location.ID, \n    Activity.Start.Date.Time,\n    analyte = DEP.Analyte.Name,\n    DEP.Result.Value.Number, \n    DEP.Result.Unit,\n    latitude = Org.Decimal.Latitude,\n    longitude = Org.Decimal.Longitude,\n    sample_depth = Activity.Depth\n    ) %&gt;%\n  # drop any with empty Monitoring.Location.ID\n  filter(!is.na(Monitoring.Location.ID)) %&gt;%\n  # drop any with empty Activity.Start.Date.Time\n  filter(!is.na(Activity.Start.Date.Time)) %&gt;%\n  # parse the \"MM/DD/YYYY HH:MM:SS\" strings into POSIXct\n  mutate(Activity.Start.Date.Time = mdy_hms(\n          Activity.Start.Date.Time,\n          tz = \"UTC\")) %&gt;%\n  distinct()\n\n\n# add statistics for each station\nsample_stats_df &lt;- samples_df %&gt;%\n  group_by(program, Monitoring.Location.ID) %&gt;%\n  reframe(\n    {\n      tmp &lt;- seasonalMannKendallVectorized(\n        Activity.Start.Date.Time,\n        DEP.Result.Value.Number\n      )\n    },\n    n_values = n(),\n    mean = mean(DEP.Result.Value.Number),\n    min = min(DEP.Result.Value.Number),\n    max = max(DEP.Result.Value.Number),\n    coefficient.of.variation = sd(DEP.Result.Value.Number) / mean(DEP.Result.Value.Number)\n  ) %&gt;%\n  mutate(\n    # create column significant_slope\n    significant_slope = ifelse(z &lt;= 0.05, slope, NA_real_),\n    pvalue = z\n  ) %&gt;%\n  # drop unwanted columns added by seasonalMannKendall\n  select(\n    -z,\n    -tau,\n    -chi_square\n  )\n\n\n\n# print(head(sample_stats_df))\n# # display sample_stats_df with pander\n# pander(sample_stats_df)\n\n\n\n\nsave stats to csv\nsample_stats_df %&gt;%\n  write.csv(here(\n    \"data\", \"exports\", \"seasonal-mann-kendall-stats\", paste0(params$analyte, \".csv\")))\n\n\nDownload data for this analyte’s statistics here\n\n\ndisplay with gt\nlibrary(gt)\nlibrary(scales)\nlibrary(tidyselect)  # for all_of()\nlibrary(RColorBrewer) # for brewer.pal()\n\n# ── color_column() ─────────────────────────────────────────────────────────────\n# gt_tbl   : a gt object that you’ve already created (e.g. `sample_stats_df %&gt;% gt()`)\n# df       : the original data.frame (must contain the column you want to color)\n# column   : a string, e.g. \"slope\" or \"n_values\"\n# palette  : a character vector of colours to feed to col_numeric()\n#\ncolor_column &lt;- function(gt_tbl, df, column, \n                         palette = c(\"red\", \"orange\", \"yellow\", \"green\", \"blue\", \"violet\"),\n                         domain = NULL) {\n  # 1) Pull out that column’s numeric values\n  vals &lt;- df[[column]]\n  if (!is.numeric(vals)) {\n    stop(sprintf(\"`%s` is not numeric; data_color() requires a numeric column.\", column))\n  }\n  \n  # 2) Compute its min and max (ignoring NA)\n  min_val &lt;- min(vals, na.rm = TRUE)\n  max_val &lt;- max(vals, na.rm = TRUE)\n  if (is.null(domain)) {\n    domain &lt;- c(min_val, max_val)\n  }\n  \n  # 3) Call data_color() on the gt table for that single column\n  gt_tbl %&gt;%\n    data_color(\n      columns = all_of(column),\n      colors  = col_numeric(\n        palette = palette,\n        domain  = domain\n      )\n    )\n}\nlibrary(dplyr)\nlibrary(gt)\n\n# 1) First build your gt table as usual:\ngt_tbl &lt;- sample_stats_df %&gt;% \n  gt()\n\n# slope blue (-) to red (+) (0 centered)\ntryCatch({\n  min_slope &lt;- min(sample_stats_df$slope,  na.rm = TRUE)\n  max_slope &lt;- max(sample_stats_df$slope,  na.rm = TRUE)\n  max_abs_slope &lt;- max(abs(min_slope), abs(max_slope))\n  gt_tbl &lt;- color_column(\n    gt_tbl, \n    df     = sample_stats_df, \n    column = \"slope\",\n    palette = rev(brewer.pal(11, \"RdBu\")),\n    domain  = c(-max_abs_slope, max_abs_slope)\n  )\n}, error = function(e) {\n  print(\"Error in slope color column\")\n  print(e)\n})\n\n\n[1] \"Error in slope color column\"\n&lt;rlang_error in col_numeric(palette = palette, domain = domain): Wasn't able to determine range of `domain`&gt;\n\n\ndisplay with gt\ntryCatch({\n  # pvalue Z\n  gt_tbl &lt;- color_column(\n    gt_tbl, \n    df      = sample_stats_df, \n    column  = \"z\", \n    palette = scales::brewer_pal(palette = \"Blues\")(9)\n  )\n}, error = function(e) {\n  print(\"Error in z color column\")\n  print(e)\n})\n\n\n[1] \"Error in z color column\"\n&lt;simpleError in color_column(gt_tbl, df = sample_stats_df, column = \"z\", palette = (scales::brewer_pal(palette = \"Blues\"))(9)): `z` is not numeric; data_color() requires a numeric column.&gt;\n\n\ndisplay with gt\n# slope blue (-) to red (+) (0 centered)\ntryCatch({\n  min_slope &lt;- min(sample_stats_df$significant_slope,  na.rm = TRUE)\n  max_slope &lt;- max(sample_stats_df$significant_slope,  na.rm = TRUE)\n  max_abs_slope &lt;- max(abs(min_slope), abs(max_slope))\n  gt_tbl &lt;- color_column(\n    gt_tbl, \n    df     = sample_stats_df, \n    column = \"significant_slope\",\n    palette = rev(brewer.pal(11, \"RdBu\")),\n    domain  = c(-max_abs_slope, max_abs_slope)\n  )\n}, error = function(e) {\n  print(\"Error in significant_slope color column\")\n  print(e)\n})\n\n\n[1] \"Error in significant_slope color column\"\n&lt;simpleError in color_column(gt_tbl, df = sample_stats_df, column = \"significant_slope\",     palette = rev(brewer.pal(11, \"RdBu\")), domain = c(-max_abs_slope,         max_abs_slope)): `significant_slope` is not numeric; data_color() requires a numeric column.&gt;\n\n\ndisplay with gt\ntryCatch({\n  # mean values blue to red (0 centered)\n  min_mean &lt;- min(sample_stats_df$mean,  na.rm = TRUE)\n  max_mean &lt;- max(sample_stats_df$mean,  na.rm = TRUE)\n  max_abs_mean &lt;- max(abs(min_mean), abs(max_mean))\n  gt_tbl &lt;- color_column(\n    gt_tbl, \n    df     = sample_stats_df, \n    column = \"mean\",\n    palette = rev(brewer.pal(11, \"RdBu\")),\n    domain  = c(-max_abs_mean, max_abs_mean)\n  )\n}, error = function(e) {\n  print(\"Error in mean color column\")\n  print(e)\n})\n\n\n[1] \"Error in mean color column\"\n&lt;rlang_error in col_numeric(palette = palette, domain = domain): Wasn't able to determine range of `domain`&gt;\n\n\ndisplay with gt\ntryCatch({\n  # n values white to green\n  gt_tbl &lt;- color_column(\n    gt_tbl, \n    df      = sample_stats_df, \n    column  = \"n_values\", \n    palette = scales::brewer_pal(palette = \"Greens\")(9)\n  )\n}, error = function(e) {\n  print(\"Error in n_values color column\")\n  print(e)\n})\n\n\n[1] \"Error in n_values color column\"\n&lt;rlang_error in col_numeric(palette = palette, domain = domain): Wasn't able to determine range of `domain`&gt;\n\n\ndisplay with gt\ntryCatch({\n  # min\n  gt_tbl &lt;- color_column(\n    gt_tbl, \n    df      = sample_stats_df, \n    column  = \"min\", \n    palette = scales::brewer_pal(palette = \"Blues\")(9)\n  )\n}, error = function(e) {\n  print(\"Error in min color column\")\n  print(e)\n})\n\n\n[1] \"Error in min color column\"\n&lt;rlang_error in col_numeric(palette = palette, domain = domain): Wasn't able to determine range of `domain`&gt;\n\n\ndisplay with gt\ntryCatch({\n  # max\n  gt_tbl &lt;- color_column(\n    gt_tbl, \n    df      = sample_stats_df, \n    column  = \"max\", \n    palette = scales::brewer_pal(palette = \"Blues\")(9)\n  )\n}, error = function(e) {\n  print(\"Error in max color column\")\n  print(e)\n})\n\n\n[1] \"Error in max color column\"\n&lt;rlang_error in col_numeric(palette = palette, domain = domain): Wasn't able to determine range of `domain`&gt;\n\n\ndisplay with gt\ntryCatch({\n  # coefficient.of.variation\n  gt_tbl &lt;- color_column(\n    gt_tbl, \n    df      = sample_stats_df, \n    column  = \"coefficient.of.variation\", \n    palette = scales::brewer_pal(palette = \"Blues\")(9)\n  )\n}, error = function(e) {\n  print(\"Error in coefficient.of.variation color column\")\n  print(e)\n})\n\n\n[1] \"Error in coefficient.of.variation color column\"\n&lt;rlang_error in col_numeric(palette = palette, domain = domain): Wasn't able to determine range of `domain`&gt;\n\n\ndisplay with gt\n# 4) Render/display:\ngt_tbl\n\n\n\n\n\n\n\n\nprogram\nMonitoring.Location.ID\nslope\nn_values\nmean\nmin\nmax\ncoefficient.of.variation\nsignificant_slope\npvalue\n\n\n\n\n\n\n\n\n\n\n\nReporting Programs:\n\n\ndisplay reporting programs\nlibrary(ggplot2)\nggplot(df, aes(x = program)) +\n  geom_bar() +\n  labs(title = \"Reporting Programs\", x = \"Program\", y = \"Count\")"
  },
  {
    "objectID": "analyte_reports/analyte_reports/Fecal_Coliforms.html",
    "href": "analyte_reports/analyte_reports/Fecal_Coliforms.html",
    "title": "Fecal_Coliforms Report",
    "section": "",
    "text": "get data across all programs, filter for analyte\nlibrary('here')\nlibrary('dplyr')\nsource(here(\"R/getAllData.R\"))\nfull_df &lt;- getAllData()\ndf &lt;- filter(full_df, DEP.Analyte.Name == params$analyte)\n\n\n\n\ncreate .csv of analyte data\n# save df to csv\n# reduce to only cols we need & save to csv\ndf %&gt;%\n  mutate(\n    source = program,\n    site = Monitoring.Location.ID,\n    datetime = Activity.Start.Date.Time,\n    analyte = DEP.Analyte.Name,\n    value = DEP.Result.Value.Number,\n    units = DEP.Result.Unit,\n    latitude = Org.Decimal.Latitude,\n    longitude = Org.Decimal.Longitude,\n    sample_depth = Activity.Depth,\n    .keep = \"none\"\n) %&gt;%\n  write.csv(here(\"data\", \"exports\", \"unified-wq-db-samples\", paste0(params$analyte, \".csv\")))\n\n\nDownload data for this analyte here\n\nHistogram of DEP.Result.Value.Number:\n\n\ndisplay histogram of values\nlibrary(ggplot2)\nggplot(df, aes(x = DEP.Result.Value.Number)) +\n  geom_histogram(bins = 30, fill = \"blue\", color = \"black\") +\n  labs(title = \"Histogram of Values\", x = \"Value\", y = \"Count\")\n\n\n\n\n\n\n\n\n\n\n\nStation Statistics:\n\n\ncreate station statistics dataframe\nsource(here(\"R/seasonalMannKendall.R\"))\nlibrary(lubridate)  # for mdy_hms()\nlibrary(pander)  # for display\n\n# create table of samples for each station\nsamples_df &lt;- df %&gt;%\n  select(\n    program, \n    Monitoring.Location.ID, \n    Activity.Start.Date.Time,\n    analyte = DEP.Analyte.Name,\n    DEP.Result.Value.Number, \n    DEP.Result.Unit,\n    latitude = Org.Decimal.Latitude,\n    longitude = Org.Decimal.Longitude,\n    sample_depth = Activity.Depth\n    ) %&gt;%\n  # drop any with empty Monitoring.Location.ID\n  filter(!is.na(Monitoring.Location.ID)) %&gt;%\n  # drop any with empty Activity.Start.Date.Time\n  filter(!is.na(Activity.Start.Date.Time)) %&gt;%\n  # parse the \"MM/DD/YYYY HH:MM:SS\" strings into POSIXct\n  mutate(Activity.Start.Date.Time = mdy_hms(\n          Activity.Start.Date.Time,\n          tz = \"UTC\")) %&gt;%\n  distinct()\n\n\n# add statistics for each station\nsample_stats_df &lt;- samples_df %&gt;%\n  group_by(program, Monitoring.Location.ID) %&gt;%\n  reframe(\n    {\n      tmp &lt;- seasonalMannKendallVectorized(\n        Activity.Start.Date.Time,\n        DEP.Result.Value.Number\n      )\n    },\n    n_values = n(),\n    mean = mean(DEP.Result.Value.Number),\n    min = min(DEP.Result.Value.Number),\n    max = max(DEP.Result.Value.Number),\n    coefficient.of.variation = sd(DEP.Result.Value.Number) / mean(DEP.Result.Value.Number)\n  ) %&gt;%\n  mutate(\n    # create column significant_slope\n    significant_slope = ifelse(z &lt;= 0.05, slope, NA_real_),\n    pvalue = z\n  ) %&gt;%\n  # drop unwanted columns added by seasonalMannKendall\n  select(\n    -z,\n    -tau,\n    -chi_square\n  )\n\n\n\n# print(head(sample_stats_df))\n# # display sample_stats_df with pander\n# pander(sample_stats_df)\n\n\n\n\nsave stats to csv\nsample_stats_df %&gt;%\n  write.csv(here(\n    \"data\", \"exports\", \"seasonal-mann-kendall-stats\", paste0(params$analyte, \".csv\")))\n\n\nDownload data for this analyte’s statistics here\n\n\ndisplay with gt\nlibrary(gt)\nlibrary(scales)\nlibrary(tidyselect)  # for all_of()\nlibrary(RColorBrewer) # for brewer.pal()\n\n# ── color_column() ─────────────────────────────────────────────────────────────\n# gt_tbl   : a gt object that you’ve already created (e.g. `sample_stats_df %&gt;% gt()`)\n# df       : the original data.frame (must contain the column you want to color)\n# column   : a string, e.g. \"slope\" or \"n_values\"\n# palette  : a character vector of colours to feed to col_numeric()\n#\ncolor_column &lt;- function(gt_tbl, df, column, \n                         palette = c(\"red\", \"orange\", \"yellow\", \"green\", \"blue\", \"violet\"),\n                         domain = NULL) {\n  # 1) Pull out that column’s numeric values\n  vals &lt;- df[[column]]\n  if (!is.numeric(vals)) {\n    stop(sprintf(\"`%s` is not numeric; data_color() requires a numeric column.\", column))\n  }\n  \n  # 2) Compute its min and max (ignoring NA)\n  min_val &lt;- min(vals, na.rm = TRUE)\n  max_val &lt;- max(vals, na.rm = TRUE)\n  if (is.null(domain)) {\n    domain &lt;- c(min_val, max_val)\n  }\n  \n  # 3) Call data_color() on the gt table for that single column\n  gt_tbl %&gt;%\n    data_color(\n      columns = all_of(column),\n      colors  = col_numeric(\n        palette = palette,\n        domain  = domain\n      )\n    )\n}\nlibrary(dplyr)\nlibrary(gt)\n\n# 1) First build your gt table as usual:\ngt_tbl &lt;- sample_stats_df %&gt;% \n  gt()\n\n# slope blue (-) to red (+) (0 centered)\ntryCatch({\n  min_slope &lt;- min(sample_stats_df$slope,  na.rm = TRUE)\n  max_slope &lt;- max(sample_stats_df$slope,  na.rm = TRUE)\n  max_abs_slope &lt;- max(abs(min_slope), abs(max_slope))\n  gt_tbl &lt;- color_column(\n    gt_tbl, \n    df     = sample_stats_df, \n    column = \"slope\",\n    palette = rev(brewer.pal(11, \"RdBu\")),\n    domain  = c(-max_abs_slope, max_abs_slope)\n  )\n}, error = function(e) {\n  print(\"Error in slope color column\")\n  print(e)\n})\n\n\n[1] \"Error in slope color column\"\n&lt;rlang_error in col_numeric(palette = palette, domain = domain): Wasn't able to determine range of `domain`&gt;\n\n\ndisplay with gt\ntryCatch({\n  # pvalue Z\n  gt_tbl &lt;- color_column(\n    gt_tbl, \n    df      = sample_stats_df, \n    column  = \"z\", \n    palette = scales::brewer_pal(palette = \"Blues\")(9)\n  )\n}, error = function(e) {\n  print(\"Error in z color column\")\n  print(e)\n})\n\n\n[1] \"Error in z color column\"\n&lt;simpleError in color_column(gt_tbl, df = sample_stats_df, column = \"z\", palette = (scales::brewer_pal(palette = \"Blues\"))(9)): `z` is not numeric; data_color() requires a numeric column.&gt;\n\n\ndisplay with gt\n# slope blue (-) to red (+) (0 centered)\ntryCatch({\n  min_slope &lt;- min(sample_stats_df$significant_slope,  na.rm = TRUE)\n  max_slope &lt;- max(sample_stats_df$significant_slope,  na.rm = TRUE)\n  max_abs_slope &lt;- max(abs(min_slope), abs(max_slope))\n  gt_tbl &lt;- color_column(\n    gt_tbl, \n    df     = sample_stats_df, \n    column = \"significant_slope\",\n    palette = rev(brewer.pal(11, \"RdBu\")),\n    domain  = c(-max_abs_slope, max_abs_slope)\n  )\n}, error = function(e) {\n  print(\"Error in significant_slope color column\")\n  print(e)\n})\n\n\n[1] \"Error in significant_slope color column\"\n&lt;simpleError in color_column(gt_tbl, df = sample_stats_df, column = \"significant_slope\",     palette = rev(brewer.pal(11, \"RdBu\")), domain = c(-max_abs_slope,         max_abs_slope)): `significant_slope` is not numeric; data_color() requires a numeric column.&gt;\n\n\ndisplay with gt\ntryCatch({\n  # mean values blue to red (0 centered)\n  min_mean &lt;- min(sample_stats_df$mean,  na.rm = TRUE)\n  max_mean &lt;- max(sample_stats_df$mean,  na.rm = TRUE)\n  max_abs_mean &lt;- max(abs(min_mean), abs(max_mean))\n  gt_tbl &lt;- color_column(\n    gt_tbl, \n    df     = sample_stats_df, \n    column = \"mean\",\n    palette = rev(brewer.pal(11, \"RdBu\")),\n    domain  = c(-max_abs_mean, max_abs_mean)\n  )\n}, error = function(e) {\n  print(\"Error in mean color column\")\n  print(e)\n})\n\n\n[1] \"Error in mean color column\"\n&lt;rlang_error in col_numeric(palette = palette, domain = domain): Wasn't able to determine range of `domain`&gt;\n\n\ndisplay with gt\ntryCatch({\n  # n values white to green\n  gt_tbl &lt;- color_column(\n    gt_tbl, \n    df      = sample_stats_df, \n    column  = \"n_values\", \n    palette = scales::brewer_pal(palette = \"Greens\")(9)\n  )\n}, error = function(e) {\n  print(\"Error in n_values color column\")\n  print(e)\n})\n\n\n[1] \"Error in n_values color column\"\n&lt;rlang_error in col_numeric(palette = palette, domain = domain): Wasn't able to determine range of `domain`&gt;\n\n\ndisplay with gt\ntryCatch({\n  # min\n  gt_tbl &lt;- color_column(\n    gt_tbl, \n    df      = sample_stats_df, \n    column  = \"min\", \n    palette = scales::brewer_pal(palette = \"Blues\")(9)\n  )\n}, error = function(e) {\n  print(\"Error in min color column\")\n  print(e)\n})\n\n\n[1] \"Error in min color column\"\n&lt;rlang_error in col_numeric(palette = palette, domain = domain): Wasn't able to determine range of `domain`&gt;\n\n\ndisplay with gt\ntryCatch({\n  # max\n  gt_tbl &lt;- color_column(\n    gt_tbl, \n    df      = sample_stats_df, \n    column  = \"max\", \n    palette = scales::brewer_pal(palette = \"Blues\")(9)\n  )\n}, error = function(e) {\n  print(\"Error in max color column\")\n  print(e)\n})\n\n\n[1] \"Error in max color column\"\n&lt;rlang_error in col_numeric(palette = palette, domain = domain): Wasn't able to determine range of `domain`&gt;\n\n\ndisplay with gt\ntryCatch({\n  # coefficient.of.variation\n  gt_tbl &lt;- color_column(\n    gt_tbl, \n    df      = sample_stats_df, \n    column  = \"coefficient.of.variation\", \n    palette = scales::brewer_pal(palette = \"Blues\")(9)\n  )\n}, error = function(e) {\n  print(\"Error in coefficient.of.variation color column\")\n  print(e)\n})\n\n\n[1] \"Error in coefficient.of.variation color column\"\n&lt;rlang_error in col_numeric(palette = palette, domain = domain): Wasn't able to determine range of `domain`&gt;\n\n\ndisplay with gt\n# 4) Render/display:\ngt_tbl\n\n\n\n\n\n\n\n\nprogram\nMonitoring.Location.ID\nslope\nn_values\nmean\nmin\nmax\ncoefficient.of.variation\nsignificant_slope\npvalue\n\n\n\n\n\n\n\n\n\n\n\nReporting Programs:\n\n\ndisplay reporting programs\nlibrary(ggplot2)\nggplot(df, aes(x = program)) +\n  geom_bar() +\n  labs(title = \"Reporting Programs\", x = \"Program\", y = \"Count\")"
  },
  {
    "objectID": "analyte_reports/analyte_reports/Nitrate.html",
    "href": "analyte_reports/analyte_reports/Nitrate.html",
    "title": "Nitrate Report",
    "section": "",
    "text": "get data across all programs, filter for analyte\nlibrary('here')\nlibrary('dplyr')\nsource(here(\"R/getAllData.R\"))\nfull_df &lt;- getAllData()\ndf &lt;- filter(full_df, DEP.Analyte.Name == params$analyte)\n\n\n\n\ncreate .csv of analyte data\n# save df to csv\n# reduce to only cols we need & save to csv\ndf %&gt;%\n  mutate(\n    source = program,\n    site = Monitoring.Location.ID,\n    datetime = Activity.Start.Date.Time,\n    analyte = DEP.Analyte.Name,\n    value = DEP.Result.Value.Number,\n    units = DEP.Result.Unit,\n    latitude = Org.Decimal.Latitude,\n    longitude = Org.Decimal.Longitude,\n    sample_depth = Activity.Depth,\n    .keep = \"none\"\n) %&gt;%\n  write.csv(here(\"data\", \"exports\", \"unified-wq-db-samples\", paste0(params$analyte, \".csv\")))\n\n\nDownload data for this analyte here\n\nHistogram of DEP.Result.Value.Number:\n\n\ndisplay histogram of values\nlibrary(ggplot2)\nggplot(df, aes(x = DEP.Result.Value.Number)) +\n  geom_histogram(bins = 30, fill = \"blue\", color = \"black\") +\n  labs(title = \"Histogram of Values\", x = \"Value\", y = \"Count\")\n\n\n\n\n\n\n\n\n\n\n\nStation Statistics:\n\n\ncreate station statistics dataframe\nsource(here(\"R/seasonalMannKendall.R\"))\nlibrary(lubridate)  # for mdy_hms()\nlibrary(pander)  # for display\n\n# create table of samples for each station\nsamples_df &lt;- df %&gt;%\n  select(\n    program, \n    Monitoring.Location.ID, \n    Activity.Start.Date.Time,\n    analyte = DEP.Analyte.Name,\n    DEP.Result.Value.Number, \n    DEP.Result.Unit,\n    latitude = Org.Decimal.Latitude,\n    longitude = Org.Decimal.Longitude,\n    sample_depth = Activity.Depth\n    ) %&gt;%\n  # drop any with empty Monitoring.Location.ID\n  filter(!is.na(Monitoring.Location.ID)) %&gt;%\n  # drop any with empty Activity.Start.Date.Time\n  filter(!is.na(Activity.Start.Date.Time)) %&gt;%\n  # parse the \"MM/DD/YYYY HH:MM:SS\" strings into POSIXct\n  mutate(Activity.Start.Date.Time = mdy_hms(\n          Activity.Start.Date.Time,\n          tz = \"UTC\")) %&gt;%\n  distinct()\n\n\n# add statistics for each station\nsample_stats_df &lt;- samples_df %&gt;%\n  group_by(program, Monitoring.Location.ID) %&gt;%\n  reframe(\n    {\n      tmp &lt;- seasonalMannKendallVectorized(\n        Activity.Start.Date.Time,\n        DEP.Result.Value.Number\n      )\n    },\n    n_values = n(),\n    mean = mean(DEP.Result.Value.Number),\n    min = min(DEP.Result.Value.Number),\n    max = max(DEP.Result.Value.Number),\n    coefficient.of.variation = sd(DEP.Result.Value.Number) / mean(DEP.Result.Value.Number)\n  ) %&gt;%\n  mutate(\n    # create column significant_slope\n    significant_slope = ifelse(z &lt;= 0.05, slope, NA_real_),\n    pvalue = z\n  ) %&gt;%\n  # drop unwanted columns added by seasonalMannKendall\n  select(\n    -z,\n    -tau,\n    -chi_square\n  )\n\n\n\n# print(head(sample_stats_df))\n# # display sample_stats_df with pander\n# pander(sample_stats_df)\n\n\n\n\nsave stats to csv\nsample_stats_df %&gt;%\n  write.csv(here(\n    \"data\", \"exports\", \"seasonal-mann-kendall-stats\", paste0(params$analyte, \".csv\")))\n\n\nDownload data for this analyte’s statistics here\n\n\ndisplay with gt\nlibrary(gt)\nlibrary(scales)\nlibrary(tidyselect)  # for all_of()\nlibrary(RColorBrewer) # for brewer.pal()\n\n# ── color_column() ─────────────────────────────────────────────────────────────\n# gt_tbl   : a gt object that you’ve already created (e.g. `sample_stats_df %&gt;% gt()`)\n# df       : the original data.frame (must contain the column you want to color)\n# column   : a string, e.g. \"slope\" or \"n_values\"\n# palette  : a character vector of colours to feed to col_numeric()\n#\ncolor_column &lt;- function(gt_tbl, df, column, \n                         palette = c(\"red\", \"orange\", \"yellow\", \"green\", \"blue\", \"violet\"),\n                         domain = NULL) {\n  # 1) Pull out that column’s numeric values\n  vals &lt;- df[[column]]\n  if (!is.numeric(vals)) {\n    stop(sprintf(\"`%s` is not numeric; data_color() requires a numeric column.\", column))\n  }\n  \n  # 2) Compute its min and max (ignoring NA)\n  min_val &lt;- min(vals, na.rm = TRUE)\n  max_val &lt;- max(vals, na.rm = TRUE)\n  if (is.null(domain)) {\n    domain &lt;- c(min_val, max_val)\n  }\n  \n  # 3) Call data_color() on the gt table for that single column\n  gt_tbl %&gt;%\n    data_color(\n      columns = all_of(column),\n      colors  = col_numeric(\n        palette = palette,\n        domain  = domain\n      )\n    )\n}\nlibrary(dplyr)\nlibrary(gt)\n\n# 1) First build your gt table as usual:\ngt_tbl &lt;- sample_stats_df %&gt;% \n  gt()\n\n# slope blue (-) to red (+) (0 centered)\ntryCatch({\n  min_slope &lt;- min(sample_stats_df$slope,  na.rm = TRUE)\n  max_slope &lt;- max(sample_stats_df$slope,  na.rm = TRUE)\n  max_abs_slope &lt;- max(abs(min_slope), abs(max_slope))\n  gt_tbl &lt;- color_column(\n    gt_tbl, \n    df     = sample_stats_df, \n    column = \"slope\",\n    palette = rev(brewer.pal(11, \"RdBu\")),\n    domain  = c(-max_abs_slope, max_abs_slope)\n  )\n}, error = function(e) {\n  print(\"Error in slope color column\")\n  print(e)\n})\n\ntryCatch({\n  # pvalue Z\n  gt_tbl &lt;- color_column(\n    gt_tbl, \n    df      = sample_stats_df, \n    column  = \"z\", \n    palette = scales::brewer_pal(palette = \"Blues\")(9)\n  )\n}, error = function(e) {\n  print(\"Error in z color column\")\n  print(e)\n})\n\n\n[1] \"Error in z color column\"\n&lt;simpleError in color_column(gt_tbl, df = sample_stats_df, column = \"z\", palette = (scales::brewer_pal(palette = \"Blues\"))(9)): `z` is not numeric; data_color() requires a numeric column.&gt;\n\n\ndisplay with gt\n# slope blue (-) to red (+) (0 centered)\ntryCatch({\n  min_slope &lt;- min(sample_stats_df$significant_slope,  na.rm = TRUE)\n  max_slope &lt;- max(sample_stats_df$significant_slope,  na.rm = TRUE)\n  max_abs_slope &lt;- max(abs(min_slope), abs(max_slope))\n  gt_tbl &lt;- color_column(\n    gt_tbl, \n    df     = sample_stats_df, \n    column = \"significant_slope\",\n    palette = rev(brewer.pal(11, \"RdBu\")),\n    domain  = c(-max_abs_slope, max_abs_slope)\n  )\n}, error = function(e) {\n  print(\"Error in significant_slope color column\")\n  print(e)\n})\n\ntryCatch({\n  # mean values blue to red (0 centered)\n  min_mean &lt;- min(sample_stats_df$mean,  na.rm = TRUE)\n  max_mean &lt;- max(sample_stats_df$mean,  na.rm = TRUE)\n  max_abs_mean &lt;- max(abs(min_mean), abs(max_mean))\n  gt_tbl &lt;- color_column(\n    gt_tbl, \n    df     = sample_stats_df, \n    column = \"mean\",\n    palette = rev(brewer.pal(11, \"RdBu\")),\n    domain  = c(-max_abs_mean, max_abs_mean)\n  )\n}, error = function(e) {\n  print(\"Error in mean color column\")\n  print(e)\n})\n\ntryCatch({\n  # n values white to green\n  gt_tbl &lt;- color_column(\n    gt_tbl, \n    df      = sample_stats_df, \n    column  = \"n_values\", \n    palette = scales::brewer_pal(palette = \"Greens\")(9)\n  )\n}, error = function(e) {\n  print(\"Error in n_values color column\")\n  print(e)\n})\n\ntryCatch({\n  # min\n  gt_tbl &lt;- color_column(\n    gt_tbl, \n    df      = sample_stats_df, \n    column  = \"min\", \n    palette = scales::brewer_pal(palette = \"Blues\")(9)\n  )\n}, error = function(e) {\n  print(\"Error in min color column\")\n  print(e)\n})\n\ntryCatch({\n  # max\n  gt_tbl &lt;- color_column(\n    gt_tbl, \n    df      = sample_stats_df, \n    column  = \"max\", \n    palette = scales::brewer_pal(palette = \"Blues\")(9)\n  )\n}, error = function(e) {\n  print(\"Error in max color column\")\n  print(e)\n})\n\ntryCatch({\n  # coefficient.of.variation\n  gt_tbl &lt;- color_column(\n    gt_tbl, \n    df      = sample_stats_df, \n    column  = \"coefficient.of.variation\", \n    palette = scales::brewer_pal(palette = \"Blues\")(9)\n  )\n}, error = function(e) {\n  print(\"Error in coefficient.of.variation color column\")\n  print(e)\n})\n\n# 4) Render/display:\ngt_tbl\n\n\n\n\n\n\n\n\nprogram\nMonitoring.Location.ID\nslope\nn_values\nmean\nmin\nmax\ncoefficient.of.variation\nsignificant_slope\npvalue\n\n\n\n\nSFER\n1\n-0.0575000000\n53\n0.60798113\n0.000\n6.791\n1.8024105\n-0.057500000\n0.002593085\n\n\nSFER\n10\n-0.0093333333\n51\n0.27303922\n0.000\n2.583\n1.4686453\nNA\n0.536689629\n\n\nSFER\n11\n-0.0016875000\n54\n0.24974074\n0.000\n3.499\n2.6606327\nNA\n0.612813949\n\n\nSFER\n12\n-0.0087500000\n54\n0.14848148\n0.000\n3.235\n3.0217266\n-0.008750000\n0.007579592\n\n\nSFER\n13\n-0.0055000000\n53\n0.31384906\n0.000\n7.963\n3.4556677\nNA\n0.375911742\n\n\nSFER\n14\n-0.0053571429\n54\n0.09996296\n0.000\n0.622\n1.4790618\nNA\n0.188076604\n\n\nSFER\n15\n-0.0042261905\n54\n0.16350000\n0.000\n4.038\n3.4254152\nNA\n0.141445536\n\n\nSFER\n15.5\n-0.0023333333\n52\n0.11307692\n0.000\n0.921\n1.9063145\nNA\n0.180765135\n\n\nSFER\n16\n-0.0246666667\n54\n0.36294444\n0.000\n2.225\n1.1979860\n-0.024666667\n0.018851268\n\n\nSFER\n17\n-0.0121666667\n55\n0.40254545\n0.000\n8.364\n3.1143954\nNA\n0.060378524\n\n\nSFER\n18\n0.0000000000\n55\n0.23109091\n0.000\n8.346\n4.8398973\nNA\n1.000000000\n\n\nSFER\n19\n-0.0140000000\n55\n0.44027273\n0.000\n8.003\n2.4511503\nNA\n0.388527454\n\n\nSFER\n2\n-0.0125000000\n53\n0.45901887\n0.000\n7.842\n2.4170331\nNA\n0.451410514\n\n\nSFER\n20\n-0.0012222222\n55\n0.54296364\n0.000\n12.670\n3.6469125\nNA\n0.771475524\n\n\nSFER\n21.25\nNA\n1\n0.05000000\n0.050\n0.050\nNA\nNA\nNA\n\n\nSFER\n21.5\n0.0000000000\n53\n0.14050943\n0.000\n1.435\n1.9510605\nNA\n1.000000000\n\n\nSFER\n21LK\n-0.0005000000\n56\n0.38455357\n0.000\n14.544\n5.0375097\nNA\n0.526578371\n\n\nSFER\n22\n-0.0119722222\n57\n0.19694737\n0.000\n3.319\n2.2950485\nNA\n0.250296798\n\n\nSFER\n22.5\n-0.0084444444\n53\n0.10394340\n0.000\n1.077\n1.6016188\n-0.008444444\n0.019495848\n\n\nSFER\n23\n-0.0020000000\n57\n0.22008772\n0.000\n1.996\n1.4762790\nNA\n0.788188105\n\n\nSFER\n24\n0.0086666667\n57\n0.44964912\n0.000\n3.805\n1.3451721\nNA\n0.501799857\n\n\nSFER\n3\n-0.0147500000\n53\n0.27786792\n0.000\n3.972\n2.0270475\nNA\n0.291749344\n\n\nSFER\n30\n0.0000000000\n54\n0.26066667\n0.000\n7.370\n4.0386470\nNA\n0.583112654\n\n\nSFER\n30.5\n0.0000000000\n54\n0.10914815\n0.000\n1.106\n2.0153108\nNA\n0.824022131\n\n\nSFER\n31\n-0.0003666667\n55\n0.28998182\n0.000\n10.908\n5.0506240\nNA\n0.607766031\n\n\nSFER\n32\n-0.0015000000\n56\n0.11028571\n0.000\n1.020\n1.7134804\nNA\n0.280680271\n\n\nSFER\n33\n-0.0036000000\n56\n0.09905357\n0.000\n0.379\n1.0694982\nNA\n0.361152526\n\n\nSFER\n34\n-0.0017500000\n56\n0.20596429\n0.000\n1.560\n1.5322879\nNA\n0.398102716\n\n\nSFER\n39\n0.0000000000\n48\n0.12820833\n0.000\n1.314\n2.0832045\nNA\n0.485682975\n\n\nSFER\n4\n-0.0069047619\n44\n0.17684091\n0.000\n1.630\n1.6133375\nNA\n0.093247842\n\n\nSFER\n40\n-0.0006111111\n52\n0.25588462\n0.000\n6.633\n3.6633166\nNA\n0.385492728\n\n\nSFER\n41\n-0.0044428571\n54\n0.12357407\n0.000\n0.869\n1.5241205\nNA\n0.122937172\n\n\nSFER\n42\n0.0000000000\n55\n0.13154545\n0.000\n0.749\n1.4209849\nNA\n0.942267126\n\n\nSFER\n45\n-0.0014444444\n55\n0.13147273\n0.000\n1.111\n1.9475261\nNA\n0.348979992\n\n\nSFER\n46\n0.0005000000\n56\n0.15983929\n0.000\n3.757\n3.3600136\nNA\n0.428079697\n\n\nSFER\n47\n0.0000000000\n56\n0.06883929\n0.000\n0.625\n1.9303044\nNA\n0.265315231\n\n\nSFER\n48\n0.0025000000\n55\n0.10278182\n0.000\n1.189\n2.1811914\nNA\n0.212580714\n\n\nSFER\n49\n0.0000000000\n53\n0.13756604\n0.000\n1.914\n2.5095523\nNA\n0.941443801\n\n\nSFER\n5\n-0.0076250000\n44\n0.14775000\n0.000\n2.119\n2.2235600\n-0.007625000\n0.040217251\n\n\nSFER\n5.5\n-0.0068611111\n44\n0.37872727\n0.000\n6.704\n2.7495424\nNA\n0.538210771\n\n\nSFER\n50\n0.0016666667\n54\n0.09605556\n0.000\n1.043\n1.9072307\nNA\n0.375911742\n\n\nSFER\n51\n0.0000000000\n56\n0.11237500\n0.000\n1.006\n2.0950219\nNA\n0.560624358\n\n\nSFER\n52\n0.0000000000\n53\n0.27935849\n0.000\n8.646\n4.2526609\nNA\n0.759690193\n\n\nSFER\n53\n0.0000000000\n50\n0.09670000\n0.000\n1.436\n2.6602395\nNA\n0.658531366\n\n\nSFER\n54\n-0.0100000000\n68\n0.51050000\n0.000\n7.019\n2.2329589\nNA\n0.155953404\n\n\nSFER\n55\n-0.0053571429\n70\n0.16030000\n0.000\n1.763\n1.6888501\n-0.005357143\n0.024953751\n\n\nSFER\n56\n-0.0048333333\n71\n0.15552113\n0.000\n0.976\n1.5935963\nNA\n0.092928408\n\n\nSFER\n57\n0.0001666667\n72\n0.48458333\n0.000\n7.433\n2.9674838\nNA\n0.264094917\n\n\nSFER\n57.1\n0.0000000000\n72\n0.11419444\n0.000\n0.844\n1.5713063\nNA\n0.918301543\n\n\nSFER\n57.2\n0.0028571429\n71\n0.12683099\n0.000\n1.080\n1.7044143\nNA\n0.107923478\n\n\nSFER\n57.3\n0.0000000000\n67\n0.12576119\n0.000\n0.848\n1.5330608\nNA\n0.654878089\n\n\nSFER\n58\n0.0000000000\n53\n0.07473585\n0.000\n0.567\n1.7457805\nNA\n0.642437165\n\n\nSFER\n59\n0.0000000000\n53\n0.34983019\n0.000\n8.750\n3.5005398\nNA\n0.753070313\n\n\nSFER\n6\n-0.0071428571\n45\n0.15622222\n0.000\n0.986\n1.5194489\nNA\n0.412608927\n\n\nSFER\n6.5\n-0.0040000000\n46\n0.12276087\n0.000\n1.240\n2.2035248\n-0.004000000\n0.039932632\n\n\nSFER\n60\n0.0002500000\n56\n0.15489286\n0.000\n1.032\n1.6522829\nNA\n0.606473003\n\n\nSFER\n61\n-0.0006250000\n56\n0.14975000\n0.000\n1.656\n1.8179317\nNA\n0.771084063\n\n\nSFER\n62\n0.0024285714\n56\n0.17860714\n0.000\n2.189\n1.8781848\nNA\n0.510821301\n\n\nSFER\n63\n0.0027619048\n54\n0.15581481\n0.000\n0.918\n1.4734090\nNA\n0.350201389\n\n\nSFER\n64\n0.0000000000\n48\n0.24475000\n0.000\n1.380\n1.3881090\nNA\n0.856116906\n\n\nSFER\n65\n-0.0113333333\n51\n0.55001961\n0.000\n8.004\n2.1832162\nNA\n0.507431872\n\n\nSFER\n66\n0.0013392857\n52\n0.21348077\n0.000\n1.873\n1.7301703\nNA\n0.625356430\n\n\nSFER\n67\n0.0005000000\n52\n0.15732692\n0.000\n1.170\n1.4728559\nNA\n0.809782126\n\n\nSFER\n68\n0.0000000000\n55\n0.27981818\n0.000\n8.225\n3.9667387\nNA\n0.714879441\n\n\nSFER\n69\n0.0000000000\n42\n0.13321429\n0.000\n1.000\n1.5897736\nNA\n1.000000000\n\n\nSFER\n7\n-0.0033333333\n54\n0.20409259\n0.000\n1.581\n1.3688603\nNA\n0.722338992\n\n\nSFER\n70\n-0.0035000000\n42\n0.11247619\n0.000\n0.940\n1.7503507\nNA\n0.577730904\n\n\nSFER\n71\nNA\n1\n0.17000000\n0.170\n0.170\nNA\nNA\nNA\n\n\nSFER\n8\n0.0000000000\n56\n0.19746429\n0.000\n3.122\n2.4317921\nNA\n0.944453692\n\n\nSFER\n9\n0.0007083333\n56\n0.32351786\n0.000\n7.627\n3.4167420\nNA\n0.730521491\n\n\nSFER\n9.5\n-0.0051111111\n52\n0.42730769\n0.000\n8.496\n3.4635502\nNA\n0.256385851\n\n\nSFER\n9.6\nNA\n1\n0.47900000\n0.479\n0.479\nNA\nNA\nNA\n\n\nSFER\n9.7\nNA\n1\n6.56700000\n6.567\n6.567\nNA\nNA\nNA\n\n\nSFER\n9.8\nNA\n1\n6.76300000\n6.763\n6.763\nNA\nNA\nNA\n\n\nSFER\nAC1\nNA\n1\n0.38000000\n0.380\n0.380\nNA\nNA\nNA\n\n\nSFER\nAC2\nNA\n1\n0.67000000\n0.670\n0.670\nNA\nNA\nNA\n\n\nSFER\nAC3\nNA\n1\n0.13000000\n0.130\n0.130\nNA\nNA\nNA\n\n\nSFER\nAC4\nNA\n1\n0.13000000\n0.130\n0.130\nNA\nNA\nNA\n\n\nSFER\nAC5\nNA\n1\n0.09000000\n0.090\n0.090\nNA\nNA\nNA\n\n\nSFER\nAC6\nNA\n1\n0.08000000\n0.080\n0.080\nNA\nNA\nNA\n\n\nSFER\nAMI1\n-0.0050000000\n26\n0.07526923\n0.000\n0.740\n2.4661917\nNA\n0.657380427\n\n\nSFER\nAMI2\n0.0000000000\n26\n0.04523077\n0.000\n0.613\n2.6467107\nNA\n0.579099742\n\n\nSFER\nAMI3\n0.0000000000\n26\n0.09923077\n0.000\n0.892\n2.3202894\nNA\n0.433421931\n\n\nSFER\nAMI4\n0.0000000000\n25\n0.16804000\n0.000\n1.588\n2.1077809\nNA\n1.000000000\n\n\nSFER\nAMI5\n0.0000000000\n26\n0.08896154\n0.000\n0.598\n1.8023044\nNA\n0.462432726\n\n\nSFER\nAMI6\n0.0000000000\n26\n0.05000000\n0.000\n0.259\n1.4637595\nNA\n1.000000000\n\n\nSFER\nAMI7\n-0.0215000000\n26\n0.13330769\n0.000\n1.170\n2.2688706\nNA\n0.061706690\n\n\nSFER\nAMI8\n-0.0050000000\n26\n0.10500000\n0.000\n0.640\n1.6666873\nNA\n0.657380427\n\n\nSFER\nAMI9\n0.0000000000\n26\n0.20150000\n0.000\n1.643\n2.0854433\nNA\n1.000000000\n\n\nSFER\nBG1\n-0.0470000000\n24\n0.25237500\n0.000\n1.020\n1.1261929\nNA\n0.367070024\n\n\nSFER\nBG10\nNA\n1\n0.05000000\n0.050\n0.050\nNA\nNA\nNA\n\n\nSFER\nBG11\nNA\n1\n0.05000000\n0.050\n0.050\nNA\nNA\nNA\n\n\nSFER\nBG12\nNA\n1\n0.04000000\n0.040\n0.040\nNA\nNA\nNA\n\n\nSFER\nBG13\nNA\n1\n0.05000000\n0.050\n0.050\nNA\nNA\nNA\n\n\nSFER\nBG14\nNA\n1\n0.02000000\n0.020\n0.020\nNA\nNA\nNA\n\n\nSFER\nBG15\nNA\n1\n0.01000000\n0.010\n0.010\nNA\nNA\nNA\n\n\nSFER\nBG16\nNA\n1\n0.00000000\n0.000\n0.000\nNA\nNA\nNA\n\n\nSFER\nBG17\nNA\n1\n0.08000000\n0.080\n0.080\nNA\nNA\nNA\n\n\nSFER\nBG18\nNA\n1\n0.06000000\n0.060\n0.060\nNA\nNA\nNA\n\n\nSFER\nBG2\n-0.0400000000\n30\n0.16306667\n0.000\n0.666\n1.0901598\nNA\n0.087888916\n\n\nSFER\nBG20\nNA\n1\n0.04000000\n0.040\n0.040\nNA\nNA\nNA\n\n\nSFER\nBG3\n-0.0086000000\n30\n0.05990000\n0.000\n0.196\n1.0361011\nNA\n0.238947525\n\n\nSFER\nBG4\n-0.0020000000\n30\n0.18276667\n0.000\n2.097\n2.1505674\nNA\n0.862490230\n\n\nSFER\nBG6\n0.0600000000\n11\n0.05590909\n0.000\n0.310\n1.6416444\nNA\n0.371093370\n\n\nSFER\nBG7\n0.0100000000\n11\n0.08863636\n0.000\n0.520\n1.8040862\nNA\n1.000000000\n\n\nSFER\nBG8\nNA\n1\n0.09000000\n0.090\n0.090\nNA\nNA\nNA\n\n\nSFER\nBG9\nNA\n1\n0.06000000\n0.060\n0.060\nNA\nNA\nNA\n\n\nSFER\nBK1\nNA\n1\n0.00000000\n0.000\n0.000\nNA\nNA\nNA\n\n\nSFER\nCAL1\n0.0025000000\n32\n0.21428125\n0.000\n1.433\n1.5062475\nNA\n0.454380541\n\n\nSFER\nCAL2\n-0.0045000000\n34\n0.18429412\n0.000\n1.656\n1.9053395\nNA\n0.582701982\n\n\nSFER\nCAL3\n0.0000000000\n34\n0.16788235\n0.000\n1.640\n1.8831030\nNA\n1.000000000\n\n\nSFER\nCAL4\n-0.0024666667\n34\n0.22032353\n-0.030\n3.378\n2.7222646\nNA\n0.683091398\n\n\nSFER\nCAL5\n0.0000000000\n34\n0.20105882\n0.000\n3.398\n2.9196261\nNA\n0.669291127\n\n\nSFER\nCAL6\n-0.0372500000\n28\n0.11128571\n0.000\n1.226\n2.1888371\nNA\n0.185876732\n\n\nSFER\nCAL7\nNA\n1\n0.09500000\n0.095\n0.095\nNA\nNA\nNA\n\n\nSFER\nCAL8\nNA\n1\n0.33300000\n0.333\n0.333\nNA\nNA\nNA\n\n\nSFER\nCALA\nNA\n1\n0.03900000\n0.039\n0.039\nNA\nNA\nNA\n\n\nSFER\nCK1\nNA\n1\n0.00000000\n0.000\n0.000\nNA\nNA\nNA\n\n\nSFER\nCK2\nNA\n1\n0.00000000\n0.000\n0.000\nNA\nNA\nNA\n\n\nSFER\nCW1\n-0.0195000000\n16\n0.32506250\n0.000\n2.361\n1.8907506\nNA\n0.734095182\n\n\nSFER\nCW2\n-0.0298000000\n16\n0.21350000\n0.000\n0.920\n1.3448209\nNA\n0.308179547\n\n\nSFER\nCW3\n0.0554000000\n17\n0.21147059\n0.000\n0.760\n1.2778982\nNA\n0.558184649\n\n\nSFER\nCW4\n0.0325000000\n16\n0.09818750\n0.000\n0.330\n1.1371484\nNA\n0.308179547\n\n\nSFER\nCW5\n0.0700000000\n12\n0.09875000\n0.010\n0.510\n1.5601817\nNA\n0.245278117\n\n\nSFER\nCW6\n0.0075000000\n12\n0.08291667\n0.000\n0.420\n1.5445703\nNA\n0.698535358\n\n\nSFER\nCW7\n-0.0100000000\n11\n0.06909091\n0.000\n0.450\n1.9913334\nNA\n0.617075077\n\n\nSFER\nCaseyhole\nNA\n1\n0.13000000\n0.130\n0.130\nNA\nNA\nNA\n\n\nSFER\nEB1\nNA\n1\n0.87500000\n0.875\n0.875\nNA\nNA\nNA\n\n\nSFER\nEB2\nNA\n1\n0.12000000\n0.120\n0.120\nNA\nNA\nNA\n\n\nSFER\nEH07\nNA\n1\n0.31500000\n0.315\n0.315\nNA\nNA\nNA\n\n\nSFER\nEH08\nNA\n1\n0.70600000\n0.706\n0.706\nNA\nNA\nNA\n\n\nSFER\nEKIN\n-0.0138888889\n51\n0.16792157\n0.000\n1.122\n1.3032015\n-0.013888889\n0.019764282\n\n\nSFER\nEKMID\n-0.0080714286\n52\n0.18344231\n0.000\n0.989\n1.2629589\nNA\n0.103810815\n\n\nSFER\nEKOFF\n-0.0070000000\n53\n0.23500000\n0.000\n4.028\n2.4191037\nNA\n0.305074881\n\n\nSFER\nGP1\nNA\n4\n0.11700000\n0.000\n0.369\n1.4560551\nNA\nNA\n\n\nSFER\nGP1.5\nNA\n1\n0.03000000\n0.030\n0.030\nNA\nNA\nNA\n\n\nSFER\nGP2\nNA\n4\n0.02975000\n0.000\n0.082\n1.3094512\nNA\nNA\n\n\nSFER\nGP3\nNA\n4\n0.06925000\n0.000\n0.176\n1.1009745\nNA\nNA\n\n\nSFER\nGP4\nNA\n4\n0.03125000\n0.000\n0.063\n1.1547744\nNA\nNA\n\n\nSFER\nGP5\n-0.0132000000\n34\n0.09432353\n0.000\n0.694\n1.6535005\nNA\n0.259481127\n\n\nSFER\nGS\nNA\n1\n0.00000000\n0.000\n0.000\nNA\nNA\nNA\n\n\nSFER\nGlider\nNA\n2\n0.01500000\n0.000\n0.030\n1.4142136\nNA\nNA\n\n\nSFER\nHB1\nNA\n1\n0.05000000\n0.050\n0.050\nNA\nNA\nNA\n\n\nSFER\nHB2\nNA\n1\n2.03000000\n2.030\n2.030\nNA\nNA\nNA\n\n\nSFER\nHB3\nNA\n1\n1.03000000\n1.030\n1.030\nNA\nNA\nNA\n\n\nSFER\nHB4\nNA\n1\n0.73000000\n0.730\n0.730\nNA\nNA\nNA\n\n\nSFER\nHB5\nNA\n1\n0.27000000\n0.270\n0.270\nNA\nNA\nNA\n\n\nSFER\nHB6\nNA\n1\n0.04000000\n0.040\n0.040\nNA\nNA\nNA\n\n\nSFER\nJunkpile\nNA\n1\n0.01300000\n0.013\n0.013\nNA\nNA\nNA\n\n\nSFER\nKW1\n-0.0025000000\n34\n0.18129412\n0.000\n2.979\n2.8125608\nNA\n1.000000000\n\n\nSFER\nKW2\n0.0155000000\n34\n0.35285294\n0.000\n1.829\n1.3443010\nNA\n0.677391602\n\n\nSFER\nKW3\n0.0040000000\n34\n0.09664706\n0.000\n0.684\n1.4545435\nNA\n0.400814169\n\n\nSFER\nKW4\n0.0051666667\n33\n0.19412121\n0.000\n2.107\n2.2091456\nNA\n0.476546212\n\n\nSFER\nL1\n0.0250000000\n9\n0.16888889\n0.010\n0.710\n1.6753661\nNA\n1.000000000\n\n\nSFER\nL3\n0.0200000000\n9\n0.07555556\n0.000\n0.500\n2.1301332\nNA\n1.000000000\n\n\nSFER\nL5\n0.0050000000\n9\n0.05666667\n0.000\n0.370\n2.0954721\nNA\n1.000000000\n\n\nSFER\nL7\n0.0125000000\n9\n0.05944444\n0.000\n0.370\n1.9719072\nNA\n1.000000000\n\n\nSFER\nL9\n-0.0150000000\n10\n0.05600000\n0.000\n0.420\n2.3148564\nNA\n1.000000000\n\n\nSFER\nM01\nNA\n1\n0.00000000\n0.000\n0.000\nNA\nNA\nNA\n\n\nSFER\nM02\nNA\n1\n0.00000000\n0.000\n0.000\nNA\nNA\nNA\n\n\nSFER\nM03\nNA\n1\n0.00000000\n0.000\n0.000\nNA\nNA\nNA\n\n\nSFER\nM04\nNA\n1\n0.12300000\n0.123\n0.123\nNA\nNA\nNA\n\n\nSFER\nM05\nNA\n1\n0.00000000\n0.000\n0.000\nNA\nNA\nNA\n\n\nSFER\nMR\n-0.0160375000\n54\n0.32692593\n0.000\n7.250\n3.2718402\n-0.016037500\n0.014107907\n\n\nSFER\nMudhole\nNA\n1\n0.00000000\n0.000\n0.000\nNA\nNA\nNA\n\n\nSFER\nNaplesBlueHole\nNA\n1\n0.05500000\n0.055\n0.055\nNA\nNA\nNA\n\n\nSFER\nPLUME\nNA\n1\n0.02000000\n0.020\n0.020\nNA\nNA\nNA\n\n\nSFER\nROME4\n0.0000000000\n11\n0.05727273\n0.000\n0.370\n1.8741858\nNA\n1.000000000\n\n\nSFER\nROME5\n-0.0300000000\n11\n0.15909091\n0.010\n0.840\n1.5065939\nNA\n1.000000000\n\n\nSFER\nRP1\n0.0020000000\n34\n0.13611765\n0.000\n0.880\n1.4010846\nNA\n0.893694669\n\n\nSFER\nRP2\n0.0001250000\n34\n0.30570588\n0.000\n3.442\n2.2670933\nNA\n1.000000000\n\n\nSFER\nRP3\n0.0000000000\n35\n0.14051429\n0.000\n1.806\n2.2535436\nNA\n0.895021775\n\n\nSFER\nRP4\n-0.0049500000\n34\n0.06473529\n0.000\n0.296\n1.1136791\nNA\n0.683091398\n\n\nSFER\nRedTide\nNA\n1\n0.00000000\n0.000\n0.000\nNA\nNA\nNA\n\n\nSFER\nTB1\n-0.0137500000\n29\n0.11644828\n0.000\n0.977\n1.9854712\nNA\n0.088973012\n\n\nSFER\nTB10\n-0.0100000000\n27\n0.12496296\n0.000\n1.228\n2.1104873\nNA\n0.135593001\n\n\nSFER\nTB11\nNA\n2\n0.14050000\n0.075\n0.206\n0.6592953\nNA\nNA\n\n\nSFER\nTB12\nNA\n1\n0.05000000\n0.050\n0.050\nNA\nNA\nNA\n\n\nSFER\nTB13\nNA\n1\n0.02400000\n0.024\n0.024\nNA\nNA\nNA\n\n\nSFER\nTB2\n0.0000000000\n29\n0.11724138\n0.000\n0.865\n1.7404071\nNA\n1.000000000\n\n\nSFER\nTB3\n0.0050000000\n29\n0.10524138\n0.000\n0.640\n1.5479992\nNA\n0.713474287\n\n\nSFER\nTB4\n0.0200000000\n29\n0.18920690\n0.000\n1.720\n2.0077110\nNA\n0.206211558\n\n\nSFER\nTB5\n-0.0040500000\n29\n0.14131034\n0.000\n1.011\n1.9939293\nNA\n0.457614067\n\n\nSFER\nTB6\nNA\n2\n0.38000000\n0.000\n0.760\n1.4142136\nNA\nNA\n\n\nSFER\nTB7\nNA\n2\n0.20600000\n0.000\n0.412\n1.4142136\nNA\nNA\n\n\nSFER\nTB8\nNA\n2\n0.05700000\n0.000\n0.114\n1.4142136\nNA\nNA\n\n\nSFER\nTB9\nNA\n2\n0.24750000\n0.000\n0.495\n1.4142136\nNA\nNA\n\n\nSFER\nTBA\nNA\n1\n0.06200000\n0.062\n0.062\nNA\nNA\nNA\n\n\nSFER\nTBB\nNA\n1\n0.22400000\n0.224\n0.224\nNA\nNA\nNA\n\n\nSFER\nTBC\nNA\n1\n0.05700000\n0.057\n0.057\nNA\nNA\nNA\n\n\nSFER\nUKIN\n-0.0100000000\n52\n0.20850000\n0.000\n2.768\n2.0742547\n-0.010000000\n0.030345868\n\n\nSFER\nUKMID\n-0.0066875000\n53\n0.11281132\n0.000\n0.987\n1.8572927\n-0.006687500\n0.016970294\n\n\nSFER\nUKOFF\n-0.0035000000\n53\n0.30149057\n0.000\n8.551\n3.9819892\n-0.003500000\n0.012865581\n\n\nSFER\nV1\n0.0131250000\n30\n0.15856667\n0.000\n0.759\n1.4322710\nNA\n0.272340933\n\n\nSFER\nV10\nNA\n1\n0.30900000\n0.309\n0.309\nNA\nNA\nNA\n\n\nSFER\nV11\nNA\n1\n0.18200000\n0.182\n0.182\nNA\nNA\nNA\n\n\nSFER\nV2\n-0.0012000000\n29\n0.09527586\n0.000\n0.815\n1.7913695\nNA\n0.856698213\n\n\nSFER\nV3\n-0.0037500000\n29\n0.20268966\n0.000\n3.229\n2.9640319\nNA\n0.856698213\n\n\nSFER\nV4\n0.0000000000\n30\n0.10156667\n0.000\n0.466\n1.3242535\nNA\n0.867632335\n\n\nSFER\nV5\n-0.0100000000\n29\n0.25700000\n0.000\n4.677\n3.3703218\nNA\n0.344704222\n\n\nSFER\nV6\n-0.0014000000\n30\n0.30093333\n0.000\n4.668\n2.8529494\nNA\n0.744518728\n\n\nSFER\nV7\n-0.0198750000\n30\n0.15593333\n0.000\n0.820\n1.3356511\nNA\n0.408961342\n\n\nSFER\nV8\n-0.0237500000\n29\n0.09772414\n0.000\n0.764\n1.8066435\nNA\n0.206211558\n\n\nSFER\nV9\n-0.0242500000\n30\n0.26723333\n0.000\n4.267\n3.0097742\nNA\n0.116259260\n\n\nSFER\nWS\n-0.0169166667\n56\n0.61928571\n0.000\n11.905\n3.1652525\nNA\n0.218168031\n\n\nSFER\nZ03027\nNA\n1\n0.00000000\n0.000\n0.000\nNA\nNA\nNA\n\n\nSFER\nZ03076\nNA\n1\n0.00000000\n0.000\n0.000\nNA\nNA\nNA\n\n\nSFER\nZ03116\nNA\n1\n0.00000000\n0.000\n0.000\nNA\nNA\nNA\n\n\nSFER\nZ03146\nNA\n1\n0.00000000\n0.000\n0.000\nNA\nNA\nNA\n\n\nSFER\nZ03198\nNA\n1\n0.00000000\n0.000\n0.000\nNA\nNA\nNA\n\n\nSFER\nZ04067\nNA\n1\n0.00000000\n0.000\n0.000\nNA\nNA\nNA\n\n\nSFER\nZ04068\nNA\n1\n0.00000000\n0.000\n0.000\nNA\nNA\nNA\n\n\nSFER\nZ04093\nNA\n1\n0.11800000\n0.118\n0.118\nNA\nNA\nNA\n\n\nSFER\nZ04099\nNA\n1\n0.00000000\n0.000\n0.000\nNA\nNA\nNA\n\n\nSFER\nZ04110\nNA\n1\n0.00000000\n0.000\n0.000\nNA\nNA\nNA\n\n\nSFER\nZ04610\nNA\n1\n0.00000000\n0.000\n0.000\nNA\nNA\nNA\n\n\n\n\n\n\n\n\n\nReporting Programs:\n\n\ndisplay reporting programs\nlibrary(ggplot2)\nggplot(df, aes(x = program)) +\n  geom_bar() +\n  labs(title = \"Reporting Programs\", x = \"Program\", y = \"Count\")"
  },
  {
    "objectID": "analyte_reports/analyte_reports/Orthophosphate.html",
    "href": "analyte_reports/analyte_reports/Orthophosphate.html",
    "title": "Orthophosphate Report",
    "section": "",
    "text": "get data across all programs, filter for analyte\nlibrary('here')\nlibrary('dplyr')\nsource(here(\"R/getAllData.R\"))\nfull_df &lt;- getAllData()\ndf &lt;- filter(full_df, DEP.Analyte.Name == params$analyte)\n\n\n\n\ncreate .csv of analyte data\n# save df to csv\n# reduce to only cols we need & save to csv\ndf %&gt;%\n  mutate(\n    source = program,\n    site = Monitoring.Location.ID,\n    datetime = Activity.Start.Date.Time,\n    analyte = DEP.Analyte.Name,\n    value = DEP.Result.Value.Number,\n    units = DEP.Result.Unit,\n    latitude = Org.Decimal.Latitude,\n    longitude = Org.Decimal.Longitude,\n    sample_depth = Activity.Depth,\n    .keep = \"none\"\n) %&gt;%\n  write.csv(here(\"data\", \"exports\", \"unified-wq-db-samples\", paste0(params$analyte, \".csv\")))\n\n\nDownload data for this analyte here\n\nHistogram of DEP.Result.Value.Number:\n\n\ndisplay histogram of values\nlibrary(ggplot2)\nggplot(df, aes(x = DEP.Result.Value.Number)) +\n  geom_histogram(bins = 30, fill = \"blue\", color = \"black\") +\n  labs(title = \"Histogram of Values\", x = \"Value\", y = \"Count\")\n\n\n\n\n\n\n\n\n\n\n\nStation Statistics:\n\n\ncreate station statistics dataframe\nsource(here(\"R/seasonalMannKendall.R\"))\nlibrary(lubridate)  # for mdy_hms()\nlibrary(pander)  # for display\n\n# create table of samples for each station\nsamples_df &lt;- df %&gt;%\n  select(\n    program, \n    Monitoring.Location.ID, \n    Activity.Start.Date.Time,\n    analyte = DEP.Analyte.Name,\n    DEP.Result.Value.Number, \n    DEP.Result.Unit,\n    latitude = Org.Decimal.Latitude,\n    longitude = Org.Decimal.Longitude,\n    sample_depth = Activity.Depth\n    ) %&gt;%\n  # drop any with empty Monitoring.Location.ID\n  filter(!is.na(Monitoring.Location.ID)) %&gt;%\n  # drop any with empty Activity.Start.Date.Time\n  filter(!is.na(Activity.Start.Date.Time)) %&gt;%\n  # parse the \"MM/DD/YYYY HH:MM:SS\" strings into POSIXct\n  mutate(Activity.Start.Date.Time = mdy_hms(\n          Activity.Start.Date.Time,\n          tz = \"UTC\")) %&gt;%\n  distinct()\n\n\n# add statistics for each station\nsample_stats_df &lt;- samples_df %&gt;%\n  group_by(program, Monitoring.Location.ID) %&gt;%\n  reframe(\n    {\n      tmp &lt;- seasonalMannKendallVectorized(\n        Activity.Start.Date.Time,\n        DEP.Result.Value.Number\n      )\n    },\n    n_values = n(),\n    mean = mean(DEP.Result.Value.Number),\n    min = min(DEP.Result.Value.Number),\n    max = max(DEP.Result.Value.Number),\n    coefficient.of.variation = sd(DEP.Result.Value.Number) / mean(DEP.Result.Value.Number)\n  ) %&gt;%\n  mutate(\n    # create column significant_slope\n    significant_slope = ifelse(z &lt;= 0.05, slope, NA_real_),\n    pvalue = z\n  ) %&gt;%\n  # drop unwanted columns added by seasonalMannKendall\n  select(\n    -z,\n    -tau,\n    -chi_square\n  )\n\n\n\n# print(head(sample_stats_df))\n# # display sample_stats_df with pander\n# pander(sample_stats_df)\n\n\n\n\nsave stats to csv\nsample_stats_df %&gt;%\n  write.csv(here(\n    \"data\", \"exports\", \"seasonal-mann-kendall-stats\", paste0(params$analyte, \".csv\")))\n\n\nDownload data for this analyte’s statistics here\n\n\ndisplay with gt\nlibrary(gt)\nlibrary(scales)\nlibrary(tidyselect)  # for all_of()\nlibrary(RColorBrewer) # for brewer.pal()\n\n# ── color_column() ─────────────────────────────────────────────────────────────\n# gt_tbl   : a gt object that you’ve already created (e.g. `sample_stats_df %&gt;% gt()`)\n# df       : the original data.frame (must contain the column you want to color)\n# column   : a string, e.g. \"slope\" or \"n_values\"\n# palette  : a character vector of colours to feed to col_numeric()\n#\ncolor_column &lt;- function(gt_tbl, df, column, \n                         palette = c(\"red\", \"orange\", \"yellow\", \"green\", \"blue\", \"violet\"),\n                         domain = NULL) {\n  # 1) Pull out that column’s numeric values\n  vals &lt;- df[[column]]\n  if (!is.numeric(vals)) {\n    stop(sprintf(\"`%s` is not numeric; data_color() requires a numeric column.\", column))\n  }\n  \n  # 2) Compute its min and max (ignoring NA)\n  min_val &lt;- min(vals, na.rm = TRUE)\n  max_val &lt;- max(vals, na.rm = TRUE)\n  if (is.null(domain)) {\n    domain &lt;- c(min_val, max_val)\n  }\n  \n  # 3) Call data_color() on the gt table for that single column\n  gt_tbl %&gt;%\n    data_color(\n      columns = all_of(column),\n      colors  = col_numeric(\n        palette = palette,\n        domain  = domain\n      )\n    )\n}\nlibrary(dplyr)\nlibrary(gt)\n\n# 1) First build your gt table as usual:\ngt_tbl &lt;- sample_stats_df %&gt;% \n  gt()\n\n# slope blue (-) to red (+) (0 centered)\ntryCatch({\n  min_slope &lt;- min(sample_stats_df$slope,  na.rm = TRUE)\n  max_slope &lt;- max(sample_stats_df$slope,  na.rm = TRUE)\n  max_abs_slope &lt;- max(abs(min_slope), abs(max_slope))\n  gt_tbl &lt;- color_column(\n    gt_tbl, \n    df     = sample_stats_df, \n    column = \"slope\",\n    palette = rev(brewer.pal(11, \"RdBu\")),\n    domain  = c(-max_abs_slope, max_abs_slope)\n  )\n}, error = function(e) {\n  print(\"Error in slope color column\")\n  print(e)\n})\n\ntryCatch({\n  # pvalue Z\n  gt_tbl &lt;- color_column(\n    gt_tbl, \n    df      = sample_stats_df, \n    column  = \"z\", \n    palette = scales::brewer_pal(palette = \"Blues\")(9)\n  )\n}, error = function(e) {\n  print(\"Error in z color column\")\n  print(e)\n})\n\n\n[1] \"Error in z color column\"\n&lt;simpleError in color_column(gt_tbl, df = sample_stats_df, column = \"z\", palette = (scales::brewer_pal(palette = \"Blues\"))(9)): `z` is not numeric; data_color() requires a numeric column.&gt;\n\n\ndisplay with gt\n# slope blue (-) to red (+) (0 centered)\ntryCatch({\n  min_slope &lt;- min(sample_stats_df$significant_slope,  na.rm = TRUE)\n  max_slope &lt;- max(sample_stats_df$significant_slope,  na.rm = TRUE)\n  max_abs_slope &lt;- max(abs(min_slope), abs(max_slope))\n  gt_tbl &lt;- color_column(\n    gt_tbl, \n    df     = sample_stats_df, \n    column = \"significant_slope\",\n    palette = rev(brewer.pal(11, \"RdBu\")),\n    domain  = c(-max_abs_slope, max_abs_slope)\n  )\n}, error = function(e) {\n  print(\"Error in significant_slope color column\")\n  print(e)\n})\n\ntryCatch({\n  # mean values blue to red (0 centered)\n  min_mean &lt;- min(sample_stats_df$mean,  na.rm = TRUE)\n  max_mean &lt;- max(sample_stats_df$mean,  na.rm = TRUE)\n  max_abs_mean &lt;- max(abs(min_mean), abs(max_mean))\n  gt_tbl &lt;- color_column(\n    gt_tbl, \n    df     = sample_stats_df, \n    column = \"mean\",\n    palette = rev(brewer.pal(11, \"RdBu\")),\n    domain  = c(-max_abs_mean, max_abs_mean)\n  )\n}, error = function(e) {\n  print(\"Error in mean color column\")\n  print(e)\n})\n\ntryCatch({\n  # n values white to green\n  gt_tbl &lt;- color_column(\n    gt_tbl, \n    df      = sample_stats_df, \n    column  = \"n_values\", \n    palette = scales::brewer_pal(palette = \"Greens\")(9)\n  )\n}, error = function(e) {\n  print(\"Error in n_values color column\")\n  print(e)\n})\n\ntryCatch({\n  # min\n  gt_tbl &lt;- color_column(\n    gt_tbl, \n    df      = sample_stats_df, \n    column  = \"min\", \n    palette = scales::brewer_pal(palette = \"Blues\")(9)\n  )\n}, error = function(e) {\n  print(\"Error in min color column\")\n  print(e)\n})\n\ntryCatch({\n  # max\n  gt_tbl &lt;- color_column(\n    gt_tbl, \n    df      = sample_stats_df, \n    column  = \"max\", \n    palette = scales::brewer_pal(palette = \"Blues\")(9)\n  )\n}, error = function(e) {\n  print(\"Error in max color column\")\n  print(e)\n})\n\ntryCatch({\n  # coefficient.of.variation\n  gt_tbl &lt;- color_column(\n    gt_tbl, \n    df      = sample_stats_df, \n    column  = \"coefficient.of.variation\", \n    palette = scales::brewer_pal(palette = \"Blues\")(9)\n  )\n}, error = function(e) {\n  print(\"Error in coefficient.of.variation color column\")\n  print(e)\n})\n\n# 4) Render/display:\ngt_tbl\n\n\n\n\n\n\n\n\nprogram\nMonitoring.Location.ID\nslope\nn_values\nmean\nmin\nmax\ncoefficient.of.variation\nsignificant_slope\npvalue\n\n\n\n\nSFER\n1\n-0.0007777778\n54\n0.06861111\n0.000\n0.260\n0.7510386\nNA\n0.6544215057\n\n\nSFER\n10\n0.0033809524\n52\n0.05001923\n0.000\n0.270\n1.1341985\n0.003380952\n0.0255507605\n\n\nSFER\n11\n0.0028571429\n55\n0.05534545\n0.000\n0.918\n2.3883107\n0.002857143\n0.0456839845\n\n\nSFER\n12\n0.0050000000\n55\n0.04380000\n0.000\n0.280\n1.0534807\n0.005000000\n0.0092328181\n\n\nSFER\n13\n0.0023500000\n54\n0.03848148\n0.000\n0.340\n1.4136102\nNA\n0.0905470395\n\n\nSFER\n14\n0.0025000000\n55\n0.03687273\n0.000\n0.260\n1.1600966\nNA\n0.0736536391\n\n\nSFER\n15\n0.0045000000\n55\n0.04885455\n0.000\n0.332\n1.3578315\n0.004500000\n0.0084407004\n\n\nSFER\n15.5\n0.0038571429\n53\n0.05158491\n0.000\n0.280\n1.2225321\nNA\n0.0835559726\n\n\nSFER\n16\n0.0030000000\n55\n0.06952727\n0.000\n0.670\n1.9027901\nNA\n0.0702156410\n\n\nSFER\n17\n0.0036666667\n56\n0.04364286\n0.000\n0.310\n1.2642066\n0.003666667\n0.0186154081\n\n\nSFER\n18\n0.0040000000\n56\n0.03726786\n0.000\n0.310\n1.3181669\nNA\n0.0554180336\n\n\nSFER\n19\n0.0050000000\n56\n0.04700000\n0.000\n0.367\n1.4992488\n0.005000000\n0.0083304671\n\n\nSFER\n2\n0.0012500000\n54\n0.06651852\n0.000\n0.320\n0.7756793\nNA\n0.6567947120\n\n\nSFER\n20\n0.0028333333\n56\n0.04982143\n0.000\n0.419\n1.5492953\n0.002833333\n0.0104502154\n\n\nSFER\n21.25\nNA\n1\n0.12000000\n0.120\n0.120\nNA\nNA\nNA\n\n\nSFER\n21.5\n0.0065138889\n54\n0.04918519\n0.000\n0.360\n1.4191376\n0.006513889\n0.0023726859\n\n\nSFER\n21LK\n0.0046250000\n57\n0.06103509\n0.000\n1.007\n2.2741663\n0.004625000\n0.0184663385\n\n\nSFER\n22\n0.0029285714\n57\n0.05670175\n0.000\n0.581\n1.5824055\nNA\n0.1032651510\n\n\nSFER\n22.5\n0.0040000000\n53\n0.04650943\n0.000\n0.301\n1.2544129\n0.004000000\n0.0409611869\n\n\nSFER\n23\n0.0016250000\n57\n0.05357895\n0.000\n0.452\n1.4836741\nNA\n0.1555699326\n\n\nSFER\n24\n0.0070000000\n57\n0.05798246\n0.000\n0.407\n1.3842034\n0.007000000\n0.0086546061\n\n\nSFER\n3\n0.0033333333\n54\n0.06283333\n0.000\n0.310\n0.7790146\nNA\n0.1188822517\n\n\nSFER\n30\n0.0006666667\n54\n0.05564815\n0.000\n0.320\n1.0499519\nNA\n0.6437575778\n\n\nSFER\n30.5\n0.0036666667\n54\n0.05500000\n0.000\n0.215\n0.9684948\nNA\n0.3810480501\n\n\nSFER\n31\n0.0045000000\n55\n0.06092727\n0.000\n0.217\n0.8557464\nNA\n0.3852358544\n\n\nSFER\n32\n0.0012000000\n56\n0.08944643\n0.000\n0.318\n0.7978844\nNA\n0.9439995049\n\n\nSFER\n33\n-0.0038333333\n56\n0.11033929\n0.000\n0.350\n0.7361487\nNA\n0.2598752365\n\n\nSFER\n34\n-0.0028750000\n56\n0.16423214\n0.000\n0.515\n0.6367097\nNA\n0.4791335809\n\n\nSFER\n39\n0.0027500000\n48\n0.12839583\n0.000\n0.910\n1.1023802\nNA\n0.4563652462\n\n\nSFER\n4\n0.0015357143\n44\n0.04788636\n0.000\n0.290\n1.0495561\nNA\n0.1039878209\n\n\nSFER\n40\n0.0045000000\n52\n0.09788462\n0.000\n0.464\n0.8843562\nNA\n0.2536497881\n\n\nSFER\n41\n0.0000000000\n54\n0.08542593\n0.000\n0.295\n0.7662097\nNA\n0.9417566582\n\n\nSFER\n42\n0.0000000000\n55\n0.09661818\n0.000\n0.719\n1.1175100\nNA\n1.0000000000\n\n\nSFER\n45\n0.0030000000\n55\n0.07563636\n0.000\n0.726\n1.3806487\nNA\n0.5699960729\n\n\nSFER\n46\n0.0020000000\n56\n0.06682143\n0.000\n0.667\n1.3863036\nNA\n0.4404606547\n\n\nSFER\n47\n0.0021285714\n56\n0.06926786\n0.000\n0.915\n1.7996283\nNA\n0.2928315245\n\n\nSFER\n48\n0.0011666667\n55\n0.07541818\n0.000\n1.002\n1.8412766\nNA\n0.5167299278\n\n\nSFER\n49\n0.0052500000\n53\n0.07737736\n0.000\n1.343\n2.3969130\nNA\n0.0716878448\n\n\nSFER\n5\n0.0015000000\n44\n0.05004545\n0.000\n0.360\n1.3126044\nNA\n0.5120750458\n\n\nSFER\n5.5\n0.0050000000\n45\n0.04337778\n0.000\n0.260\n1.0299107\n0.005000000\n0.0004244914\n\n\nSFER\n50\n0.0060000000\n54\n0.06487037\n0.000\n0.615\n1.3648028\n0.006000000\n0.0121146601\n\n\nSFER\n51\n0.0045357143\n56\n0.06176786\n0.000\n0.232\n0.9735254\nNA\n0.0810444367\n\n\nSFER\n52\n0.0060000000\n53\n0.07854717\n0.000\n0.756\n1.4044320\nNA\n0.1161647168\n\n\nSFER\n53\n0.0023333333\n50\n0.09056000\n0.000\n1.256\n1.9508805\nNA\n0.5064574712\n\n\nSFER\n54\n0.0087500000\n68\n0.12241176\n0.000\n1.834\n2.3704724\n0.008750000\n0.0020682261\n\n\nSFER\n55\n0.0091666667\n70\n0.10551429\n0.000\n1.833\n2.7374616\n0.009166667\n0.0001352305\n\n\nSFER\n56\n0.0074791667\n71\n0.09819718\n0.000\n1.431\n2.3456396\n0.007479167\n0.0082373930\n\n\nSFER\n57\n0.0075000000\n72\n0.07713889\n0.000\n0.820\n1.7228894\n0.007500000\n0.0070468477\n\n\nSFER\n57.1\n0.0063750000\n72\n0.05695833\n0.000\n0.469\n1.2616461\n0.006375000\n0.0012251198\n\n\nSFER\n57.2\n0.0036666667\n71\n0.09928169\n0.000\n2.634\n3.1680441\nNA\n0.0609336890\n\n\nSFER\n57.3\n0.0017500000\n67\n0.06083582\n0.000\n0.331\n1.1187166\nNA\n0.4795001222\n\n\nSFER\n58\n0.0013333333\n53\n0.05615094\n0.000\n0.272\n1.1831995\nNA\n0.6025160880\n\n\nSFER\n59\n0.0028571429\n53\n0.06081132\n0.000\n0.298\n1.1308930\nNA\n0.1653336957\n\n\nSFER\n6\n0.0044250000\n46\n0.04580435\n0.000\n0.260\n0.9746583\nNA\n0.0599982433\n\n\nSFER\n6.5\n0.0027500000\n47\n0.04591489\n0.000\n0.240\n0.9142491\nNA\n0.0844208530\n\n\nSFER\n60\n0.0036333333\n56\n0.06675000\n0.000\n0.518\n1.3390466\nNA\n0.0803203743\n\n\nSFER\n61\n0.0012500000\n56\n0.08100000\n0.000\n0.873\n1.5043926\nNA\n0.5138022938\n\n\nSFER\n62\n0.0053428571\n56\n0.09478571\n0.000\n1.185\n1.7000321\n0.005342857\n0.0095603902\n\n\nSFER\n63\n0.0029375000\n54\n0.09220370\n0.000\n1.240\n1.8339136\nNA\n0.1246767553\n\n\nSFER\n64\n0.0048571429\n48\n0.12656250\n0.000\n1.390\n1.7084122\nNA\n0.1513113033\n\n\nSFER\n65\n0.0035416667\n51\n0.08601961\n0.000\n1.108\n1.8645730\n0.003541667\n0.0467536087\n\n\nSFER\n66\n0.0047500000\n52\n0.05578846\n0.000\n0.292\n1.0422158\n0.004750000\n0.0181474557\n\n\nSFER\n67\n0.0025000000\n52\n0.05292308\n0.000\n0.210\n0.9279592\nNA\n0.2287691375\n\n\nSFER\n68\n0.0012500000\n55\n0.04834545\n0.000\n0.525\n1.8581055\nNA\n0.2386098119\n\n\nSFER\n69\n0.0025111111\n42\n0.05150000\n0.000\n0.240\n1.1770731\nNA\n0.1895495141\n\n\nSFER\n7\n0.0000000000\n55\n0.04643636\n0.000\n0.280\n1.1332730\nNA\n0.8883656993\n\n\nSFER\n70\n0.0016875000\n42\n0.06169048\n0.000\n0.887\n2.3110544\nNA\n0.0989879318\n\n\nSFER\n71\nNA\n1\n0.00000000\n0.000\n0.000\nNA\nNA\nNA\n\n\nSFER\n8\n0.0033888889\n57\n0.05484211\n0.000\n0.298\n1.1258755\n0.003388889\n0.0263173726\n\n\nSFER\n9\n0.0035555556\n57\n0.05222807\n0.000\n0.382\n1.2386680\nNA\n0.1377122096\n\n\nSFER\n9.5\n0.0057142857\n53\n0.05686792\n0.000\n0.288\n1.0006721\n0.005714286\n0.0010285186\n\n\nSFER\n9.6\nNA\n1\n0.00800000\n0.008\n0.008\nNA\nNA\nNA\n\n\nSFER\n9.7\nNA\n1\n0.02600000\n0.026\n0.026\nNA\nNA\nNA\n\n\nSFER\n9.8\nNA\n1\n0.00300000\n0.003\n0.003\nNA\nNA\nNA\n\n\nSFER\nAC1\nNA\n1\n0.04000000\n0.040\n0.040\nNA\nNA\nNA\n\n\nSFER\nAC2\nNA\n1\n0.03000000\n0.030\n0.030\nNA\nNA\nNA\n\n\nSFER\nAC3\nNA\n1\n0.01000000\n0.010\n0.010\nNA\nNA\nNA\n\n\nSFER\nAC4\nNA\n1\n0.09000000\n0.090\n0.090\nNA\nNA\nNA\n\n\nSFER\nAC5\nNA\n1\n0.08000000\n0.080\n0.080\nNA\nNA\nNA\n\n\nSFER\nAC6\nNA\n1\n0.07000000\n0.070\n0.070\nNA\nNA\nNA\n\n\nSFER\nAMI1\n-0.0200000000\n26\n0.08046154\n0.007\n0.201\n0.5906592\nNA\n0.3750436236\n\n\nSFER\nAMI2\n0.0120000000\n26\n0.05661538\n0.000\n0.174\n0.6589064\nNA\n0.3973214190\n\n\nSFER\nAMI3\n0.0000000000\n26\n0.06976923\n0.000\n0.387\n1.2204775\nNA\n1.0000000000\n\n\nSFER\nAMI4\n0.0000000000\n25\n0.05424000\n0.000\n0.315\n1.1265348\nNA\n0.6055766163\n\n\nSFER\nAMI5\n0.0200000000\n26\n0.08661538\n0.000\n0.630\n1.5410889\nNA\n0.1833212262\n\n\nSFER\nAMI6\n0.0300000000\n26\n0.06069231\n0.000\n0.335\n1.0459252\nNA\n0.0513483326\n\n\nSFER\nAMI7\n0.0180000000\n26\n0.06219231\n0.000\n0.188\n0.7401028\nNA\n0.8285930752\n\n\nSFER\nAMI8\n0.0100000000\n26\n0.06169231\n0.000\n0.220\n0.8568516\nNA\n0.8285930752\n\n\nSFER\nAMI9\n0.0085000000\n26\n0.06565385\n0.000\n0.189\n0.7484920\nNA\n0.5160029354\n\n\nSFER\nBG1\n0.0300000000\n24\n0.45225000\n0.140\n1.773\n0.7927078\nNA\n0.6519984739\n\n\nSFER\nBG10\nNA\n1\n0.01000000\n0.010\n0.010\nNA\nNA\nNA\n\n\nSFER\nBG11\nNA\n1\n0.01000000\n0.010\n0.010\nNA\nNA\nNA\n\n\nSFER\nBG12\nNA\n1\n0.02000000\n0.020\n0.020\nNA\nNA\nNA\n\n\nSFER\nBG13\nNA\n1\n0.06000000\n0.060\n0.060\nNA\nNA\nNA\n\n\nSFER\nBG14\nNA\n1\n0.05000000\n0.050\n0.050\nNA\nNA\nNA\n\n\nSFER\nBG15\nNA\n1\n0.05000000\n0.050\n0.050\nNA\nNA\nNA\n\n\nSFER\nBG16\nNA\n1\n0.05000000\n0.050\n0.050\nNA\nNA\nNA\n\n\nSFER\nBG17\nNA\n1\n0.07000000\n0.070\n0.070\nNA\nNA\nNA\n\n\nSFER\nBG18\nNA\n1\n0.00000000\n0.000\n0.000\nNA\nNA\nNA\n\n\nSFER\nBG2\n0.0162500000\n30\n0.18463333\n0.020\n0.542\n0.6838544\nNA\n0.1300043292\n\n\nSFER\nBG20\nNA\n1\n0.03000000\n0.030\n0.030\nNA\nNA\nNA\n\n\nSFER\nBG3\n0.0104000000\n30\n0.10153333\n0.000\n1.260\n2.2458208\n0.010400000\n0.0405630913\n\n\nSFER\nBG4\n0.0057000000\n30\n0.06783333\n0.000\n0.302\n0.9221114\nNA\n0.4948241451\n\n\nSFER\nBG6\n0.0600000000\n11\n0.05227273\n0.015\n0.140\n0.6994570\nNA\n0.1336144025\n\n\nSFER\nBG7\n0.0180000000\n11\n0.04390909\n0.030\n0.090\n0.4393090\nNA\n0.6170750775\n\n\nSFER\nBG8\nNA\n1\n0.02000000\n0.020\n0.020\nNA\nNA\nNA\n\n\nSFER\nBG9\nNA\n1\n0.02000000\n0.020\n0.020\nNA\nNA\nNA\n\n\nSFER\nBK1\nNA\n1\n0.00300000\n0.003\n0.003\nNA\nNA\nNA\n\n\nSFER\nCAL1\n-0.0147500000\n32\n0.25715625\n0.050\n0.814\n0.5771566\nNA\n0.3089378257\n\n\nSFER\nCAL2\n-0.0066000000\n34\n0.15650000\n0.020\n0.653\n0.7728696\nNA\n0.7874064907\n\n\nSFER\nCAL3\n-0.0045750000\n34\n0.13970588\n0.000\n0.603\n0.8353112\nNA\n0.6830913983\n\n\nSFER\nCAL4\n0.0032500000\n34\n0.10329412\n0.010\n0.522\n0.9741151\nNA\n0.7874064907\n\n\nSFER\nCAL5\n0.0009000000\n34\n0.07688235\n0.000\n0.627\n1.4446208\nNA\n1.0000000000\n\n\nSFER\nCAL6\n0.0005000000\n28\n0.04996429\n0.000\n0.147\n0.8118063\nNA\n0.7003113729\n\n\nSFER\nCAL7\nNA\n1\n0.09300000\n0.093\n0.093\nNA\nNA\nNA\n\n\nSFER\nCAL8\nNA\n1\n0.11200000\n0.112\n0.112\nNA\nNA\nNA\n\n\nSFER\nCALA\nNA\n1\n0.06400000\n0.064\n0.064\nNA\nNA\nNA\n\n\nSFER\nCK1\nNA\n1\n0.33100000\n0.331\n0.331\nNA\nNA\nNA\n\n\nSFER\nCK2\nNA\n1\n0.12200000\n0.122\n0.122\nNA\nNA\nNA\n\n\nSFER\nCW1\n0.0122000000\n16\n0.10281250\n0.000\n0.653\n1.6978564\nNA\n0.3081795475\n\n\nSFER\nCW2\n-0.0100000000\n16\n0.06293750\n0.000\n0.140\n0.6901772\nNA\n1.0000000000\n\n\nSFER\nCW3\n0.0247000000\n17\n0.05500000\n0.000\n0.150\n0.7465347\n0.024700000\n0.0114459196\n\n\nSFER\nCW4\n-0.0050000000\n16\n0.05425000\n0.000\n0.236\n1.0403131\nNA\n1.0000000000\n\n\nSFER\nCW5\n0.0332000000\n12\n0.04783333\n0.000\n0.190\n1.0361270\nNA\n0.2452781168\n\n\nSFER\nCW6\n0.0000000000\n12\n0.04300000\n0.000\n0.120\n0.7456381\nNA\n1.0000000000\n\n\nSFER\nCW7\n-0.0100000000\n11\n0.03636364\n0.010\n0.060\n0.4806246\nNA\n0.6170750775\n\n\nSFER\nCaseyhole\nNA\n1\n0.00600000\n0.006\n0.006\nNA\nNA\nNA\n\n\nSFER\nEB1\nNA\n1\n0.28000000\n0.280\n0.280\nNA\nNA\nNA\n\n\nSFER\nEB2\nNA\n1\n0.00600000\n0.006\n0.006\nNA\nNA\nNA\n\n\nSFER\nEH07\nNA\n1\n0.01400000\n0.014\n0.014\nNA\nNA\nNA\n\n\nSFER\nEH08\nNA\n1\n0.04500000\n0.045\n0.045\nNA\nNA\nNA\n\n\nSFER\nEKIN\n0.0028571429\n52\n0.05190385\n0.000\n0.390\n1.0917219\nNA\n0.1268939627\n\n\nSFER\nEKMID\n0.0016666667\n53\n0.04588679\n0.000\n0.270\n0.8736536\nNA\n0.2545647947\n\n\nSFER\nEKOFF\n0.0022222222\n54\n0.04320370\n0.000\n0.101\n0.5993493\nNA\n0.1650819611\n\n\nSFER\nGP1\nNA\n4\n0.03775000\n0.008\n0.083\n0.9215536\nNA\nNA\n\n\nSFER\nGP1.5\nNA\n1\n0.20500000\n0.205\n0.205\nNA\nNA\nNA\n\n\nSFER\nGP2\nNA\n4\n0.07500000\n0.013\n0.191\n1.1103820\nNA\nNA\n\n\nSFER\nGP3\nNA\n4\n0.06100000\n0.014\n0.185\n1.3569308\nNA\nNA\n\n\nSFER\nGP4\nNA\n4\n0.01225000\n0.000\n0.026\n0.8750954\nNA\nNA\n\n\nSFER\nGP5\n0.0087500000\n34\n0.04650000\n0.000\n0.295\n1.2019743\nNA\n0.1056454292\n\n\nSFER\nGS\nNA\n1\n0.09100000\n0.091\n0.091\nNA\nNA\nNA\n\n\nSFER\nGlider\nNA\n2\n0.03000000\n0.000\n0.060\n1.4142136\nNA\nNA\n\n\nSFER\nHB1\nNA\n1\n0.09000000\n0.090\n0.090\nNA\nNA\nNA\n\n\nSFER\nHB2\nNA\n1\n0.09000000\n0.090\n0.090\nNA\nNA\nNA\n\n\nSFER\nHB3\nNA\n1\n0.11000000\n0.110\n0.110\nNA\nNA\nNA\n\n\nSFER\nHB4\nNA\n1\n0.07000000\n0.070\n0.070\nNA\nNA\nNA\n\n\nSFER\nHB5\nNA\n1\n0.07000000\n0.070\n0.070\nNA\nNA\nNA\n\n\nSFER\nHB6\nNA\n1\n0.13000000\n0.130\n0.130\nNA\nNA\nNA\n\n\nSFER\nJunkpile\nNA\n1\n0.03400000\n0.034\n0.034\nNA\nNA\nNA\n\n\nSFER\nKW1\n0.0105000000\n34\n0.04473529\n0.000\n0.246\n1.3011706\n0.010500000\n0.0035892030\n\n\nSFER\nKW2\n0.0100000000\n34\n0.06132353\n0.000\n0.267\n0.8850638\n0.010000000\n0.0375140016\n\n\nSFER\nKW3\n0.0047500000\n34\n0.04294118\n0.000\n0.202\n0.9916638\nNA\n0.4008141694\n\n\nSFER\nKW4\n0.0101250000\n33\n0.05287879\n0.000\n0.244\n0.9474569\n0.010125000\n0.0327115835\n\n\nSFER\nL1\n-0.0450000000\n9\n0.14444444\n0.040\n0.370\n0.6748767\nNA\n1.0000000000\n\n\nSFER\nL3\n0.0100000000\n9\n0.08111111\n0.010\n0.270\n1.0043301\nNA\n1.0000000000\n\n\nSFER\nL5\n0.0100000000\n9\n0.07111111\n0.020\n0.270\n1.1015625\nNA\n1.0000000000\n\n\nSFER\nL7\n-0.0425000000\n9\n0.07277778\n0.000\n0.180\n0.8137025\nNA\n0.4795001222\n\n\nSFER\nL9\n0.0000000000\n10\n0.06300000\n0.030\n0.180\n0.7021306\nNA\n1.0000000000\n\n\nSFER\nM01\nNA\n1\n0.05000000\n0.050\n0.050\nNA\nNA\nNA\n\n\nSFER\nM02\nNA\n1\n0.05700000\n0.057\n0.057\nNA\nNA\nNA\n\n\nSFER\nM03\nNA\n1\n0.37400000\n0.374\n0.374\nNA\nNA\nNA\n\n\nSFER\nM04\nNA\n1\n0.04100000\n0.041\n0.041\nNA\nNA\nNA\n\n\nSFER\nM05\nNA\n1\n0.30700000\n0.307\n0.307\nNA\nNA\nNA\n\n\nSFER\nMR\n0.0018333333\n55\n0.04554545\n0.000\n0.338\n1.1052186\nNA\n0.3343815755\n\n\nSFER\nMudhole\nNA\n1\n0.09600000\n0.096\n0.096\nNA\nNA\nNA\n\n\nSFER\nNaplesBlueHole\nNA\n1\n0.00600000\n0.006\n0.006\nNA\nNA\nNA\n\n\nSFER\nPLUME\nNA\n1\n0.02000000\n0.020\n0.020\nNA\nNA\nNA\n\n\nSFER\nROME4\n0.0600000000\n11\n0.07818182\n0.000\n0.220\n0.7519759\nNA\n1.0000000000\n\n\nSFER\nROME5\n0.0900000000\n11\n0.13863636\n0.010\n0.310\n0.6591404\nNA\n1.0000000000\n\n\nSFER\nRP1\n0.0162000000\n34\n0.18358824\n0.045\n0.381\n0.4822603\nNA\n0.3495748061\n\n\nSFER\nRP2\n0.0165000000\n34\n0.13200000\n0.030\n0.371\n0.6261812\nNA\n0.0823522151\n\n\nSFER\nRP3\n0.0046000000\n35\n0.10308571\n0.000\n0.420\n0.8663143\n0.004600000\n0.0309851679\n\n\nSFER\nRP4\n0.0055000000\n34\n0.06558824\n0.000\n0.365\n1.2488493\n0.005500000\n0.0412268333\n\n\nSFER\nRedTide\nNA\n1\n0.03700000\n0.037\n0.037\nNA\nNA\nNA\n\n\nSFER\nTB1\n0.0087500000\n29\n0.06979310\n0.000\n0.320\n1.0344339\nNA\n0.8611082722\n\n\nSFER\nTB10\n0.0032000000\n27\n0.05888889\n0.000\n0.220\n0.8990671\nNA\n0.2301393404\n\n\nSFER\nTB11\nNA\n2\n0.02150000\n0.000\n0.043\n1.4142136\nNA\nNA\n\n\nSFER\nTB12\nNA\n1\n0.00000000\n0.000\n0.000\nNA\nNA\nNA\n\n\nSFER\nTB13\nNA\n1\n0.01500000\n0.015\n0.015\nNA\nNA\nNA\n\n\nSFER\nTB2\n0.0140000000\n29\n0.09375862\n0.000\n0.629\n1.4238410\nNA\n0.1041180298\n\n\nSFER\nTB3\n0.0093000000\n29\n0.05544828\n0.000\n0.165\n0.7922517\nNA\n0.7222829627\n\n\nSFER\nTB4\n0.0270000000\n29\n0.05531034\n0.000\n0.231\n0.9532348\nNA\n0.0542795341\n\n\nSFER\nTB5\n0.0120000000\n29\n0.04968966\n0.000\n0.140\n0.7869717\n0.012000000\n0.0329693812\n\n\nSFER\nTB6\nNA\n2\n0.03150000\n0.005\n0.058\n1.1897352\nNA\nNA\n\n\nSFER\nTB7\nNA\n2\n0.02950000\n0.009\n0.050\n0.9827586\nNA\nNA\n\n\nSFER\nTB8\nNA\n2\n0.02700000\n0.025\n0.029\n0.1047566\nNA\nNA\n\n\nSFER\nTB9\nNA\n2\n0.06400000\n0.021\n0.107\n0.9501747\nNA\nNA\n\n\nSFER\nTBA\nNA\n1\n0.18500000\n0.185\n0.185\nNA\nNA\nNA\n\n\nSFER\nTBB\nNA\n1\n0.07700000\n0.077\n0.077\nNA\nNA\nNA\n\n\nSFER\nTBC\nNA\n1\n0.05400000\n0.054\n0.054\nNA\nNA\nNA\n\n\nSFER\nUKIN\n0.0034166667\n53\n0.05130189\n0.000\n0.330\n1.2640225\n0.003416667\n0.0457472768\n\n\nSFER\nUKMID\n0.0050000000\n54\n0.05440741\n0.000\n0.330\n1.0251671\n0.005000000\n0.0034052358\n\n\nSFER\nUKOFF\n0.0039285714\n54\n0.05468519\n0.000\n0.287\n1.0534286\n0.003928571\n0.0453166994\n\n\nSFER\nV1\n0.0262500000\n30\n0.15906667\n0.020\n0.450\n0.5920392\nNA\n0.1581524584\n\n\nSFER\nV10\nNA\n1\n0.00000000\n0.000\n0.000\nNA\nNA\nNA\n\n\nSFER\nV11\nNA\n1\n0.00700000\n0.007\n0.007\nNA\nNA\nNA\n\n\nSFER\nV2\n0.0140000000\n29\n0.07082759\n0.000\n0.240\n0.6994054\nNA\n0.3816730693\n\n\nSFER\nV3\n0.0102500000\n29\n0.07848276\n0.000\n0.450\n1.1184053\nNA\n0.2863205968\n\n\nSFER\nV4\n0.0100000000\n30\n0.07170000\n0.000\n0.440\n1.2078299\nNA\n0.1581524584\n\n\nSFER\nV5\n0.0055000000\n29\n0.07320690\n0.010\n0.410\n1.2466998\nNA\n0.2206713619\n\n\nSFER\nV6\n0.0059000000\n30\n0.07216667\n0.000\n0.450\n1.3966947\nNA\n0.4213482327\n\n\nSFER\nV7\n0.0053333333\n30\n0.06200000\n0.000\n0.160\n0.7245261\nNA\n0.5030014325\n\n\nSFER\nV8\n0.0055000000\n29\n0.04255172\n0.000\n0.157\n0.8702689\nNA\n0.1551315687\n\n\nSFER\nV9\n0.0043500000\n30\n0.06223333\n0.000\n0.290\n0.9295054\nNA\n0.3150596174\n\n\nSFER\nWS\n0.0036349206\n56\n0.06366071\n0.000\n0.813\n1.8716204\n0.003634921\n0.0186813519\n\n\nSFER\nZ03027\nNA\n1\n0.00700000\n0.007\n0.007\nNA\nNA\nNA\n\n\nSFER\nZ03076\nNA\n1\n0.00100000\n0.001\n0.001\nNA\nNA\nNA\n\n\nSFER\nZ03116\nNA\n1\n0.00300000\n0.003\n0.003\nNA\nNA\nNA\n\n\nSFER\nZ03146\nNA\n1\n0.05700000\n0.057\n0.057\nNA\nNA\nNA\n\n\nSFER\nZ03198\nNA\n1\n0.00300000\n0.003\n0.003\nNA\nNA\nNA\n\n\nSFER\nZ04067\nNA\n1\n0.11900000\n0.119\n0.119\nNA\nNA\nNA\n\n\nSFER\nZ04068\nNA\n1\n0.03700000\n0.037\n0.037\nNA\nNA\nNA\n\n\nSFER\nZ04093\nNA\n1\n0.03700000\n0.037\n0.037\nNA\nNA\nNA\n\n\nSFER\nZ04099\nNA\n1\n0.00600000\n0.006\n0.006\nNA\nNA\nNA\n\n\nSFER\nZ04110\nNA\n1\n0.01800000\n0.018\n0.018\nNA\nNA\nNA\n\n\nSFER\nZ04610\nNA\n1\n0.00900000\n0.009\n0.009\nNA\nNA\nNA\n\n\n\n\n\n\n\n\n\nReporting Programs:\n\n\ndisplay reporting programs\nlibrary(ggplot2)\nggplot(df, aes(x = program)) +\n  geom_bar() +\n  labs(title = \"Reporting Programs\", x = \"Program\", y = \"Count\")"
  },
  {
    "objectID": "analyte_reports/analyte_reports/Phosphorus.html",
    "href": "analyte_reports/analyte_reports/Phosphorus.html",
    "title": "Phosphorus Report",
    "section": "",
    "text": "get data across all programs, filter for analyte\nlibrary('here')\nlibrary('dplyr')\nsource(here(\"R/getAllData.R\"))\nfull_df &lt;- getAllData()\ndf &lt;- filter(full_df, DEP.Analyte.Name == params$analyte)\n\n\n\n\ncreate .csv of analyte data\n# save df to csv\n# reduce to only cols we need & save to csv\ndf %&gt;%\n  mutate(\n    source = program,\n    site = Monitoring.Location.ID,\n    datetime = Activity.Start.Date.Time,\n    analyte = DEP.Analyte.Name,\n    value = DEP.Result.Value.Number,\n    units = DEP.Result.Unit,\n    latitude = Org.Decimal.Latitude,\n    longitude = Org.Decimal.Longitude,\n    sample_depth = Activity.Depth,\n    .keep = \"none\"\n) %&gt;%\n  write.csv(here(\"data\", \"exports\", \"unified-wq-db-samples\", paste0(params$analyte, \".csv\")))\n\n\nDownload data for this analyte here\n\nHistogram of DEP.Result.Value.Number:\n\n\ndisplay histogram of values\nlibrary(ggplot2)\nggplot(df, aes(x = DEP.Result.Value.Number)) +\n  geom_histogram(bins = 30, fill = \"blue\", color = \"black\") +\n  labs(title = \"Histogram of Values\", x = \"Value\", y = \"Count\")\n\n\n\n\n\n\n\n\n\n\n\nStation Statistics:\n\n\ncreate station statistics dataframe\nsource(here(\"R/seasonalMannKendall.R\"))\nlibrary(lubridate)  # for mdy_hms()\nlibrary(pander)  # for display\n\n# create table of samples for each station\nsamples_df &lt;- df %&gt;%\n  select(\n    program, \n    Monitoring.Location.ID, \n    Activity.Start.Date.Time,\n    analyte = DEP.Analyte.Name,\n    DEP.Result.Value.Number, \n    DEP.Result.Unit,\n    latitude = Org.Decimal.Latitude,\n    longitude = Org.Decimal.Longitude,\n    sample_depth = Activity.Depth\n    ) %&gt;%\n  # drop any with empty Monitoring.Location.ID\n  filter(!is.na(Monitoring.Location.ID)) %&gt;%\n  # drop any with empty Activity.Start.Date.Time\n  filter(!is.na(Activity.Start.Date.Time)) %&gt;%\n  # parse the \"MM/DD/YYYY HH:MM:SS\" strings into POSIXct\n  mutate(Activity.Start.Date.Time = mdy_hms(\n          Activity.Start.Date.Time,\n          tz = \"UTC\")) %&gt;%\n  distinct()\n\n\n# add statistics for each station\nsample_stats_df &lt;- samples_df %&gt;%\n  group_by(program, Monitoring.Location.ID) %&gt;%\n  reframe(\n    {\n      tmp &lt;- seasonalMannKendallVectorized(\n        Activity.Start.Date.Time,\n        DEP.Result.Value.Number\n      )\n    },\n    n_values = n(),\n    mean = mean(DEP.Result.Value.Number),\n    min = min(DEP.Result.Value.Number),\n    max = max(DEP.Result.Value.Number),\n    coefficient.of.variation = sd(DEP.Result.Value.Number) / mean(DEP.Result.Value.Number)\n  ) %&gt;%\n  mutate(\n    # create column significant_slope\n    significant_slope = ifelse(z &lt;= 0.05, slope, NA_real_),\n    pvalue = z\n  ) %&gt;%\n  # drop unwanted columns added by seasonalMannKendall\n  select(\n    -z,\n    -tau,\n    -chi_square\n  )\n\n\n\n# print(head(sample_stats_df))\n# # display sample_stats_df with pander\n# pander(sample_stats_df)\n\n\n\n\nsave stats to csv\nsample_stats_df %&gt;%\n  write.csv(here(\n    \"data\", \"exports\", \"seasonal-mann-kendall-stats\", paste0(params$analyte, \".csv\")))\n\n\nDownload data for this analyte’s statistics here\n\n\ndisplay with gt\nlibrary(gt)\nlibrary(scales)\nlibrary(tidyselect)  # for all_of()\nlibrary(RColorBrewer) # for brewer.pal()\n\n# ── color_column() ─────────────────────────────────────────────────────────────\n# gt_tbl   : a gt object that you’ve already created (e.g. `sample_stats_df %&gt;% gt()`)\n# df       : the original data.frame (must contain the column you want to color)\n# column   : a string, e.g. \"slope\" or \"n_values\"\n# palette  : a character vector of colours to feed to col_numeric()\n#\ncolor_column &lt;- function(gt_tbl, df, column, \n                         palette = c(\"red\", \"orange\", \"yellow\", \"green\", \"blue\", \"violet\"),\n                         domain = NULL) {\n  # 1) Pull out that column’s numeric values\n  vals &lt;- df[[column]]\n  if (!is.numeric(vals)) {\n    stop(sprintf(\"`%s` is not numeric; data_color() requires a numeric column.\", column))\n  }\n  \n  # 2) Compute its min and max (ignoring NA)\n  min_val &lt;- min(vals, na.rm = TRUE)\n  max_val &lt;- max(vals, na.rm = TRUE)\n  if (is.null(domain)) {\n    domain &lt;- c(min_val, max_val)\n  }\n  \n  # 3) Call data_color() on the gt table for that single column\n  gt_tbl %&gt;%\n    data_color(\n      columns = all_of(column),\n      colors  = col_numeric(\n        palette = palette,\n        domain  = domain\n      )\n    )\n}\nlibrary(dplyr)\nlibrary(gt)\n\n# 1) First build your gt table as usual:\ngt_tbl &lt;- sample_stats_df %&gt;% \n  gt()\n\n# slope blue (-) to red (+) (0 centered)\ntryCatch({\n  min_slope &lt;- min(sample_stats_df$slope,  na.rm = TRUE)\n  max_slope &lt;- max(sample_stats_df$slope,  na.rm = TRUE)\n  max_abs_slope &lt;- max(abs(min_slope), abs(max_slope))\n  gt_tbl &lt;- color_column(\n    gt_tbl, \n    df     = sample_stats_df, \n    column = \"slope\",\n    palette = rev(brewer.pal(11, \"RdBu\")),\n    domain  = c(-max_abs_slope, max_abs_slope)\n  )\n}, error = function(e) {\n  print(\"Error in slope color column\")\n  print(e)\n})\n\n\n[1] \"Error in slope color column\"\n&lt;rlang_error in col_numeric(palette = palette, domain = domain): Wasn't able to determine range of `domain`&gt;\n\n\ndisplay with gt\ntryCatch({\n  # pvalue Z\n  gt_tbl &lt;- color_column(\n    gt_tbl, \n    df      = sample_stats_df, \n    column  = \"z\", \n    palette = scales::brewer_pal(palette = \"Blues\")(9)\n  )\n}, error = function(e) {\n  print(\"Error in z color column\")\n  print(e)\n})\n\n\n[1] \"Error in z color column\"\n&lt;simpleError in color_column(gt_tbl, df = sample_stats_df, column = \"z\", palette = (scales::brewer_pal(palette = \"Blues\"))(9)): `z` is not numeric; data_color() requires a numeric column.&gt;\n\n\ndisplay with gt\n# slope blue (-) to red (+) (0 centered)\ntryCatch({\n  min_slope &lt;- min(sample_stats_df$significant_slope,  na.rm = TRUE)\n  max_slope &lt;- max(sample_stats_df$significant_slope,  na.rm = TRUE)\n  max_abs_slope &lt;- max(abs(min_slope), abs(max_slope))\n  gt_tbl &lt;- color_column(\n    gt_tbl, \n    df     = sample_stats_df, \n    column = \"significant_slope\",\n    palette = rev(brewer.pal(11, \"RdBu\")),\n    domain  = c(-max_abs_slope, max_abs_slope)\n  )\n}, error = function(e) {\n  print(\"Error in significant_slope color column\")\n  print(e)\n})\n\n\n[1] \"Error in significant_slope color column\"\n&lt;simpleError in color_column(gt_tbl, df = sample_stats_df, column = \"significant_slope\",     palette = rev(brewer.pal(11, \"RdBu\")), domain = c(-max_abs_slope,         max_abs_slope)): `significant_slope` is not numeric; data_color() requires a numeric column.&gt;\n\n\ndisplay with gt\ntryCatch({\n  # mean values blue to red (0 centered)\n  min_mean &lt;- min(sample_stats_df$mean,  na.rm = TRUE)\n  max_mean &lt;- max(sample_stats_df$mean,  na.rm = TRUE)\n  max_abs_mean &lt;- max(abs(min_mean), abs(max_mean))\n  gt_tbl &lt;- color_column(\n    gt_tbl, \n    df     = sample_stats_df, \n    column = \"mean\",\n    palette = rev(brewer.pal(11, \"RdBu\")),\n    domain  = c(-max_abs_mean, max_abs_mean)\n  )\n}, error = function(e) {\n  print(\"Error in mean color column\")\n  print(e)\n})\n\n\n[1] \"Error in mean color column\"\n&lt;rlang_error in col_numeric(palette = palette, domain = domain): Wasn't able to determine range of `domain`&gt;\n\n\ndisplay with gt\ntryCatch({\n  # n values white to green\n  gt_tbl &lt;- color_column(\n    gt_tbl, \n    df      = sample_stats_df, \n    column  = \"n_values\", \n    palette = scales::brewer_pal(palette = \"Greens\")(9)\n  )\n}, error = function(e) {\n  print(\"Error in n_values color column\")\n  print(e)\n})\n\n\n[1] \"Error in n_values color column\"\n&lt;rlang_error in col_numeric(palette = palette, domain = domain): Wasn't able to determine range of `domain`&gt;\n\n\ndisplay with gt\ntryCatch({\n  # min\n  gt_tbl &lt;- color_column(\n    gt_tbl, \n    df      = sample_stats_df, \n    column  = \"min\", \n    palette = scales::brewer_pal(palette = \"Blues\")(9)\n  )\n}, error = function(e) {\n  print(\"Error in min color column\")\n  print(e)\n})\n\n\n[1] \"Error in min color column\"\n&lt;rlang_error in col_numeric(palette = palette, domain = domain): Wasn't able to determine range of `domain`&gt;\n\n\ndisplay with gt\ntryCatch({\n  # max\n  gt_tbl &lt;- color_column(\n    gt_tbl, \n    df      = sample_stats_df, \n    column  = \"max\", \n    palette = scales::brewer_pal(palette = \"Blues\")(9)\n  )\n}, error = function(e) {\n  print(\"Error in max color column\")\n  print(e)\n})\n\n\n[1] \"Error in max color column\"\n&lt;rlang_error in col_numeric(palette = palette, domain = domain): Wasn't able to determine range of `domain`&gt;\n\n\ndisplay with gt\ntryCatch({\n  # coefficient.of.variation\n  gt_tbl &lt;- color_column(\n    gt_tbl, \n    df      = sample_stats_df, \n    column  = \"coefficient.of.variation\", \n    palette = scales::brewer_pal(palette = \"Blues\")(9)\n  )\n}, error = function(e) {\n  print(\"Error in coefficient.of.variation color column\")\n  print(e)\n})\n\n\n[1] \"Error in coefficient.of.variation color column\"\n&lt;rlang_error in col_numeric(palette = palette, domain = domain): Wasn't able to determine range of `domain`&gt;\n\n\ndisplay with gt\n# 4) Render/display:\ngt_tbl\n\n\n\n\n\n\n\n\nprogram\nMonitoring.Location.ID\nslope\nn_values\nmean\nmin\nmax\ncoefficient.of.variation\nsignificant_slope\npvalue\n\n\n\n\n\n\n\n\n\n\n\nReporting Programs:\n\n\ndisplay reporting programs\nlibrary(ggplot2)\nggplot(df, aes(x = program)) +\n  geom_bar() +\n  labs(title = \"Reporting Programs\", x = \"Program\", y = \"Count\")"
  },
  {
    "objectID": "analyte_reports/analyte_reports/Silicate.html",
    "href": "analyte_reports/analyte_reports/Silicate.html",
    "title": "Silicate Report",
    "section": "",
    "text": "get data across all programs, filter for analyte\nlibrary('here')\nlibrary('dplyr')\nsource(here(\"R/getAllData.R\"))\nfull_df &lt;- getAllData()\ndf &lt;- filter(full_df, DEP.Analyte.Name == params$analyte)\n\n\n\n\ncreate .csv of analyte data\n# save df to csv\n# reduce to only cols we need & save to csv\ndf %&gt;%\n  mutate(\n    source = program,\n    site = Monitoring.Location.ID,\n    datetime = Activity.Start.Date.Time,\n    analyte = DEP.Analyte.Name,\n    value = DEP.Result.Value.Number,\n    units = DEP.Result.Unit,\n    latitude = Org.Decimal.Latitude,\n    longitude = Org.Decimal.Longitude,\n    sample_depth = Activity.Depth,\n    .keep = \"none\"\n) %&gt;%\n  write.csv(here(\"data\", \"exports\", \"unified-wq-db-samples\", paste0(params$analyte, \".csv\")))\n\n\nDownload data for this analyte here\n\nHistogram of DEP.Result.Value.Number:\n\n\ndisplay histogram of values\nlibrary(ggplot2)\nggplot(df, aes(x = DEP.Result.Value.Number)) +\n  geom_histogram(bins = 30, fill = \"blue\", color = \"black\") +\n  labs(title = \"Histogram of Values\", x = \"Value\", y = \"Count\")\n\n\n\n\n\n\n\n\n\n\n\nStation Statistics:\n\n\ncreate station statistics dataframe\nsource(here(\"R/seasonalMannKendall.R\"))\nlibrary(lubridate)  # for mdy_hms()\nlibrary(pander)  # for display\n\n# create table of samples for each station\nsamples_df &lt;- df %&gt;%\n  select(\n    program, \n    Monitoring.Location.ID, \n    Activity.Start.Date.Time,\n    analyte = DEP.Analyte.Name,\n    DEP.Result.Value.Number, \n    DEP.Result.Unit,\n    latitude = Org.Decimal.Latitude,\n    longitude = Org.Decimal.Longitude,\n    sample_depth = Activity.Depth\n    ) %&gt;%\n  # drop any with empty Monitoring.Location.ID\n  filter(!is.na(Monitoring.Location.ID)) %&gt;%\n  # drop any with empty Activity.Start.Date.Time\n  filter(!is.na(Activity.Start.Date.Time)) %&gt;%\n  # parse the \"MM/DD/YYYY HH:MM:SS\" strings into POSIXct\n  mutate(Activity.Start.Date.Time = mdy_hms(\n          Activity.Start.Date.Time,\n          tz = \"UTC\")) %&gt;%\n  distinct()\n\n\n# add statistics for each station\nsample_stats_df &lt;- samples_df %&gt;%\n  group_by(program, Monitoring.Location.ID) %&gt;%\n  reframe(\n    {\n      tmp &lt;- seasonalMannKendallVectorized(\n        Activity.Start.Date.Time,\n        DEP.Result.Value.Number\n      )\n    },\n    n_values = n(),\n    mean = mean(DEP.Result.Value.Number),\n    min = min(DEP.Result.Value.Number),\n    max = max(DEP.Result.Value.Number),\n    coefficient.of.variation = sd(DEP.Result.Value.Number) / mean(DEP.Result.Value.Number)\n  ) %&gt;%\n  mutate(\n    # create column significant_slope\n    significant_slope = ifelse(z &lt;= 0.05, slope, NA_real_),\n    pvalue = z\n  ) %&gt;%\n  # drop unwanted columns added by seasonalMannKendall\n  select(\n    -z,\n    -tau,\n    -chi_square\n  )\n\n\n\n# print(head(sample_stats_df))\n# # display sample_stats_df with pander\n# pander(sample_stats_df)\n\n\n\n\nsave stats to csv\nsample_stats_df %&gt;%\n  write.csv(here(\n    \"data\", \"exports\", \"seasonal-mann-kendall-stats\", paste0(params$analyte, \".csv\")))\n\n\nDownload data for this analyte’s statistics here\n\n\ndisplay with gt\nlibrary(gt)\nlibrary(scales)\nlibrary(tidyselect)  # for all_of()\nlibrary(RColorBrewer) # for brewer.pal()\n\n# ── color_column() ─────────────────────────────────────────────────────────────\n# gt_tbl   : a gt object that you’ve already created (e.g. `sample_stats_df %&gt;% gt()`)\n# df       : the original data.frame (must contain the column you want to color)\n# column   : a string, e.g. \"slope\" or \"n_values\"\n# palette  : a character vector of colours to feed to col_numeric()\n#\ncolor_column &lt;- function(gt_tbl, df, column, \n                         palette = c(\"red\", \"orange\", \"yellow\", \"green\", \"blue\", \"violet\"),\n                         domain = NULL) {\n  # 1) Pull out that column’s numeric values\n  vals &lt;- df[[column]]\n  if (!is.numeric(vals)) {\n    stop(sprintf(\"`%s` is not numeric; data_color() requires a numeric column.\", column))\n  }\n  \n  # 2) Compute its min and max (ignoring NA)\n  min_val &lt;- min(vals, na.rm = TRUE)\n  max_val &lt;- max(vals, na.rm = TRUE)\n  if (is.null(domain)) {\n    domain &lt;- c(min_val, max_val)\n  }\n  \n  # 3) Call data_color() on the gt table for that single column\n  gt_tbl %&gt;%\n    data_color(\n      columns = all_of(column),\n      colors  = col_numeric(\n        palette = palette,\n        domain  = domain\n      )\n    )\n}\nlibrary(dplyr)\nlibrary(gt)\n\n# 1) First build your gt table as usual:\ngt_tbl &lt;- sample_stats_df %&gt;% \n  gt()\n\n# slope blue (-) to red (+) (0 centered)\ntryCatch({\n  min_slope &lt;- min(sample_stats_df$slope,  na.rm = TRUE)\n  max_slope &lt;- max(sample_stats_df$slope,  na.rm = TRUE)\n  max_abs_slope &lt;- max(abs(min_slope), abs(max_slope))\n  gt_tbl &lt;- color_column(\n    gt_tbl, \n    df     = sample_stats_df, \n    column = \"slope\",\n    palette = rev(brewer.pal(11, \"RdBu\")),\n    domain  = c(-max_abs_slope, max_abs_slope)\n  )\n}, error = function(e) {\n  print(\"Error in slope color column\")\n  print(e)\n})\n\ntryCatch({\n  # pvalue Z\n  gt_tbl &lt;- color_column(\n    gt_tbl, \n    df      = sample_stats_df, \n    column  = \"z\", \n    palette = scales::brewer_pal(palette = \"Blues\")(9)\n  )\n}, error = function(e) {\n  print(\"Error in z color column\")\n  print(e)\n})\n\n\n[1] \"Error in z color column\"\n&lt;simpleError in color_column(gt_tbl, df = sample_stats_df, column = \"z\", palette = (scales::brewer_pal(palette = \"Blues\"))(9)): `z` is not numeric; data_color() requires a numeric column.&gt;\n\n\ndisplay with gt\n# slope blue (-) to red (+) (0 centered)\ntryCatch({\n  min_slope &lt;- min(sample_stats_df$significant_slope,  na.rm = TRUE)\n  max_slope &lt;- max(sample_stats_df$significant_slope,  na.rm = TRUE)\n  max_abs_slope &lt;- max(abs(min_slope), abs(max_slope))\n  gt_tbl &lt;- color_column(\n    gt_tbl, \n    df     = sample_stats_df, \n    column = \"significant_slope\",\n    palette = rev(brewer.pal(11, \"RdBu\")),\n    domain  = c(-max_abs_slope, max_abs_slope)\n  )\n}, error = function(e) {\n  print(\"Error in significant_slope color column\")\n  print(e)\n})\n\ntryCatch({\n  # mean values blue to red (0 centered)\n  min_mean &lt;- min(sample_stats_df$mean,  na.rm = TRUE)\n  max_mean &lt;- max(sample_stats_df$mean,  na.rm = TRUE)\n  max_abs_mean &lt;- max(abs(min_mean), abs(max_mean))\n  gt_tbl &lt;- color_column(\n    gt_tbl, \n    df     = sample_stats_df, \n    column = \"mean\",\n    palette = rev(brewer.pal(11, \"RdBu\")),\n    domain  = c(-max_abs_mean, max_abs_mean)\n  )\n}, error = function(e) {\n  print(\"Error in mean color column\")\n  print(e)\n})\n\ntryCatch({\n  # n values white to green\n  gt_tbl &lt;- color_column(\n    gt_tbl, \n    df      = sample_stats_df, \n    column  = \"n_values\", \n    palette = scales::brewer_pal(palette = \"Greens\")(9)\n  )\n}, error = function(e) {\n  print(\"Error in n_values color column\")\n  print(e)\n})\n\ntryCatch({\n  # min\n  gt_tbl &lt;- color_column(\n    gt_tbl, \n    df      = sample_stats_df, \n    column  = \"min\", \n    palette = scales::brewer_pal(palette = \"Blues\")(9)\n  )\n}, error = function(e) {\n  print(\"Error in min color column\")\n  print(e)\n})\n\ntryCatch({\n  # max\n  gt_tbl &lt;- color_column(\n    gt_tbl, \n    df      = sample_stats_df, \n    column  = \"max\", \n    palette = scales::brewer_pal(palette = \"Blues\")(9)\n  )\n}, error = function(e) {\n  print(\"Error in max color column\")\n  print(e)\n})\n\ntryCatch({\n  # coefficient.of.variation\n  gt_tbl &lt;- color_column(\n    gt_tbl, \n    df      = sample_stats_df, \n    column  = \"coefficient.of.variation\", \n    palette = scales::brewer_pal(palette = \"Blues\")(9)\n  )\n}, error = function(e) {\n  print(\"Error in coefficient.of.variation color column\")\n  print(e)\n})\n\n# 4) Render/display:\ngt_tbl\n\n\n\n\n\n\n\n\nprogram\nMonitoring.Location.ID\nslope\nn_values\nmean\nmin\nmax\ncoefficient.of.variation\nsignificant_slope\npvalue\n\n\n\n\nDEP\nBAK020\n5.666667e-03\n87\n0.15317126\n0.016000\n0.658000\n0.9203980\nNA\n2.056672e-01\n\n\nDEP\nBAK021\n5.762500e-04\n87\n0.05717483\n0.005830\n0.267200\n0.8333621\nNA\n8.060200e-01\n\n\nDEP\nBAK022\n1.747500e-03\n87\n0.05206823\n0.005830\n0.243400\n0.9655576\nNA\n2.356625e-01\n\n\nDEP\nBAK023\n3.954000e-03\n87\n0.09663976\n0.007669\n0.420000\n0.9231165\nNA\n1.021842e-01\n\n\nDEP\nBAK024\n6.425000e-04\n87\n0.02867253\n0.005830\n0.105000\n0.6896258\nNA\n1.875735e-01\n\n\nDEP\nBAK025\n5.290000e-04\n87\n0.03961341\n0.005830\n0.203000\n0.9238155\nNA\n5.389352e-01\n\n\nDEP\nBAK026\n1.820000e-04\n87\n0.02955954\n0.005830\n0.115000\n0.7248698\nNA\n6.510154e-01\n\n\nDEP\nBAK027\n4.375000e-04\n87\n0.03085287\n0.005830\n0.144000\n0.7516988\nNA\n3.671036e-01\n\n\nDEP\nBAK028\n1.500000e-05\n87\n0.02922360\n0.007000\n0.097000\n0.7524143\nNA\n9.347624e-01\n\n\nDEP\nBAK029\n1.000000e-03\n87\n0.02649191\n0.006972\n0.085180\n0.6711175\nNA\n2.507491e-01\n\n\nDEP\nBAK030\n1.619583e-03\n87\n0.04297103\n0.007000\n0.177000\n0.5892023\nNA\n3.477456e-01\n\n\nDEP\nBAK031\n1.196250e-04\n87\n0.02518559\n0.005830\n0.241200\n1.1239723\nNA\n6.213820e-01\n\n\nDEP\nBAK032\n6.666667e-04\n87\n0.02360217\n0.005830\n0.181300\n1.0095626\nNA\n1.283375e-01\n\n\nDEP\nBAK033\n0.000000e+00\n87\n0.02205066\n0.005830\n0.195900\n1.1234350\nNA\n1.000000e+00\n\n\nDEP\nBOC070\n5.240000e-03\n90\n0.35075322\n0.007000\n1.670000\n1.0349200\nNA\n4.840734e-01\n\n\nDEP\nBOC071\n5.200000e-04\n93\n0.10437645\n0.005830\n0.679000\n1.3574813\nNA\n5.776259e-01\n\n\nDEP\nBOC072\n1.225000e-04\n88\n0.06349918\n0.005830\n0.467000\n1.3780143\nNA\n8.394830e-01\n\n\nDEP\nBOC073\n-6.125000e-05\n88\n0.16151925\n0.005830\n0.852000\n1.1537256\nNA\n9.034789e-01\n\n\nDEP\nBOC074\n7.570000e-04\n88\n0.04506873\n0.005830\n0.491000\n1.5375416\nNA\n3.111681e-01\n\n\nDEP\nBOC075\n4.595000e-04\n88\n0.03170633\n0.005830\n0.171000\n1.0185642\nNA\n3.925789e-01\n\n\nDEP\nBOC076\n8.350000e-04\n88\n0.17284864\n0.005830\n0.715000\n1.1237540\nNA\n7.160048e-01\n\n\nDEP\nBOC077\n3.358333e-04\n88\n0.03519865\n0.005830\n0.215000\n1.0775611\nNA\n5.423035e-01\n\n\nDEP\nBOC078\n8.125000e-05\n88\n0.03345857\n0.005830\n0.183000\n1.0200246\nNA\n5.683796e-01\n\n\nDEP\nBOC079\n5.000000e-04\n88\n0.03751988\n0.005830\n0.264000\n1.1301002\nNA\n3.951777e-01\n\n\nDEP\nBOC080\n4.518750e-03\n88\n0.12237580\n0.005830\n0.550000\n0.8655111\nNA\n6.004281e-01\n\n\nDEP\nBOC081\n3.795833e-04\n88\n0.03968989\n0.005830\n0.356000\n1.5803266\nNA\n2.904886e-01\n\n\nDEP\nBOC082\n7.091667e-04\n88\n0.04564444\n0.005830\n0.612000\n1.6255917\nNA\n2.403247e-01\n\n\nDEP\nBOC083\n4.950000e-04\n88\n0.05777705\n0.005830\n0.491000\n1.6153725\nNA\n5.436304e-01\n\n\nDEP\nBOY090\n4.100000e-03\n87\n0.19766379\n0.005830\n1.346000\n1.2815686\nNA\n3.687083e-01\n\n\nDEP\nBOY091\n3.786667e-04\n87\n0.08222340\n0.005830\n0.646600\n1.5010520\nNA\n5.373379e-01\n\n\nDEP\nBOY092\n1.510000e-04\n91\n0.03801685\n0.005830\n0.275300\n1.3989703\nNA\n6.421583e-01\n\n\nDEP\nBOY093\n1.867500e-03\n87\n0.09625767\n0.005830\n0.774100\n1.6666712\nNA\n1.281225e-01\n\n\nDEP\nBOY094\n0.000000e+00\n87\n0.03005784\n0.005830\n0.247000\n1.3351711\nNA\n9.671423e-01\n\n\nDEP\nBOY095\n-2.712500e-04\n87\n0.01835468\n0.005830\n0.140000\n0.9207943\nNA\n2.652393e-01\n\n\nDEP\nBOY096\n0.000000e+00\n87\n0.01977647\n0.005830\n0.124000\n1.0681064\nNA\n9.672164e-01\n\n\nDEP\nBOY097\n-5.975000e-04\n87\n0.01748711\n0.005830\n0.149000\n0.9636188\nNA\n6.333653e-02\n\n\nDEP\nBOY098\n0.000000e+00\n87\n0.01885307\n0.005830\n0.128000\n0.9361814\nNA\n8.369106e-01\n\n\nDEP\nBOY099\n-3.700000e-04\n87\n0.01862339\n0.005830\n0.130000\n0.9168912\nNA\n9.586852e-02\n\n\nDEP\nBOY100\n-1.545000e-04\n87\n0.01924871\n0.005830\n0.139000\n1.0852916\nNA\n3.216128e-01\n\n\nDEP\nBOY101\n0.000000e+00\n87\n0.05101793\n0.005830\n0.425700\n1.5593925\nNA\n8.371825e-01\n\n\nDEP\nBOYPB4\nNA\n1\n0.00869300\n0.008693\n0.008693\nNA\nNA\nNA\n\n\nDEP\nGOC001\n9.313333e-04\n72\n0.05605914\n0.005830\n0.223800\n0.7671042\nNA\n6.654654e-01\n\n\nDEP\nGOC002\n-8.600000e-04\n71\n0.08001014\n0.007000\n0.372400\n0.8305671\nNA\n7.822717e-01\n\n\nDEP\nGOC003\n3.000000e-05\n71\n0.07366690\n0.007000\n0.370400\n0.8282399\nNA\n1.000000e+00\n\n\nDEP\nGOC004\n1.012500e-03\n71\n0.03611487\n0.005830\n0.111000\n0.6777037\nNA\n6.588497e-01\n\n\nDEP\nGOC005\n4.425000e-04\n71\n0.03231096\n0.005830\n0.152000\n0.9667715\nNA\n6.988275e-01\n\n\nDEP\nGOC006\n1.755000e-03\n71\n0.03185280\n0.006223\n0.160600\n1.0329292\nNA\n1.078776e-01\n\n\nDEP\nGOC007\n1.000000e-03\n71\n0.03096651\n0.005830\n0.138000\n0.8910610\nNA\n7.822717e-01\n\n\nDEP\nGOC008\n2.626667e-04\n71\n0.03318920\n0.005830\n0.146200\n0.8874234\nNA\n8.679014e-01\n\n\nDEP\nGOC009\n1.422500e-03\n71\n0.02205211\n0.005830\n0.179000\n1.3095386\n0.001422500\n1.346280e-02\n\n\nDEP\nGOC010\n1.000000e-03\n71\n0.01865624\n0.005830\n0.176300\n1.2923116\nNA\n1.038988e-01\n\n\nDEP\nGOC011\n6.133333e-04\n71\n0.02754148\n0.006187\n0.181400\n1.1482708\nNA\n3.439478e-01\n\n\nDEP\nGOC012\n0.000000e+00\n71\n0.03182720\n0.005830\n0.147900\n0.9586432\nNA\n8.673617e-01\n\n\nDEP\nGOC013\n3.320000e-04\n71\n0.02267162\n0.005830\n0.166000\n1.2103080\nNA\n4.336085e-01\n\n\nDEP\nGOC014\n-6.525000e-04\n71\n0.11996704\n0.005830\n0.253000\n0.4696467\nNA\n8.252864e-01\n\n\nDEP\nGOC015\n-3.800000e-04\n71\n0.04998279\n0.005830\n0.162000\n0.6908913\nNA\n7.397839e-01\n\n\nDEP\nHIL050\n5.089000e-03\n89\n0.36969602\n0.005830\n1.770000\n1.1410969\nNA\n4.750366e-01\n\n\nDEP\nHIL051\n0.000000e+00\n95\n0.05359023\n0.007000\n0.389000\n1.3555106\nNA\n9.709929e-01\n\n\nDEP\nHIL052\n3.174000e-03\n88\n0.28047589\n0.007000\n1.740000\n1.1872996\nNA\n6.867725e-01\n\n\nDEP\nHIL053\n0.000000e+00\n88\n0.09987469\n0.005830\n0.557000\n1.3252873\nNA\n9.353716e-01\n\n\nDEP\nHIL054\n8.910000e-04\n88\n0.03519523\n0.005830\n0.303000\n1.3511876\nNA\n2.066730e-01\n\n\nDEP\nHIL055\n1.000000e-03\n88\n0.05128000\n0.007000\n0.329000\n1.2537633\nNA\n3.517280e-01\n\n\nDEP\nHIL056\n8.050000e-04\n88\n0.05585074\n0.006610\n0.509600\n1.6642983\nNA\n3.514647e-01\n\n\nDEP\nHIL057\n1.624250e-03\n88\n0.16867253\n0.007000\n0.983000\n1.3967639\nNA\n3.506728e-01\n\n\nDEP\nHIL058\n-5.190000e-04\n88\n0.06049585\n0.007000\n0.558000\n1.3119429\nNA\n5.165272e-01\n\n\nDEP\nHIL059\n0.000000e+00\n88\n0.13683920\n0.007000\n0.827000\n1.2648411\nNA\n9.031106e-01\n\n\nDEP\nHIL060\n7.012500e-04\n88\n0.07925402\n0.005830\n0.395100\n0.7732898\nNA\n7.470049e-01\n\n\nDEP\nHIL061\n-4.500000e-05\n88\n0.03414587\n0.005830\n0.617100\n2.0364941\nNA\n6.548098e-01\n\n\nDEP\nHIL062\n0.000000e+00\n88\n0.03800849\n0.005830\n0.368000\n1.4008377\nNA\n9.677034e-01\n\n\nDEP\nHIL063\n0.000000e+00\n87\n0.02515197\n0.005830\n0.258300\n1.2983142\nNA\n9.012037e-01\n\n\nDEP\nILW110\n1.166667e-03\n87\n0.06436184\n0.005830\n1.490000\n2.6111272\nNA\n3.050036e-01\n\n\nDEP\nILW111\n5.750000e-04\n87\n0.03172860\n0.007000\n0.528000\n1.8381500\nNA\n2.330400e-01\n\n\nDEP\nILW112\n-3.241667e-04\n87\n0.01755471\n0.005830\n0.101000\n0.8279329\nNA\n4.830123e-01\n\n\nDEP\nILW113\n0.000000e+00\n87\n0.04192360\n0.005830\n0.877000\n2.4850465\nNA\n7.730801e-01\n\n\nDEP\nILW114\n-2.010000e-04\n87\n0.01780718\n0.005830\n0.094000\n0.8087750\nNA\n4.564937e-01\n\n\nDEP\nILW115\n0.000000e+00\n88\n0.01784412\n0.005830\n0.111000\n0.8421451\nNA\n7.145456e-01\n\n\nDEP\nILW116\n4.375000e-05\n87\n0.01802415\n0.005830\n0.088000\n0.7585345\nNA\n5.910391e-01\n\n\nDEP\nILW117\n0.000000e+00\n87\n0.01637641\n0.005830\n0.071470\n0.6834089\nNA\n9.339478e-01\n\n\nDEP\nILW118\n-5.000000e-06\n87\n0.01758016\n0.005830\n0.097000\n0.8267574\nNA\n4.805108e-01\n\n\nDEP\nILW119\n-1.620000e-04\n88\n0.01756714\n0.005830\n0.081000\n0.7556958\nNA\n4.896048e-01\n\n\nDEP\nJUP120\n2.125000e-02\n87\n0.23121138\n0.009780\n0.940500\n0.9652988\nNA\n5.501383e-02\n\n\nDEP\nJUP121\n1.483000e-03\n87\n0.06988368\n0.005830\n0.584000\n1.6266598\nNA\n2.041525e-01\n\n\nDEP\nJUP122\n4.874583e-03\n87\n0.07394616\n0.006057\n0.578400\n1.4793609\n0.004874583\n5.738879e-04\n\n\nDEP\nJUP123\n1.500000e-02\n87\n0.16994816\n0.005830\n0.645000\n1.0251574\n0.015000000\n3.701985e-02\n\n\nDEP\nJUP124\n-1.802500e-04\n87\n0.03268010\n0.005830\n0.338000\n1.6284944\nNA\n5.923013e-01\n\n\nDEP\nJUP125\n-3.466667e-04\n87\n0.03342752\n0.005830\n0.292000\n1.5123736\nNA\n2.655104e-01\n\n\nDEP\nJUP126\n-1.173333e-04\n87\n0.03404821\n0.005830\n0.374000\n1.6106882\nNA\n7.114587e-01\n\n\nDEP\nJUP127\n1.425000e-04\n87\n0.03533739\n0.005830\n0.392000\n1.6183544\nNA\n5.925105e-01\n\n\nDEP\nJUP128\n0.000000e+00\n87\n0.03095382\n0.005830\n0.318000\n1.6428783\nNA\n1.000000e+00\n\n\nDEP\nJUP129\n5.041667e-05\n87\n0.03187541\n0.005830\n0.285300\n1.5642455\nNA\n6.511989e-01\n\n\nDEP\nPEV040\n1.433500e-02\n85\n0.17769318\n0.005830\n0.923000\n0.8893590\n0.014335000\n9.813401e-03\n\n\nDEP\nPEV041\n1.484583e-02\n85\n0.14978941\n0.005830\n0.653000\n1.0268184\n0.014845833\n1.398927e-02\n\n\nDEP\nPEV042\n5.765833e-03\n85\n0.11594788\n0.005830\n0.512000\n0.9533548\nNA\n6.771557e-02\n\n\nDEP\nPEV043\n2.078000e-03\n87\n0.10976817\n0.005830\n0.764000\n1.0974857\nNA\n5.653514e-01\n\n\nDEP\nPEV044\n1.021667e-03\n87\n0.04090907\n0.005830\n0.240100\n1.0242624\nNA\n3.041881e-01\n\n\nDEP\nPEV045\n2.000000e-03\n86\n0.05499512\n0.006530\n0.289000\n1.0962380\nNA\n3.823989e-01\n\n\nDEP\nPEV046\n1.513000e-03\n87\n0.04307351\n0.007000\n0.309400\n1.0288527\nNA\n8.457555e-02\n\n\nDEP\nPEV047\n2.520000e-03\n86\n0.05031477\n0.007000\n0.236000\n0.9434582\nNA\n1.683907e-01\n\n\nDEP\nPEV048\n6.300000e-04\n87\n0.03287315\n0.005830\n0.209500\n1.0026641\nNA\n7.119232e-01\n\n\nDEP\nPEV049\n-7.600000e-05\n87\n0.02526510\n0.005830\n0.125300\n0.8708419\nNA\n7.739489e-01\n\n\nDEP\nPEV050\n5.914583e-03\n87\n0.09424195\n0.007000\n0.242800\n0.5640517\nNA\n1.113469e-01\n\n\nDEP\nPEV051\n1.583333e-03\n87\n0.02918766\n0.005830\n0.177000\n0.9409415\n0.001583333\n1.353159e-02\n\n\nDEP\nPEV052\n3.150000e-04\n87\n0.02343937\n0.005830\n0.189000\n1.0562897\nNA\n3.619434e-01\n\n\nDEP\nPEV053\n6.750000e-05\n87\n0.01960080\n0.005830\n0.149000\n0.9368771\nNA\n5.910391e-01\n\n\nDEP\nSTL161\n5.232500e-02\n72\n0.46320167\n0.019000\n1.770000\n0.8287527\n0.052325000\n5.173376e-05\n\n\nDEP\nSTL162\n1.760000e-03\n73\n0.23087301\n0.013000\n0.861000\n0.9364937\nNA\n6.725751e-01\n\n\nDEP\nSTL163\n1.310000e-02\n72\n0.15410139\n0.005830\n0.753500\n1.1557639\n0.013100000\n2.096457e-03\n\n\nDEP\nSTL164\n9.000000e-03\n71\n0.08939765\n0.007000\n0.499000\n1.0970756\n0.009000000\n6.630920e-04\n\n\nDEP\nSTL165\n5.583000e-03\n72\n0.07206625\n0.005830\n0.370000\n1.0417443\n0.005583000\n9.276070e-03\n\n\nDEP\nSTL166\n1.104800e-02\n72\n0.18149708\n0.011000\n0.825000\n1.0439006\n0.011048000\n4.231851e-03\n\n\nDEP\nSTL167\n2.301000e-03\n72\n0.08312625\n0.005830\n0.443500\n1.4398117\nNA\n8.371622e-02\n\n\nDEP\nSTL168\n2.533333e-03\n72\n0.06703911\n0.007000\n0.349200\n1.2479856\n0.002533333\n9.271148e-03\n\n\nDEP\nSTL169\n1.545000e-02\n72\n0.21074819\n0.018000\n0.899000\n1.0162447\n0.015450000\n2.030550e-02\n\n\nDEP\nSTL170\n1.915833e-03\n72\n0.07059907\n0.005830\n0.365000\n1.1514025\nNA\n1.760030e-01\n\n\nDEP\nSTL171\n1.445900e-02\n72\n0.19020264\n0.014000\n0.763000\n0.9981743\n0.014459000\n6.737882e-04\n\n\nDEP\nSTL172\n3.172500e-03\n72\n0.07138397\n0.005830\n0.385200\n1.2230186\nNA\n5.168969e-02\n\n\nDEP\nSTLMC1\nNA\n1\n0.16010000\n0.160100\n0.160100\nNA\nNA\nNA\n\n\nSFER\n1\n1.333333e-01\n54\n2.18874074\n0.000000\n7.606000\n0.7524111\nNA\n5.549102e-02\n\n\nSFER\n10\n1.741667e-02\n52\n5.65840385\n0.000000\n52.380000\n1.7142898\nNA\n8.194085e-01\n\n\nSFER\n11\n7.537500e-02\n55\n2.94847273\n0.000000\n23.828000\n1.6503699\nNA\n3.226017e-01\n\n\nSFER\n12\n1.630000e-01\n55\n1.31920000\n0.000000\n13.356000\n1.5060127\n0.163000000\n7.817227e-05\n\n\nSFER\n13\n1.585714e-02\n54\n2.92607407\n0.000000\n15.680000\n1.0954035\nNA\n8.271092e-01\n\n\nSFER\n14\n8.344444e-02\n55\n2.01945455\n0.000000\n10.630000\n0.9374808\nNA\n3.571681e-01\n\n\nSFER\n15\n1.337500e-01\n55\n1.36443636\n0.000000\n17.914000\n1.7537638\n0.133750000\n8.775806e-03\n\n\nSFER\n15.5\n1.491111e-01\n53\n0.97639623\n0.000000\n5.888000\n1.0224298\n0.149111111\n6.677872e-05\n\n\nSFER\n16\n4.066667e-02\n55\n6.75040000\n0.544000\n46.499000\n1.2308119\nNA\n8.857254e-01\n\n\nSFER\n17\n1.533333e-02\n56\n2.43828571\n0.000000\n14.426000\n0.9185888\nNA\n6.726548e-01\n\n\nSFER\n18\n1.412500e-01\n56\n1.22364286\n0.000000\n10.435000\n1.1998331\n0.141250000\n2.401339e-03\n\n\nSFER\n19\n-5.583333e-02\n56\n3.31276786\n0.476000\n17.501000\n0.9215417\nNA\n5.732013e-01\n\n\nSFER\n2\n1.305000e-01\n54\n1.46864815\n0.000000\n11.058000\n1.1221140\n0.130500000\n1.426123e-02\n\n\nSFER\n20\n1.315000e-01\n56\n2.75821429\n0.000000\n18.386000\n1.0492770\nNA\n1.213353e-01\n\n\nSFER\n21.25\nNA\n1\n1.51000000\n1.510000\n1.510000\nNA\nNA\nNA\n\n\nSFER\n21.5\n1.681250e-01\n54\n1.09779630\n0.000000\n7.771000\n1.2797773\n0.168125000\n4.271928e-04\n\n\nSFER\n21LK\n1.924500e-01\n57\n1.59338596\n0.000000\n14.994000\n1.3820484\n0.192450000\n2.004004e-03\n\n\nSFER\n22\n1.522286e-01\n57\n1.11528070\n0.000000\n3.020000\n0.7262072\n0.152228571\n5.779416e-03\n\n\nSFER\n22.5\n1.228111e-01\n53\n0.97535849\n0.000000\n2.715000\n0.7197859\n0.122811111\n1.083042e-02\n\n\nSFER\n23\n2.250000e-03\n57\n3.70524561\n0.000000\n109.690000\n3.8725811\nNA\n1.000000e+00\n\n\nSFER\n24\n9.840476e-02\n57\n3.19275439\n0.000000\n14.721000\n0.9236208\nNA\n1.791681e-01\n\n\nSFER\n3\n1.900000e-01\n54\n1.12825926\n0.000000\n3.590000\n0.7845311\n0.190000000\n4.419873e-05\n\n\nSFER\n30\n1.910000e-01\n54\n2.18309259\n0.000000\n14.128000\n1.1653247\n0.191000000\n1.235904e-02\n\n\nSFER\n30.5\n2.555250e-01\n54\n2.53131481\n0.000000\n10.575000\n0.9374530\n0.255525000\n1.355723e-02\n\n\nSFER\n31\n2.263750e-01\n55\n2.68621818\n0.000000\n11.201000\n0.9862247\nNA\n5.993194e-02\n\n\nSFER\n32\n3.856667e-01\n56\n8.36376786\n0.000000\n29.808000\n0.8007164\nNA\n6.847727e-02\n\n\nSFER\n33\n3.277143e-01\n56\n12.87625000\n0.000000\n36.831000\n0.6756083\nNA\n2.622281e-01\n\n\nSFER\n34\n7.061429e-01\n56\n21.30223214\n0.464000\n52.680000\n0.5535867\nNA\n9.262497e-02\n\n\nSFER\n39\n7.068333e-01\n48\n41.08077083\n0.000000\n160.052000\n0.7065465\nNA\n5.623705e-01\n\n\nSFER\n4\n1.255556e-01\n44\n1.39493182\n0.000000\n3.371000\n0.6735726\n0.125555556\n3.272048e-02\n\n\nSFER\n40\n1.535867e+00\n52\n30.02786538\n0.000000\n126.147000\n0.7816665\n1.535866667\n4.105692e-02\n\n\nSFER\n41\n7.792917e-01\n54\n19.69561111\n0.000000\n55.754000\n0.7542474\nNA\n1.289684e-01\n\n\nSFER\n42\n1.472500e-01\n55\n7.04092727\n0.000000\n48.750000\n1.1877281\nNA\n4.359108e-01\n\n\nSFER\n45\n1.057500e-01\n55\n12.95825455\n0.240000\n64.272000\n0.9222742\nNA\n6.731632e-01\n\n\nSFER\n46\n2.905357e-01\n56\n16.57851786\n0.000000\n50.345000\n0.6600635\nNA\n9.446323e-01\n\n\nSFER\n47\n4.158750e-01\n56\n21.63828571\n1.338000\n61.500000\n0.6512731\nNA\n8.349582e-01\n\n\nSFER\n48\n9.587500e-01\n55\n24.28125455\n0.040000\n76.248000\n0.6557139\nNA\n1.527779e-01\n\n\nSFER\n49\n1.230056e+00\n53\n31.92571698\n0.000000\n103.005000\n0.6471740\nNA\n3.514678e-01\n\n\nSFER\n5\n1.338393e-01\n44\n1.16575000\n0.000000\n10.058000\n1.3240907\n0.133839286\n6.605619e-03\n\n\nSFER\n5.5\n1.603750e-01\n45\n1.40562222\n0.000000\n9.036000\n1.2689276\n0.160375000\n3.351569e-03\n\n\nSFER\n50\n-6.083333e-02\n54\n12.25492593\n0.100000\n35.858000\n0.7091823\nNA\n8.839257e-01\n\n\nSFER\n51\n1.088375e-01\n56\n17.89296429\n1.558000\n51.048000\n0.7304253\nNA\n8.349582e-01\n\n\nSFER\n52\n6.515000e-01\n53\n27.10135849\n3.292000\n68.954000\n0.6373649\nNA\n2.962699e-01\n\n\nSFER\n53\n4.774000e-01\n50\n33.56472000\n1.816000\n94.427000\n0.6794992\nNA\n8.689777e-01\n\n\nSFER\n54\n9.123750e-01\n68\n33.36772059\n1.177000\n102.151000\n0.6469144\nNA\n2.149470e-01\n\n\nSFER\n55\n1.772687e+00\n70\n27.93275714\n5.204000\n74.473000\n0.6824479\n1.772687500\n3.132413e-02\n\n\nSFER\n56\n1.183000e+00\n71\n24.28688732\n1.582000\n76.576000\n0.7114252\nNA\n1.375265e-01\n\n\nSFER\n57\n-5.300000e-02\n72\n17.70790278\n0.000000\n48.581000\n0.7194063\nNA\n8.791547e-01\n\n\nSFER\n57.1\n3.765500e-01\n72\n9.02905556\n0.000000\n32.019000\n0.8149897\nNA\n2.040355e-01\n\n\nSFER\n57.2\n2.385833e-01\n71\n3.26969014\n0.000000\n15.487000\n1.1874291\n0.238583333\n4.199307e-03\n\n\nSFER\n57.3\n1.670000e-01\n67\n3.04432836\n0.000000\n11.734000\n0.9918304\nNA\n1.269128e-01\n\n\nSFER\n58\n2.283750e-01\n53\n2.83541509\n0.000000\n11.550000\n1.0258365\n0.228375000\n1.758831e-02\n\n\nSFER\n59\n2.566071e-01\n53\n3.40679245\n0.000000\n13.474000\n1.0532137\nNA\n5.470862e-02\n\n\nSFER\n6\n1.419444e-01\n46\n1.09045652\n0.000000\n10.359000\n1.4224940\n0.141944444\n4.007699e-03\n\n\nSFER\n6.5\n1.690972e-01\n47\n1.14110638\n0.000000\n9.572000\n1.2819214\n0.169097222\n7.314820e-04\n\n\nSFER\n60\n-4.197917e-01\n56\n7.15860714\n0.260000\n30.599000\n0.8940001\nNA\n3.506416e-01\n\n\nSFER\n61\n-5.501042e-01\n56\n10.52883929\n0.000000\n37.507000\n0.8140285\n-0.550104167\n3.733529e-02\n\n\nSFER\n62\n-2.780000e-01\n56\n13.19803571\n0.000000\n48.724000\n0.7922135\nNA\n6.152661e-01\n\n\nSFER\n63\n-5.646667e-01\n54\n17.16838889\n1.690000\n47.041000\n0.6888148\nNA\n1.079496e-01\n\n\nSFER\n64\n2.931250e-02\n48\n27.78558333\n0.380000\n83.376000\n0.6726649\nNA\n1.000000e+00\n\n\nSFER\n65\n2.221905e-01\n51\n23.99909804\n0.000000\n75.519000\n0.7435798\nNA\n8.043535e-01\n\n\nSFER\n66\n2.755000e-01\n52\n21.02119231\n1.712000\n175.067000\n1.6052578\nNA\n5.735308e-01\n\n\nSFER\n67\n-1.820000e-01\n52\n7.93030769\n0.000000\n30.071000\n0.8001137\nNA\n8.737131e-01\n\n\nSFER\n68\n5.620000e-02\n55\n8.88625455\n0.000000\n93.913000\n1.6011783\nNA\n1.000000e+00\n\n\nSFER\n69\n-2.290375e-01\n42\n11.71676190\n0.300000\n56.569000\n0.9680858\nNA\n7.443974e-01\n\n\nSFER\n7\n1.475000e-01\n55\n3.55910909\n0.000000\n47.405000\n1.9718915\nNA\n5.994755e-02\n\n\nSFER\n70\n-1.470000e-01\n42\n13.54321429\n0.000000\n66.900000\n1.0355368\nNA\n4.468066e-01\n\n\nSFER\n71\nNA\n1\n5.70000000\n5.700000\n5.700000\nNA\nNA\nNA\n\n\nSFER\n8\n1.658036e-01\n57\n1.74138596\n0.000000\n18.942000\n1.5486369\n0.165803571\n3.526393e-03\n\n\nSFER\n9\n1.848889e-01\n57\n1.55235088\n0.000000\n14.587000\n1.5017367\n0.184888889\n3.599121e-04\n\n\nSFER\n9.5\n1.500000e-01\n53\n1.01728302\n0.000000\n5.960000\n0.9852317\n0.150000000\n4.007086e-05\n\n\nSFER\n9.6\nNA\n1\n0.88200000\n0.882000\n0.882000\nNA\nNA\nNA\n\n\nSFER\n9.7\nNA\n1\n0.80600000\n0.806000\n0.806000\nNA\nNA\nNA\n\n\nSFER\n9.8\nNA\n1\n0.45400000\n0.454000\n0.454000\nNA\nNA\nNA\n\n\nSFER\nAC1\nNA\n1\n2.38500000\n2.385000\n2.385000\nNA\nNA\nNA\n\n\nSFER\nAC2\nNA\n1\n1.94000000\n1.940000\n1.940000\nNA\nNA\nNA\n\n\nSFER\nAC3\nNA\n1\n2.37000000\n2.370000\n2.370000\nNA\nNA\nNA\n\n\nSFER\nAC4\nNA\n1\n3.70000000\n3.700000\n3.700000\nNA\nNA\nNA\n\n\nSFER\nAC5\nNA\n1\n1.15000000\n1.150000\n1.150000\nNA\nNA\nNA\n\n\nSFER\nAC6\nNA\n1\n1.36000000\n1.360000\n1.360000\nNA\nNA\nNA\n\n\nSFER\nAMI1\n-2.250000e+00\n26\n6.33711538\n0.460000\n18.705000\n0.8282610\nNA\n3.973214e-01\n\n\nSFER\nAMI2\n1.380000e+00\n26\n4.38838462\n0.000000\n14.527000\n0.9915691\nNA\n6.721440e-01\n\n\nSFER\nAMI3\n-3.900000e-01\n26\n3.08507692\n0.000000\n11.891000\n1.1181521\nNA\n1.000000e+00\n\n\nSFER\nAMI4\n4.300000e-01\n25\n2.66892000\n0.090000\n14.838000\n1.2840891\nNA\n6.519985e-01\n\n\nSFER\nAMI5\n-1.520000e-01\n26\n2.31130769\n0.090000\n9.146000\n0.8423896\nNA\n6.721440e-01\n\n\nSFER\nAMI6\n3.855000e-01\n26\n1.80238462\n0.000000\n3.994000\n0.5299870\nNA\n3.973214e-01\n\n\nSFER\nAMI7\n-4.200000e-01\n26\n2.31169231\n0.000000\n9.249000\n0.9300834\nNA\n2.042193e-01\n\n\nSFER\nAMI8\n9.500000e-02\n26\n1.97534615\n0.000000\n7.080000\n0.8263616\nNA\n6.721440e-01\n\n\nSFER\nAMI9\n-1.600000e-02\n26\n1.96123077\n0.000000\n8.598000\n0.9639942\nNA\n1.000000e+00\n\n\nSFER\nBG1\n-1.610000e+00\n24\n16.55512500\n5.143000\n39.556000\n0.5940642\nNA\n3.670700e-01\n\n\nSFER\nBG10\nNA\n1\n0.74000000\n0.740000\n0.740000\nNA\nNA\nNA\n\n\nSFER\nBG11\nNA\n1\n0.83000000\n0.830000\n0.830000\nNA\nNA\nNA\n\n\nSFER\nBG12\nNA\n1\n0.80000000\n0.800000\n0.800000\nNA\nNA\nNA\n\n\nSFER\nBG13\nNA\n1\n1.03000000\n1.030000\n1.030000\nNA\nNA\nNA\n\n\nSFER\nBG14\nNA\n1\n0.39000000\n0.390000\n0.390000\nNA\nNA\nNA\n\n\nSFER\nBG15\nNA\n1\n0.88000000\n0.880000\n0.880000\nNA\nNA\nNA\n\n\nSFER\nBG16\nNA\n1\n1.25000000\n1.250000\n1.250000\nNA\nNA\nNA\n\n\nSFER\nBG17\nNA\n1\n1.48000000\n1.480000\n1.480000\nNA\nNA\nNA\n\n\nSFER\nBG18\nNA\n1\n1.84000000\n1.840000\n1.840000\nNA\nNA\nNA\n\n\nSFER\nBG2\n6.156000e-01\n30\n11.35020000\n0.613000\n35.510000\n0.8147063\nNA\n2.389475e-01\n\n\nSFER\nBG20\nNA\n1\n1.38000000\n1.380000\n1.380000\nNA\nNA\nNA\n\n\nSFER\nBG3\n8.900000e-02\n30\n5.10980000\n0.000000\n22.693000\n0.9060146\nNA\n6.137731e-01\n\n\nSFER\nBG4\n8.160000e-02\n30\n2.14730000\n0.000000\n9.753000\n0.9384285\nNA\n1.000000e+00\n\n\nSFER\nBG6\n-1.100000e+00\n11\n2.01318182\n0.725000\n3.440000\n0.4172415\nNA\n1.000000e+00\n\n\nSFER\nBG7\n-8.920000e-01\n11\n2.51390909\n0.675000\n10.550000\n1.0911272\nNA\n1.000000e+00\n\n\nSFER\nBG8\nNA\n1\n0.90000000\n0.900000\n0.900000\nNA\nNA\nNA\n\n\nSFER\nBG9\nNA\n1\n0.69000000\n0.690000\n0.690000\nNA\nNA\nNA\n\n\nSFER\nBK1\nNA\n1\n3.15700000\n3.157000\n3.157000\nNA\nNA\nNA\n\n\nSFER\nCAL1\n7.030000e-01\n32\n20.46171875\n1.620000\n46.090000\n0.5560551\nNA\n7.735932e-01\n\n\nSFER\nCAL2\n-8.267500e-01\n34\n14.58655882\n2.190000\n51.253000\n0.6669735\nNA\n5.040359e-01\n\n\nSFER\nCAL3\n1.461250e-01\n34\n11.69600000\n1.331000\n38.979000\n0.6900882\nNA\n1.000000e+00\n\n\nSFER\nCAL4\n-4.711750e-01\n34\n6.91847059\n0.000000\n23.270000\n0.7811535\nNA\n6.884997e-01\n\n\nSFER\nCAL5\n1.661750e-01\n34\n4.01202941\n0.000000\n19.131000\n1.0179726\nNA\n8.936947e-01\n\n\nSFER\nCAL6\n3.371000e-01\n28\n2.13950000\n0.000000\n6.823000\n0.7382579\nNA\n8.551321e-01\n\n\nSFER\nCAL7\nNA\n1\n0.40200000\n0.402000\n0.402000\nNA\nNA\nNA\n\n\nSFER\nCAL8\nNA\n1\n10.15900000\n10.159000\n10.159000\nNA\nNA\nNA\n\n\nSFER\nCALA\nNA\n1\n0.99700000\n0.997000\n0.997000\nNA\nNA\nNA\n\n\nSFER\nCK1\nNA\n1\n11.22000000\n11.220000\n11.220000\nNA\nNA\nNA\n\n\nSFER\nCK2\nNA\n1\n1.72200000\n1.722000\n1.722000\nNA\nNA\nNA\n\n\nSFER\nCW1\n1.180000e+00\n16\n7.94606250\n0.610000\n31.757000\n1.2682942\nNA\n3.081795e-01\n\n\nSFER\nCW2\n4.659250e-01\n16\n3.99487500\n0.000000\n19.680000\n1.2464053\nNA\n1.000000e+00\n\n\nSFER\nCW3\n5.208000e-01\n17\n4.15976471\n0.000000\n17.830000\n1.2304972\nNA\n7.787290e-01\n\n\nSFER\nCW4\n1.100400e+00\n16\n2.88493750\n0.530000\n9.080000\n0.9289076\nNA\n3.081795e-01\n\n\nSFER\nCW5\n1.250000e+00\n12\n2.43000000\n0.000000\n5.600000\n0.8696725\nNA\n1.485618e-01\n\n\nSFER\nCW6\n4.340000e-01\n12\n1.85041667\n0.000000\n3.660000\n0.5883986\nNA\n1.485618e-01\n\n\nSFER\nCW7\n4.400000e-01\n11\n1.99454545\n0.560000\n5.330000\n0.6293803\nNA\n1.000000e+00\n\n\nSFER\nCaseyhole\nNA\n1\n0.56000000\n0.560000\n0.560000\nNA\nNA\nNA\n\n\nSFER\nEB1\nNA\n1\n34.75500000\n34.755000\n34.755000\nNA\nNA\nNA\n\n\nSFER\nEB2\nNA\n1\n6.30000000\n6.300000\n6.300000\nNA\nNA\nNA\n\n\nSFER\nEH07\nNA\n1\n3.05700000\n3.057000\n3.057000\nNA\nNA\nNA\n\n\nSFER\nEH08\nNA\n1\n6.47400000\n6.474000\n6.474000\nNA\nNA\nNA\n\n\nSFER\nEKIN\n1.408333e-01\n52\n1.42603846\n0.000000\n7.055000\n0.9271827\nNA\n1.100116e-01\n\n\nSFER\nEKMID\n1.365000e-01\n53\n1.00401887\n0.000000\n3.404000\n0.8266938\n0.136500000\n4.941354e-04\n\n\nSFER\nEKOFF\n1.413333e-01\n54\n1.13385185\n0.000000\n10.917000\n1.3999965\n0.141333333\n2.690641e-04\n\n\nSFER\nGP1\nNA\n4\n5.97350000\n0.000000\n19.146000\n1.4949891\nNA\nNA\n\n\nSFER\nGP1.5\nNA\n1\n30.91600000\n30.916000\n30.916000\nNA\nNA\nNA\n\n\nSFER\nGP2\nNA\n4\n5.23700000\n0.000000\n15.713000\n1.3601242\nNA\nNA\n\n\nSFER\nGP3\nNA\n4\n3.43875000\n0.000000\n9.784000\n1.2779926\nNA\nNA\n\n\nSFER\nGP4\nNA\n4\n1.80200000\n0.931000\n2.670000\n0.4580124\nNA\nNA\n\n\nSFER\nGP5\n1.691250e-01\n34\n1.67711765\n0.000000\n4.568000\n0.6788408\nNA\n8.235222e-02\n\n\nSFER\nGS\nNA\n1\n1.02600000\n1.026000\n1.026000\nNA\nNA\nNA\n\n\nSFER\nGlider\nNA\n2\n1.22000000\n0.960000\n1.480000\n0.3013898\nNA\nNA\n\n\nSFER\nHB1\nNA\n1\n4.27000000\n4.270000\n4.270000\nNA\nNA\nNA\n\n\nSFER\nHB2\nNA\n1\n1.72000000\n1.720000\n1.720000\nNA\nNA\nNA\n\n\nSFER\nHB3\nNA\n1\n0.16000000\n0.160000\n0.160000\nNA\nNA\nNA\n\n\nSFER\nHB4\nNA\n1\n0.12000000\n0.120000\n0.120000\nNA\nNA\nNA\n\n\nSFER\nHB5\nNA\n1\n2.45000000\n2.450000\n2.450000\nNA\nNA\nNA\n\n\nSFER\nHB6\nNA\n1\n2.63000000\n2.630000\n2.630000\nNA\nNA\nNA\n\n\nSFER\nJunkpile\nNA\n1\n0.95100000\n0.951000\n0.951000\nNA\nNA\nNA\n\n\nSFER\nKW1\n-1.883333e-01\n34\n3.16905882\n0.000000\n18.495000\n1.1223409\nNA\n6.773916e-01\n\n\nSFER\nKW2\n7.562500e-02\n34\n4.11385294\n0.000000\n12.680000\n0.7998180\nNA\n4.880741e-01\n\n\nSFER\nKW3\n-5.775000e-02\n34\n3.13376471\n0.000000\n8.406000\n0.7558781\nNA\n8.897069e-01\n\n\nSFER\nKW4\n4.025000e-01\n33\n3.82215152\n0.000000\n13.350000\n0.8958047\nNA\n4.765462e-01\n\n\nSFER\nL1\n-3.950000e+00\n9\n9.84444444\n2.180000\n20.100000\n0.7016605\nNA\n1.000000e+00\n\n\nSFER\nL3\n-1.365000e+00\n9\n3.09111111\n0.360000\n5.840000\n0.4944743\nNA\n4.795001e-01\n\n\nSFER\nL5\n3.300000e-01\n9\n1.62555556\n0.380000\n3.080000\n0.5577439\nNA\n4.795001e-01\n\n\nSFER\nL7\n-1.043500e+01\n9\n4.62333333\n0.850000\n23.150000\n1.5254037\nNA\n4.795001e-01\n\n\nSFER\nL9\n7.500000e-02\n10\n1.39750000\n0.470000\n2.450000\n0.4156886\nNA\n1.000000e+00\n\n\nSFER\nM01\nNA\n1\n0.79400000\n0.794000\n0.794000\nNA\nNA\nNA\n\n\nSFER\nM02\nNA\n1\n1.48400000\n1.484000\n1.484000\nNA\nNA\nNA\n\n\nSFER\nM03\nNA\n1\n1.25400000\n1.254000\n1.254000\nNA\nNA\nNA\n\n\nSFER\nM04\nNA\n1\n2.15200000\n2.152000\n2.152000\nNA\nNA\nNA\n\n\nSFER\nM05\nNA\n1\n2.76100000\n2.761000\n2.761000\nNA\nNA\nNA\n\n\nSFER\nMR\n1.611889e-01\n55\n1.37090909\n0.000000\n18.274000\n1.8308389\n0.161188889\n1.515050e-03\n\n\nSFER\nMudhole\nNA\n1\n3.29400000\n3.294000\n3.294000\nNA\nNA\nNA\n\n\nSFER\nNaplesBlueHole\nNA\n1\n0.86800000\n0.868000\n0.868000\nNA\nNA\nNA\n\n\nSFER\nPLUME\nNA\n1\n1.20000000\n1.200000\n1.200000\nNA\nNA\nNA\n\n\nSFER\nROME4\n-3.580000e+00\n11\n4.63636364\n0.750000\n14.110000\n0.9015296\nNA\n7.363827e-02\n\n\nSFER\nROME5\n-5.890000e+00\n11\n9.16636364\n1.840000\n25.230000\n0.7276493\nNA\n7.363827e-02\n\n\nSFER\nRP1\n1.163500e+00\n34\n16.42467647\n0.375000\n38.970000\n0.6062397\nNA\n2.291019e-01\n\n\nSFER\nRP2\n4.812500e-01\n34\n11.05617647\n0.976000\n29.294000\n0.6693791\nNA\n3.495748e-01\n\n\nSFER\nRP3\n1.606667e-01\n35\n5.88460000\n0.045000\n26.002000\n0.9007684\nNA\n6.142947e-01\n\n\nSFER\nRP4\n2.833000e-01\n34\n2.33455882\n0.000000\n8.869000\n0.8246036\nNA\n2.291019e-01\n\n\nSFER\nRedTide\nNA\n1\n0.93000000\n0.930000\n0.930000\nNA\nNA\nNA\n\n\nSFER\nTB1\n3.004250e-01\n29\n4.96520690\n0.250000\n22.712000\n1.2446174\nNA\n8.611083e-01\n\n\nSFER\nTB10\n3.430000e-01\n27\n1.87611111\n0.000000\n8.872000\n0.8873603\nNA\n1.095986e-01\n\n\nSFER\nTB11\nNA\n2\n0.46400000\n0.129000\n0.799000\n1.0210378\nNA\nNA\n\n\nSFER\nTB12\nNA\n1\n0.36900000\n0.369000\n0.369000\nNA\nNA\nNA\n\n\nSFER\nTB13\nNA\n1\n0.49800000\n0.498000\n0.498000\nNA\nNA\nNA\n\n\nSFER\nTB2\n1.708000e-01\n29\n4.50327586\n0.000000\n18.079000\n1.0460345\nNA\n8.611083e-01\n\n\nSFER\nTB3\n4.895000e-01\n29\n2.69296552\n0.070000\n9.200000\n0.9265355\nNA\n3.816731e-01\n\n\nSFER\nTB4\n9.895000e-02\n29\n2.47344828\n0.000000\n12.969000\n1.0800845\nNA\n1.000000e+00\n\n\nSFER\nTB5\n-3.175000e-02\n29\n2.27351724\n0.130000\n9.019000\n0.9641030\nNA\n1.000000e+00\n\n\nSFER\nTB6\nNA\n2\n7.68000000\n1.671000\n13.689000\n1.1065116\nNA\nNA\n\n\nSFER\nTB7\nNA\n2\n1.78200000\n1.339000\n2.225000\n0.3515694\nNA\nNA\n\n\nSFER\nTB8\nNA\n2\n0.85250000\n0.669000\n1.036000\n0.3044084\nNA\nNA\n\n\nSFER\nTB9\nNA\n2\n1.07100000\n0.298000\n1.844000\n1.0207162\nNA\nNA\n\n\nSFER\nTBA\nNA\n1\n5.20200000\n5.202000\n5.202000\nNA\nNA\nNA\n\n\nSFER\nTBB\nNA\n1\n0.94300000\n0.943000\n0.943000\nNA\nNA\nNA\n\n\nSFER\nTBC\nNA\n1\n0.14100000\n0.141000\n0.141000\nNA\nNA\nNA\n\n\nSFER\nUKIN\n1.270268e-01\n53\n1.72579245\n0.000000\n18.811000\n1.7958407\nNA\n7.871508e-02\n\n\nSFER\nUKMID\n1.100000e-01\n54\n1.08764815\n0.000000\n11.859000\n1.5045639\n0.110000000\n3.117794e-04\n\n\nSFER\nUKOFF\n1.709167e-01\n54\n1.34201852\n0.000000\n10.381000\n1.2666427\n0.170916667\n1.782195e-03\n\n\nSFER\nV1\n2.846250e-01\n30\n8.11806667\n0.105000\n24.583000\n0.7987335\nNA\n8.753926e-01\n\n\nSFER\nV10\nNA\n1\n0.16200000\n0.162000\n0.162000\nNA\nNA\nNA\n\n\nSFER\nV11\nNA\n1\n0.23300000\n0.233000\n0.233000\nNA\nNA\nNA\n\n\nSFER\nV2\n1.455667e-01\n29\n5.11162069\n0.314000\n19.580000\n0.9995128\nNA\n8.611083e-01\n\n\nSFER\nV3\n5.151250e-01\n29\n4.00568966\n0.000000\n27.780000\n1.3881029\nNA\n2.206714e-01\n\n\nSFER\nV4\n2.948333e-01\n30\n2.28163333\n0.038000\n10.065000\n0.9588896\nNA\n2.723409e-01\n\n\nSFER\nV5\n1.072250e-01\n29\n2.48048276\n0.000000\n23.504000\n1.6851706\nNA\n8.611083e-01\n\n\nSFER\nV6\n8.487500e-02\n30\n2.60233333\n0.000000\n23.965000\n1.6648529\nNA\n6.380425e-01\n\n\nSFER\nV7\n2.052500e-01\n30\n2.01636667\n0.000000\n6.460000\n0.8131406\nNA\n2.476763e-01\n\n\nSFER\nV8\n7.612500e-02\n29\n1.86244828\n0.276000\n6.836000\n0.8303684\nNA\n8.611083e-01\n\n\nSFER\nV9\n-3.410000e-01\n30\n2.55606667\n0.257000\n22.485000\n1.6101043\n-0.341000000\n3.180289e-02\n\n\nSFER\nWS\n9.087500e-02\n56\n1.33941071\n0.000000\n5.650000\n0.7649921\nNA\n6.535620e-02\n\n\nSFER\nZ03027\nNA\n1\n0.00000000\n0.000000\n0.000000\nNA\nNA\nNA\n\n\nSFER\nZ03076\nNA\n1\n0.00000000\n0.000000\n0.000000\nNA\nNA\nNA\n\n\nSFER\nZ03116\nNA\n1\n0.69700000\n0.697000\n0.697000\nNA\nNA\nNA\n\n\nSFER\nZ03146\nNA\n1\n0.96600000\n0.966000\n0.966000\nNA\nNA\nNA\n\n\nSFER\nZ03198\nNA\n1\n0.00000000\n0.000000\n0.000000\nNA\nNA\nNA\n\n\nSFER\nZ04067\nNA\n1\n1.85900000\n1.859000\n1.859000\nNA\nNA\nNA\n\n\nSFER\nZ04068\nNA\n1\n3.63700000\n3.637000\n3.637000\nNA\nNA\nNA\n\n\nSFER\nZ04093\nNA\n1\n2.75600000\n2.756000\n2.756000\nNA\nNA\nNA\n\n\nSFER\nZ04099\nNA\n1\n0.56500000\n0.565000\n0.565000\nNA\nNA\nNA\n\n\nSFER\nZ04110\nNA\n1\n0.00000000\n0.000000\n0.000000\nNA\nNA\nNA\n\n\nSFER\nZ04610\nNA\n1\n2.71400000\n2.714000\n2.714000\nNA\nNA\nNA\n\n\n\n\n\n\n\n\n\nReporting Programs:\n\n\ndisplay reporting programs\nlibrary(ggplot2)\nggplot(df, aes(x = program)) +\n  geom_bar() +\n  labs(title = \"Reporting Programs\", x = \"Program\", y = \"Count\")"
  },
  {
    "objectID": "analyte_reports/analyte_reports/Temperature.html",
    "href": "analyte_reports/analyte_reports/Temperature.html",
    "title": "Temperature Report",
    "section": "",
    "text": "get data across all programs, filter for analyte\nlibrary('here')\nlibrary('dplyr')\nsource(here(\"R/getAllData.R\"))\nfull_df &lt;- getAllData()\ndf &lt;- filter(full_df, DEP.Analyte.Name == params$analyte)\n\n\n\n\ncreate .csv of analyte data\n# save df to csv\n# reduce to only cols we need & save to csv\ndf %&gt;%\n  mutate(\n    source = program,\n    site = Monitoring.Location.ID,\n    datetime = Activity.Start.Date.Time,\n    analyte = DEP.Analyte.Name,\n    value = DEP.Result.Value.Number,\n    units = DEP.Result.Unit,\n    latitude = Org.Decimal.Latitude,\n    longitude = Org.Decimal.Longitude,\n    sample_depth = Activity.Depth,\n    .keep = \"none\"\n) %&gt;%\n  write.csv(here(\"data\", \"exports\", \"unified-wq-db-samples\", paste0(params$analyte, \".csv\")))\n\n\nDownload data for this analyte here\n\nHistogram of DEP.Result.Value.Number:\n\n\ndisplay histogram of values\nlibrary(ggplot2)\nggplot(df, aes(x = DEP.Result.Value.Number)) +\n  geom_histogram(bins = 30, fill = \"blue\", color = \"black\") +\n  labs(title = \"Histogram of Values\", x = \"Value\", y = \"Count\")\n\n\n\n\n\n\n\n\n\n\n\nStation Statistics:\n\n\ncreate station statistics dataframe\nsource(here(\"R/seasonalMannKendall.R\"))\nlibrary(lubridate)  # for mdy_hms()\nlibrary(pander)  # for display\n\n# create table of samples for each station\nsamples_df &lt;- df %&gt;%\n  select(\n    program, \n    Monitoring.Location.ID, \n    Activity.Start.Date.Time,\n    analyte = DEP.Analyte.Name,\n    DEP.Result.Value.Number, \n    DEP.Result.Unit,\n    latitude = Org.Decimal.Latitude,\n    longitude = Org.Decimal.Longitude,\n    sample_depth = Activity.Depth\n    ) %&gt;%\n  # drop any with empty Monitoring.Location.ID\n  filter(!is.na(Monitoring.Location.ID)) %&gt;%\n  # drop any with empty Activity.Start.Date.Time\n  filter(!is.na(Activity.Start.Date.Time)) %&gt;%\n  # parse the \"MM/DD/YYYY HH:MM:SS\" strings into POSIXct\n  mutate(Activity.Start.Date.Time = mdy_hms(\n          Activity.Start.Date.Time,\n          tz = \"UTC\")) %&gt;%\n  distinct()\n\n\n# add statistics for each station\nsample_stats_df &lt;- samples_df %&gt;%\n  group_by(program, Monitoring.Location.ID) %&gt;%\n  reframe(\n    {\n      tmp &lt;- seasonalMannKendallVectorized(\n        Activity.Start.Date.Time,\n        DEP.Result.Value.Number\n      )\n    },\n    n_values = n(),\n    mean = mean(DEP.Result.Value.Number),\n    min = min(DEP.Result.Value.Number),\n    max = max(DEP.Result.Value.Number),\n    coefficient.of.variation = sd(DEP.Result.Value.Number) / mean(DEP.Result.Value.Number)\n  ) %&gt;%\n  mutate(\n    # create column significant_slope\n    significant_slope = ifelse(z &lt;= 0.05, slope, NA_real_),\n    pvalue = z\n  ) %&gt;%\n  # drop unwanted columns added by seasonalMannKendall\n  select(\n    -z,\n    -tau,\n    -chi_square\n  )\n\n\n\n# print(head(sample_stats_df))\n# # display sample_stats_df with pander\n# pander(sample_stats_df)\n\n\n\n\nsave stats to csv\nsample_stats_df %&gt;%\n  write.csv(here(\n    \"data\", \"exports\", \"seasonal-mann-kendall-stats\", paste0(params$analyte, \".csv\")))\n\n\nDownload data for this analyte’s statistics here\n\n\ndisplay with gt\nlibrary(gt)\nlibrary(scales)\nlibrary(tidyselect)  # for all_of()\nlibrary(RColorBrewer) # for brewer.pal()\n\n# ── color_column() ─────────────────────────────────────────────────────────────\n# gt_tbl   : a gt object that you’ve already created (e.g. `sample_stats_df %&gt;% gt()`)\n# df       : the original data.frame (must contain the column you want to color)\n# column   : a string, e.g. \"slope\" or \"n_values\"\n# palette  : a character vector of colours to feed to col_numeric()\n#\ncolor_column &lt;- function(gt_tbl, df, column, \n                         palette = c(\"red\", \"orange\", \"yellow\", \"green\", \"blue\", \"violet\"),\n                         domain = NULL) {\n  # 1) Pull out that column’s numeric values\n  vals &lt;- df[[column]]\n  if (!is.numeric(vals)) {\n    stop(sprintf(\"`%s` is not numeric; data_color() requires a numeric column.\", column))\n  }\n  \n  # 2) Compute its min and max (ignoring NA)\n  min_val &lt;- min(vals, na.rm = TRUE)\n  max_val &lt;- max(vals, na.rm = TRUE)\n  if (is.null(domain)) {\n    domain &lt;- c(min_val, max_val)\n  }\n  \n  # 3) Call data_color() on the gt table for that single column\n  gt_tbl %&gt;%\n    data_color(\n      columns = all_of(column),\n      colors  = col_numeric(\n        palette = palette,\n        domain  = domain\n      )\n    )\n}\nlibrary(dplyr)\nlibrary(gt)\n\n# 1) First build your gt table as usual:\ngt_tbl &lt;- sample_stats_df %&gt;% \n  gt()\n\n# slope blue (-) to red (+) (0 centered)\ntryCatch({\n  min_slope &lt;- min(sample_stats_df$slope,  na.rm = TRUE)\n  max_slope &lt;- max(sample_stats_df$slope,  na.rm = TRUE)\n  max_abs_slope &lt;- max(abs(min_slope), abs(max_slope))\n  gt_tbl &lt;- color_column(\n    gt_tbl, \n    df     = sample_stats_df, \n    column = \"slope\",\n    palette = rev(brewer.pal(11, \"RdBu\")),\n    domain  = c(-max_abs_slope, max_abs_slope)\n  )\n}, error = function(e) {\n  print(\"Error in slope color column\")\n  print(e)\n})\n\ntryCatch({\n  # pvalue Z\n  gt_tbl &lt;- color_column(\n    gt_tbl, \n    df      = sample_stats_df, \n    column  = \"z\", \n    palette = scales::brewer_pal(palette = \"Blues\")(9)\n  )\n}, error = function(e) {\n  print(\"Error in z color column\")\n  print(e)\n})\n\n\n[1] \"Error in z color column\"\n&lt;simpleError in color_column(gt_tbl, df = sample_stats_df, column = \"z\", palette = (scales::brewer_pal(palette = \"Blues\"))(9)): `z` is not numeric; data_color() requires a numeric column.&gt;\n\n\ndisplay with gt\n# slope blue (-) to red (+) (0 centered)\ntryCatch({\n  min_slope &lt;- min(sample_stats_df$significant_slope,  na.rm = TRUE)\n  max_slope &lt;- max(sample_stats_df$significant_slope,  na.rm = TRUE)\n  max_abs_slope &lt;- max(abs(min_slope), abs(max_slope))\n  gt_tbl &lt;- color_column(\n    gt_tbl, \n    df     = sample_stats_df, \n    column = \"significant_slope\",\n    palette = rev(brewer.pal(11, \"RdBu\")),\n    domain  = c(-max_abs_slope, max_abs_slope)\n  )\n}, error = function(e) {\n  print(\"Error in significant_slope color column\")\n  print(e)\n})\n\ntryCatch({\n  # mean values blue to red (0 centered)\n  min_mean &lt;- min(sample_stats_df$mean,  na.rm = TRUE)\n  max_mean &lt;- max(sample_stats_df$mean,  na.rm = TRUE)\n  max_abs_mean &lt;- max(abs(min_mean), abs(max_mean))\n  gt_tbl &lt;- color_column(\n    gt_tbl, \n    df     = sample_stats_df, \n    column = \"mean\",\n    palette = rev(brewer.pal(11, \"RdBu\")),\n    domain  = c(-max_abs_mean, max_abs_mean)\n  )\n}, error = function(e) {\n  print(\"Error in mean color column\")\n  print(e)\n})\n\ntryCatch({\n  # n values white to green\n  gt_tbl &lt;- color_column(\n    gt_tbl, \n    df      = sample_stats_df, \n    column  = \"n_values\", \n    palette = scales::brewer_pal(palette = \"Greens\")(9)\n  )\n}, error = function(e) {\n  print(\"Error in n_values color column\")\n  print(e)\n})\n\ntryCatch({\n  # min\n  gt_tbl &lt;- color_column(\n    gt_tbl, \n    df      = sample_stats_df, \n    column  = \"min\", \n    palette = scales::brewer_pal(palette = \"Blues\")(9)\n  )\n}, error = function(e) {\n  print(\"Error in min color column\")\n  print(e)\n})\n\ntryCatch({\n  # max\n  gt_tbl &lt;- color_column(\n    gt_tbl, \n    df      = sample_stats_df, \n    column  = \"max\", \n    palette = scales::brewer_pal(palette = \"Blues\")(9)\n  )\n}, error = function(e) {\n  print(\"Error in max color column\")\n  print(e)\n})\n\ntryCatch({\n  # coefficient.of.variation\n  gt_tbl &lt;- color_column(\n    gt_tbl, \n    df      = sample_stats_df, \n    column  = \"coefficient.of.variation\", \n    palette = scales::brewer_pal(palette = \"Blues\")(9)\n  )\n}, error = function(e) {\n  print(\"Error in coefficient.of.variation color column\")\n  print(e)\n})\n\n# 4) Render/display:\ngt_tbl\n\n\n\n\n\n\n\n\nprogram\nMonitoring.Location.ID\nslope\nn_values\nmean\nmin\nmax\ncoefficient.of.variation\nsignificant_slope\npvalue\n\n\n\n\nSFER\n1\n0.12666667\n55\n27.23312\n21.4200\n32.0050\n0.1070790625\n0.12666667\n4.790038e-02\n\n\nSFER\n10\n0.23356250\n52\n27.28837\n17.6590\n33.4230\n0.1453052643\nNA\n5.709947e-02\n\n\nSFER\n11\n0.18900000\n55\n27.56325\n20.4210\n33.2560\n0.1195007615\n0.18900000\n2.376802e-02\n\n\nSFER\n12\n0.11029875\n55\n27.63407\n21.0580\n32.0710\n0.0916373243\n0.11029875\n3.614617e-05\n\n\nSFER\n13\n0.20562500\n54\n27.48044\n19.1500\n33.3210\n0.1323841442\n0.20562500\n1.628271e-02\n\n\nSFER\n14\n0.16377778\n55\n27.60302\n22.0650\n32.7640\n0.1094338860\n0.16377778\n7.257987e-03\n\n\nSFER\n15\n0.11225000\n55\n27.70904\n22.0260\n31.8980\n0.0899311185\n0.11225000\n6.956505e-04\n\n\nSFER\n15.5\n0.13400000\n53\n27.76960\n22.5380\n31.8450\n0.0834196696\n0.13400000\n2.109184e-02\n\n\nSFER\n16\n0.13900000\n55\n27.19267\n17.9800\n32.8200\n0.1408956992\n0.13900000\n4.421866e-02\n\n\nSFER\n17\n0.09687500\n56\n27.54066\n19.2700\n32.5690\n0.1135947566\n0.09687500\n1.665631e-02\n\n\nSFER\n18\n0.07128571\n56\n27.52149\n21.2160\n31.2730\n0.0873677424\n0.07128571\n4.851753e-03\n\n\nSFER\n19\n0.24828571\n56\n27.39502\n18.4200\n33.3680\n0.1386296650\n0.24828571\n7.453346e-03\n\n\nSFER\n2\n0.10171429\n55\n27.32039\n22.0350\n31.3080\n0.0898202633\n0.10171429\n3.404361e-02\n\n\nSFER\n20\n0.13733333\n56\n27.57727\n18.3800\n32.9390\n0.1147243546\n0.13733333\n2.423570e-02\n\n\nSFER\n21.25\nNA\n1\n28.93800\n28.9380\n28.9380\nNA\nNA\nNA\n\n\nSFER\n21.5\n0.08141667\n54\n27.74787\n22.4750\n31.5310\n0.0828334852\nNA\n1.888629e-01\n\n\nSFER\n21LK\n0.10112500\n57\n27.49095\n21.7590\n31.6920\n0.0879019599\n0.10112500\n1.070113e-02\n\n\nSFER\n22\n0.10000000\n57\n27.65840\n21.6920\n32.2970\n0.0903960184\nNA\n9.386040e-02\n\n\nSFER\n22.5\n0.08050000\n53\n27.65891\n22.6460\n31.8840\n0.0866956196\nNA\n3.464646e-01\n\n\nSFER\n23\n0.10170000\n57\n27.69374\n20.8000\n32.7680\n0.1041212955\nNA\n1.593336e-01\n\n\nSFER\n24\n0.14232143\n57\n27.36673\n19.5670\n33.0660\n0.1294723538\n0.14232143\n3.775850e-02\n\n\nSFER\n3\n0.11237500\n55\n27.61516\n23.2460\n31.5380\n0.0830968595\n0.11237500\n4.115081e-04\n\n\nSFER\n30\n0.11300000\n54\n26.62276\n19.6200\n32.1820\n0.1342000158\nNA\n6.964240e-02\n\n\nSFER\n30.5\n0.15090476\n54\n26.74400\n19.8100\n32.9300\n0.1451442404\nNA\n1.688238e-01\n\n\nSFER\n31\n0.12319048\n55\n26.22928\n18.5600\n32.6480\n0.1573534628\nNA\n1.703105e-01\n\n\nSFER\n32\n0.14450000\n56\n26.12345\n18.3350\n33.0350\n0.1639875667\nNA\n6.847727e-02\n\n\nSFER\n33\n0.17085714\n56\n26.06899\n17.2810\n32.6340\n0.1707641430\n0.17085714\n1.719911e-02\n\n\nSFER\n34\n0.18650000\n56\n26.33130\n17.4600\n33.0780\n0.1720183099\n0.18650000\n4.976298e-02\n\n\nSFER\n39\n0.26741667\n48\n26.18275\n17.1350\n32.1090\n0.1712466769\nNA\n5.697618e-02\n\n\nSFER\n4\n0.17942857\n44\n27.34011\n17.6800\n33.3180\n0.1423275650\n0.17942857\n1.217996e-02\n\n\nSFER\n40\n0.20050000\n52\n25.88340\n16.9700\n31.8300\n0.1769273113\n0.20050000\n2.821495e-02\n\n\nSFER\n41\n0.15187500\n54\n25.98494\n16.8700\n31.5390\n0.1759948030\nNA\n1.695679e-01\n\n\nSFER\n42\n0.16647917\n55\n26.34587\n17.9500\n32.4240\n0.1645380692\nNA\n7.660717e-02\n\n\nSFER\n45\n0.11400000\n55\n26.34062\n17.5900\n31.6790\n0.1612219339\nNA\n3.250050e-01\n\n\nSFER\n46\n0.17203571\n56\n26.37479\n17.8000\n31.9040\n0.1617596216\nNA\n2.377492e-01\n\n\nSFER\n47\n0.13316667\n56\n26.25300\n17.6530\n32.9150\n0.1627598103\nNA\n3.666130e-01\n\n\nSFER\n48\n0.17225000\n55\n26.24440\n17.5960\n31.9790\n0.1647445445\nNA\n1.527779e-01\n\n\nSFER\n49\n0.13471528\n53\n26.02483\n16.5900\n31.8010\n0.1759903732\nNA\n2.823337e-01\n\n\nSFER\n5\n0.14681250\n44\n27.41350\n18.7600\n32.7560\n0.1283385118\nNA\n7.771418e-02\n\n\nSFER\n5.5\n0.05933333\n45\n27.57238\n22.8980\n31.9450\n0.0954875925\nNA\n2.305195e-01\n\n\nSFER\n50\n0.16187500\n54\n26.32746\n17.9570\n31.5850\n0.1603292709\nNA\n3.067992e-01\n\n\nSFER\n51\n0.13887500\n56\n26.25129\n16.9200\n31.8250\n0.1653478193\nNA\n6.077614e-02\n\n\nSFER\n52\n0.11700000\n53\n26.16796\n17.6680\n31.2910\n0.1635775129\nNA\n1.007344e-01\n\n\nSFER\n53\n0.09687500\n50\n26.04106\n17.1010\n31.9750\n0.1710629383\nNA\n1.376458e-01\n\n\nSFER\n54\n0.07643651\n68\n26.10915\n16.5160\n31.9060\n0.1653516694\nNA\n4.833573e-01\n\n\nSFER\n55\n0.05643750\n70\n26.17634\n16.9940\n31.8350\n0.1637076497\nNA\n2.701485e-01\n\n\nSFER\n56\n0.07625000\n71\n26.29106\n17.1300\n31.6400\n0.1615305587\nNA\n1.124031e-01\n\n\nSFER\n57\n0.06095833\n72\n26.40979\n17.7180\n31.7970\n0.1571244508\nNA\n4.774601e-01\n\n\nSFER\n57.1\n0.06868750\n72\n26.46689\n17.6800\n31.7570\n0.1546176686\nNA\n3.355848e-01\n\n\nSFER\n57.2\n0.08550000\n71\n26.50072\n18.3800\n32.3900\n0.1510644787\nNA\n3.789495e-01\n\n\nSFER\n57.3\n0.09468333\n68\n26.61887\n18.7500\n32.2570\n0.1466969024\nNA\n1.512775e-01\n\n\nSFER\n58\n0.15962500\n53\n26.35709\n19.2800\n32.0470\n0.1460752352\n0.15962500\n2.180912e-02\n\n\nSFER\n59\n0.19043333\n53\n26.49575\n18.8300\n32.1570\n0.1490445721\nNA\n1.065721e-01\n\n\nSFER\n6\n0.07500000\n47\n27.74321\n23.3130\n32.2490\n0.0891583010\nNA\n6.141349e-02\n\n\nSFER\n6.5\n0.09418056\n47\n28.01066\n23.2490\n31.9880\n0.0804985893\nNA\n7.104887e-02\n\n\nSFER\n60\n0.14917460\n56\n26.50061\n17.6300\n31.6410\n0.1548851428\nNA\n9.867656e-02\n\n\nSFER\n61\n0.21091667\n56\n26.63968\n17.4300\n31.8860\n0.1560813756\n0.21091667\n7.896929e-03\n\n\nSFER\n62\n0.25058333\n56\n26.54523\n16.9200\n31.8750\n0.1577061611\n0.25058333\n3.243892e-03\n\n\nSFER\n63\n0.27380952\n54\n26.58962\n17.2400\n31.4450\n0.1561869668\n0.27380952\n4.622567e-03\n\n\nSFER\n64\n0.17975000\n48\n26.28852\n17.1250\n31.5820\n0.1583308506\n0.17975000\n1.017093e-02\n\n\nSFER\n65\n0.21250000\n51\n26.32675\n17.0600\n31.4100\n0.1557030390\n0.21250000\n1.663868e-02\n\n\nSFER\n66\n0.24041667\n52\n26.53648\n17.2400\n31.4490\n0.1528522797\n0.24041667\n2.928813e-03\n\n\nSFER\n67\n0.24266667\n52\n26.44329\n17.2500\n31.7350\n0.1549505460\n0.24266667\n1.711824e-02\n\n\nSFER\n68\n0.20350000\n55\n26.53851\n17.5600\n31.7640\n0.1508486916\n0.20350000\n2.215731e-02\n\n\nSFER\n69\n0.22191667\n42\n26.78179\n17.5300\n31.8550\n0.1465898141\n0.22191667\n2.247463e-02\n\n\nSFER\n7\n0.17760000\n55\n27.37035\n19.3460\n33.3730\n0.1361663935\nNA\n1.262382e-01\n\n\nSFER\n70\n0.20123333\n42\n26.77205\n17.5600\n32.1520\n0.1475723968\nNA\n6.466963e-02\n\n\nSFER\n71\nNA\n1\n21.56800\n21.5680\n21.5680\nNA\nNA\nNA\n\n\nSFER\n8\n0.17031250\n57\n27.74170\n21.8640\n33.5490\n0.1135420977\nNA\n5.147211e-02\n\n\nSFER\n9\n0.10316667\n57\n27.71649\n21.7520\n32.5130\n0.0931343353\n0.10316667\n1.634339e-03\n\n\nSFER\n9.5\n0.09477778\n53\n27.74213\n22.5330\n31.8370\n0.0826508815\nNA\n7.711057e-02\n\n\nSFER\n9.6\nNA\n1\n30.26800\n30.2680\n30.2680\nNA\nNA\nNA\n\n\nSFER\n9.7\nNA\n1\n30.53300\n30.5330\n30.5330\nNA\nNA\nNA\n\n\nSFER\n9.8\nNA\n1\n30.25800\n30.2580\n30.2580\nNA\nNA\nNA\n\n\nSFER\nAC1\nNA\n1\n25.62800\n25.6280\n25.6280\nNA\nNA\nNA\n\n\nSFER\nAC2\nNA\n1\n25.54100\n25.5410\n25.5410\nNA\nNA\nNA\n\n\nSFER\nAC3\nNA\n1\n25.57300\n25.5730\n25.5730\nNA\nNA\nNA\n\n\nSFER\nAC4\nNA\n1\n25.72400\n25.7240\n25.7240\nNA\nNA\nNA\n\n\nSFER\nAC5\nNA\n1\n25.61900\n25.6190\n25.6190\nNA\nNA\nNA\n\n\nSFER\nAC6\nNA\n1\n25.93600\n25.9360\n25.9360\nNA\nNA\nNA\n\n\nSFER\nAMI1\n0.58800000\n26\n24.99538\n15.4770\n32.2130\n0.2172793361\nNA\n3.973214e-01\n\n\nSFER\nAMI2\n0.38600000\n26\n24.84400\n16.2080\n32.0210\n0.2082231790\nNA\n3.973214e-01\n\n\nSFER\nAMI3\n0.43100000\n26\n24.87465\n16.6660\n31.7540\n0.1992600525\nNA\n3.973214e-01\n\n\nSFER\nAMI4\n0.46700000\n25\n24.93832\n17.4870\n31.6360\n0.1919051707\nNA\n7.123907e-02\n\n\nSFER\nAMI5\n0.34000000\n26\n25.29181\n18.3840\n31.4090\n0.1714889781\nNA\n2.042193e-01\n\n\nSFER\nAMI6\n0.23350000\n26\n25.51865\n18.6850\n31.4450\n0.1614533851\nNA\n9.048793e-02\n\n\nSFER\nAMI7\n0.16100000\n26\n25.65662\n19.4350\n31.1150\n0.1501780152\nNA\n2.042193e-01\n\n\nSFER\nAMI8\n0.39700000\n26\n25.68827\n19.3730\n31.0830\n0.1466648081\nNA\n3.973214e-01\n\n\nSFER\nAMI9\n0.38800000\n26\n25.79454\n18.9220\n31.2840\n0.1438839761\nNA\n2.042193e-01\n\n\nSFER\nBG1\n0.17900000\n24\n25.94208\n16.5590\n32.5620\n0.1978083323\nNA\n6.519985e-01\n\n\nSFER\nBG10\nNA\n1\n30.75800\n30.7580\n30.7580\nNA\nNA\nNA\n\n\nSFER\nBG11\nNA\n1\n30.91900\n30.9190\n30.9190\nNA\nNA\nNA\n\n\nSFER\nBG12\nNA\n1\n30.97100\n30.9710\n30.9710\nNA\nNA\nNA\n\n\nSFER\nBG13\nNA\n2\n30.96700\n30.9670\n30.9670\n0.0000000000\nNA\nNA\n\n\nSFER\nBG14\nNA\n1\n30.59400\n30.5940\n30.5940\nNA\nNA\nNA\n\n\nSFER\nBG15\nNA\n2\n30.89600\n30.8840\n30.9080\n0.0005492803\nNA\nNA\n\n\nSFER\nBG16\nNA\n1\n30.79600\n30.7960\n30.7960\nNA\nNA\nNA\n\n\nSFER\nBG17\nNA\n2\n30.91700\n30.8590\n30.9750\n0.0026530513\nNA\nNA\n\n\nSFER\nBG18\nNA\n1\n30.98600\n30.9860\n30.9860\nNA\nNA\nNA\n\n\nSFER\nBG2\n0.25250000\n30\n25.55457\n16.9370\n32.2780\n0.1955399365\nNA\n6.137731e-01\n\n\nSFER\nBG20\nNA\n2\n30.36350\n30.3500\n30.3770\n0.0006287774\nNA\nNA\n\n\nSFER\nBG3\n0.25250000\n30\n25.60343\n17.1910\n32.2500\n0.1886081342\nNA\n4.002593e-01\n\n\nSFER\nBG4\n0.02250000\n30\n25.77263\n17.5850\n31.9430\n0.1734946813\nNA\n1.000000e+00\n\n\nSFER\nBG6\n0.01300000\n11\n27.08655\n20.6330\n31.2960\n0.1433110480\nNA\n1.000000e+00\n\n\nSFER\nBG7\n-0.14200000\n12\n27.40733\n21.2540\n31.1360\n0.1320804616\nNA\n1.000000e+00\n\n\nSFER\nBG8\nNA\n1\n30.93800\n30.9380\n30.9380\nNA\nNA\nNA\n\n\nSFER\nBG9\nNA\n1\n30.68800\n30.6880\n30.6880\nNA\nNA\nNA\n\n\nSFER\nBK1\nNA\n1\n30.47100\n30.4710\n30.4710\nNA\nNA\nNA\n\n\nSFER\nCAL1\n0.62933333\n33\n25.50818\n16.0950\n32.5240\n0.2043104921\nNA\n9.289194e-02\n\n\nSFER\nCAL2\n0.42825000\n34\n25.52834\n15.9930\n32.3710\n0.1969308888\nNA\n8.235222e-02\n\n\nSFER\nCAL3\n0.35282500\n34\n25.55757\n16.2925\n32.4030\n0.1921268951\n0.35282500\n4.502088e-02\n\n\nSFER\nCAL4\n0.46350000\n34\n25.65804\n16.7085\n32.4030\n0.1830119273\n0.46350000\n4.502088e-02\n\n\nSFER\nCAL5\n0.40582500\n34\n25.78569\n17.4020\n32.4770\n0.1739755931\n0.40582500\n4.502088e-02\n\n\nSFER\nCAL6\n-0.14550000\n28\n26.47346\n18.9080\n32.2650\n0.1470778862\nNA\n3.613104e-01\n\n\nSFER\nCAL7\nNA\n1\n24.28300\n24.2830\n24.2830\nNA\nNA\nNA\n\n\nSFER\nCAL8\nNA\n1\n24.02750\n24.0275\n24.0275\nNA\nNA\nNA\n\n\nSFER\nCALA\nNA\n1\n27.35100\n27.3510\n27.3510\nNA\nNA\nNA\n\n\nSFER\nCK1\nNA\n1\n21.83000\n21.8300\n21.8300\nNA\nNA\nNA\n\n\nSFER\nCK2\nNA\n1\n22.59000\n22.5900\n22.5900\nNA\nNA\nNA\n\n\nSFER\nCW1\n0.61650000\n16\n25.60337\n14.9740\n32.0720\n0.2122073111\nNA\n7.340952e-01\n\n\nSFER\nCW2\n0.66575000\n16\n25.33615\n14.9370\n32.3780\n0.2131328356\nNA\n3.081795e-01\n\n\nSFER\nCW3\n1.02500000\n17\n25.32911\n15.3310\n32.3000\n0.2024018931\nNA\n1.600573e-01\n\n\nSFER\nCW4\n0.77290000\n16\n25.39771\n16.0650\n32.2410\n0.2003368060\nNA\n3.081795e-01\n\n\nSFER\nCW5\n0.61040000\n12\n25.70825\n16.7380\n31.9810\n0.1896581697\nNA\n1.485618e-01\n\n\nSFER\nCW6\n0.55960000\n12\n25.72508\n17.5270\n31.8830\n0.1839213404\nNA\n1.485618e-01\n\n\nSFER\nCW7\n0.50800000\n11\n26.19237\n19.1390\n31.6390\n0.1662729971\nNA\n1.000000e+00\n\n\nSFER\nCaseyhole\nNA\n1\n25.22000\n25.2200\n25.2200\nNA\nNA\nNA\n\n\nSFER\nEB1\nNA\n1\n31.15800\n31.1580\n31.1580\nNA\nNA\nNA\n\n\nSFER\nEB2\nNA\n1\n31.21800\n31.2180\n31.2180\nNA\nNA\nNA\n\n\nSFER\nEH07\nNA\n1\n21.23300\n21.2330\n21.2330\nNA\nNA\nNA\n\n\nSFER\nEH08\nNA\n1\n23.13800\n23.1380\n23.1380\nNA\nNA\nNA\n\n\nSFER\nEKIN\n0.20200000\n53\n27.01081\n19.2500\n33.4140\n0.1294044965\n0.20200000\n5.793753e-03\n\n\nSFER\nEKMID\n0.13542857\n54\n27.44150\n22.3400\n32.5090\n0.0960187283\n0.13542857\n4.348991e-02\n\n\nSFER\nEKOFF\n0.10133333\n54\n27.72519\n24.1150\n31.6560\n0.0818692994\n0.10133333\n6.143240e-03\n\n\nSFER\nGP1\nNA\n4\n25.49667\n15.8100\n32.4200\n0.2740554060\nNA\nNA\n\n\nSFER\nGP1.5\nNA\n1\n31.28800\n31.2880\n31.2880\nNA\nNA\nNA\n\n\nSFER\nGP2\nNA\n4\n25.57368\n16.1600\n32.5900\n0.2690920514\nNA\nNA\n\n\nSFER\nGP3\nNA\n4\n25.42180\n16.5900\n31.7500\n0.2522426505\nNA\nNA\n\n\nSFER\nGP4\nNA\n4\n24.90968\n17.5600\n30.9100\n0.2211016200\nNA\nNA\n\n\nSFER\nGP5\n0.26952500\n34\n25.73874\n18.4200\n31.6670\n0.1671441039\nNA\n8.235222e-02\n\n\nSFER\nGS\nNA\n1\n27.77000\n27.7700\n27.7700\nNA\nNA\nNA\n\n\nSFER\nGlider\nNA\n2\n24.19150\n20.7800\n27.6030\n0.1994332542\nNA\nNA\n\n\nSFER\nHB1\nNA\n1\n24.99300\n24.9930\n24.9930\nNA\nNA\nNA\n\n\nSFER\nHB2\nNA\n1\n24.85400\n24.8540\n24.8540\nNA\nNA\nNA\n\n\nSFER\nHB3\nNA\n1\n25.00400\n25.0040\n25.0040\nNA\nNA\nNA\n\n\nSFER\nHB4\nNA\n1\n25.11500\n25.1150\n25.1150\nNA\nNA\nNA\n\n\nSFER\nHB5\nNA\n1\n25.17900\n25.1790\n25.1790\nNA\nNA\nNA\n\n\nSFER\nHB6\nNA\n1\n25.44600\n25.4460\n25.4460\nNA\nNA\nNA\n\n\nSFER\nJunkpile\nNA\n1\n26.43010\n26.4301\n26.4301\nNA\nNA\nNA\n\n\nSFER\nKW1\n0.23660000\n34\n26.88478\n20.0000\n32.1460\n0.1385685369\nNA\n2.120034e-01\n\n\nSFER\nKW2\n0.05638750\n34\n26.83353\n20.3200\n31.7930\n0.1316543002\nNA\n2.120034e-01\n\n\nSFER\nKW3\n0.06690000\n34\n27.14721\n20.3700\n32.3300\n0.1292055951\nNA\n8.897069e-01\n\n\nSFER\nKW4\n0.03700000\n33\n26.77448\n19.8200\n31.4970\n0.1330109504\nNA\n2.000661e-01\n\n\nSFER\nL1\n-1.89500000\n9\n25.88789\n16.6850\n31.8420\n0.1933786464\nNA\n1.000000e+00\n\n\nSFER\nL3\n-1.41000000\n9\n25.32211\n17.4640\n31.3200\n0.1877209553\nNA\n1.000000e+00\n\n\nSFER\nL5\n-1.53480000\n9\n25.48771\n18.7030\n31.2290\n0.1717284131\nNA\n1.000000e+00\n\n\nSFER\nL7\n-1.11050000\n9\n25.76689\n19.5160\n31.1090\n0.1529257547\nNA\n4.795001e-01\n\n\nSFER\nL9\n-1.75000000\n10\n26.24750\n20.2190\n30.5200\n0.1291919566\nNA\n4.795001e-01\n\n\nSFER\nM01\nNA\n1\n21.45000\n21.4500\n21.4500\nNA\nNA\nNA\n\n\nSFER\nM02\nNA\n1\n21.83000\n21.8300\n21.8300\nNA\nNA\nNA\n\n\nSFER\nM03\nNA\n1\n22.29000\n22.2900\n22.2900\nNA\nNA\nNA\n\n\nSFER\nM04\nNA\n1\n22.30000\n22.3000\n22.3000\nNA\nNA\nNA\n\n\nSFER\nM05\nNA\n1\n22.71000\n22.7100\n22.7100\nNA\nNA\nNA\n\n\nSFER\nMR\n0.11425000\n56\n27.55399\n22.8950\n31.2480\n0.0845037536\n0.11425000\n1.911884e-03\n\n\nSFER\nMudhole\nNA\n1\n25.89000\n25.8900\n25.8900\nNA\nNA\nNA\n\n\nSFER\nNaplesBlueHole\nNA\n1\n26.07000\n26.0700\n26.0700\nNA\nNA\nNA\n\n\nSFER\nPLUME\nNA\n1\n31.45400\n31.4540\n31.4540\nNA\nNA\nNA\n\n\nSFER\nROME4\n0.96100000\n11\n26.30239\n16.2783\n32.6570\n0.1988180365\nNA\n3.710934e-01\n\n\nSFER\nROME5\n0.96300000\n11\n26.41064\n16.0080\n32.3860\n0.1987966211\nNA\n3.710934e-01\n\n\nSFER\nRP1\n0.36825000\n34\n25.59924\n16.0400\n32.5740\n0.2046525827\nNA\n8.235222e-02\n\n\nSFER\nRP2\n0.43617500\n34\n25.52509\n15.9850\n32.3170\n0.1985801894\nNA\n2.291019e-01\n\n\nSFER\nRP3\n0.36020000\n35\n25.58535\n16.7930\n32.1610\n0.1869330919\nNA\n1.278153e-01\n\n\nSFER\nRP4\n0.29230000\n34\n25.69458\n17.3470\n32.0010\n0.1780588447\nNA\n1.415789e-01\n\n\nSFER\nRedTide\nNA\n1\n24.11530\n24.1153\n24.1153\nNA\nNA\nNA\n\n\nSFER\nTB1\n0.37975000\n29\n24.74204\n15.3690\n32.2800\n0.2142968518\nNA\n1.153322e-01\n\n\nSFER\nTB10\n0.25900000\n27\n25.67759\n18.2960\n31.0180\n0.1559083641\nNA\n1.095986e-01\n\n\nSFER\nTB11\nNA\n2\n28.62000\n28.2000\n29.0400\n0.0207536581\nNA\nNA\n\n\nSFER\nTB12\nNA\n1\n29.10000\n29.1000\n29.1000\nNA\nNA\nNA\n\n\nSFER\nTB13\nNA\n1\n29.25000\n29.2500\n29.2500\nNA\nNA\nNA\n\n\nSFER\nTB2\n0.51935000\n29\n24.79342\n15.7420\n32.4650\n0.2077674342\nNA\n1.153322e-01\n\n\nSFER\nTB3\n0.33160000\n29\n24.91834\n16.3850\n32.1000\n0.1968592925\nNA\n2.206714e-01\n\n\nSFER\nTB4\n0.37800000\n29\n25.17955\n17.1060\n31.9460\n0.1815046359\nNA\n2.206714e-01\n\n\nSFER\nTB5\n0.38440000\n29\n25.41822\n17.8580\n31.4220\n0.1635160826\n0.38440000\n2.935809e-03\n\n\nSFER\nTB6\nNA\n2\n24.08900\n19.9910\n28.1870\n0.2405847972\nNA\nNA\n\n\nSFER\nTB7\nNA\n2\n24.19915\n20.4550\n27.9433\n0.2188104834\nNA\nNA\n\n\nSFER\nTB8\nNA\n2\n24.74255\n21.2090\n28.2761\n0.2019676360\nNA\nNA\n\n\nSFER\nTB9\nNA\n2\n25.10415\n22.0670\n28.1413\n0.1710943697\nNA\nNA\n\n\nSFER\nTBA\nNA\n1\n28.16300\n28.1630\n28.1630\nNA\nNA\nNA\n\n\nSFER\nTBB\nNA\n1\n27.87700\n27.8770\n27.8770\nNA\nNA\nNA\n\n\nSFER\nTBC\nNA\n1\n27.64600\n27.6460\n27.6460\nNA\nNA\nNA\n\n\nSFER\nUKIN\n0.22933333\n54\n27.43830\n17.7900\n32.6380\n0.1291217495\n0.22933333\n1.594395e-02\n\n\nSFER\nUKMID\n0.16550000\n54\n27.55033\n18.4600\n32.0430\n0.1075611504\n0.16550000\n1.594395e-02\n\n\nSFER\nUKOFF\n0.11808333\n55\n27.87624\n23.8310\n32.0160\n0.0882683706\n0.11808333\n2.607302e-03\n\n\nSFER\nV1\n0.38341667\n30\n24.78333\n15.9300\n32.3300\n0.2148701536\n0.38341667\n4.149370e-02\n\n\nSFER\nV10\nNA\n1\n28.86000\n28.8600\n28.8600\nNA\nNA\nNA\n\n\nSFER\nV11\nNA\n1\n29.16000\n29.1600\n29.1600\nNA\nNA\nNA\n\n\nSFER\nV2\n0.40812500\n30\n24.63850\n15.9630\n31.9370\n0.2073724143\nNA\n1.581525e-01\n\n\nSFER\nV3\n0.21500000\n29\n25.00772\n16.8810\n31.9130\n0.1904373868\nNA\n5.996592e-01\n\n\nSFER\nV4\n0.40612500\n30\n24.84297\n16.6700\n31.9650\n0.1939349553\nNA\n8.453871e-02\n\n\nSFER\nV5\n0.41170000\n29\n25.31607\n17.8560\n32.0570\n0.1751769720\nNA\n3.816731e-01\n\n\nSFER\nV6\n0.40940000\n30\n25.18583\n17.7710\n31.8950\n0.1742650087\nNA\n8.453871e-02\n\n\nSFER\nV7\n0.28120000\n30\n25.61057\n18.4250\n31.8410\n0.1578434593\nNA\n2.476763e-01\n\n\nSFER\nV8\n0.24360000\n29\n25.72290\n18.7780\n31.8670\n0.1551447895\nNA\n3.816731e-01\n\n\nSFER\nV9\n0.18700000\n30\n25.97087\n19.8620\n31.6640\n0.1394252939\nNA\n2.476763e-01\n\n\nSFER\nWS\n0.06590476\n56\n27.53043\n22.1920\n32.1130\n0.0873002004\nNA\n6.535620e-02\n\n\nSFER\nZ03027\nNA\n1\n29.08000\n29.0800\n29.0800\nNA\nNA\nNA\n\n\nSFER\nZ03076\nNA\n1\n25.30770\n25.3077\n25.3077\nNA\nNA\nNA\n\n\nSFER\nZ03116\nNA\n1\n27.33830\n27.3383\n27.3383\nNA\nNA\nNA\n\n\nSFER\nZ03146\nNA\n1\n25.48740\n25.4874\n25.4874\nNA\nNA\nNA\n\n\nSFER\nZ03198\nNA\n1\n25.79030\n25.7903\n25.7903\nNA\nNA\nNA\n\n\nSFER\nZ04067\nNA\n1\n26.16570\n26.1657\n26.1657\nNA\nNA\nNA\n\n\nSFER\nZ04068\nNA\n1\n26.43070\n26.4307\n26.4307\nNA\nNA\nNA\n\n\nSFER\nZ04093\nNA\n1\n28.05000\n28.0500\n28.0500\nNA\nNA\nNA\n\n\nSFER\nZ04099\nNA\n1\n25.36310\n25.3631\n25.3631\nNA\nNA\nNA\n\n\nSFER\nZ04110\nNA\n1\n27.16640\n27.1664\n27.1664\nNA\nNA\nNA\n\n\nSFER\nZ04610\nNA\n1\n25.33200\n25.3320\n25.3320\nNA\nNA\nNA\n\n\n\n\n\n\n\n\n\nReporting Programs:\n\n\ndisplay reporting programs\nlibrary(ggplot2)\nggplot(df, aes(x = program)) +\n  geom_bar() +\n  labs(title = \"Reporting Programs\", x = \"Program\", y = \"Count\")"
  },
  {
    "objectID": "analyte_reports/analyte_reports/Total_Nitrogen.html",
    "href": "analyte_reports/analyte_reports/Total_Nitrogen.html",
    "title": "Total_Nitrogen Report",
    "section": "",
    "text": "get data across all programs, filter for analyte\nlibrary('here')\nlibrary('dplyr')\nsource(here(\"R/getAllData.R\"))\nfull_df &lt;- getAllData()\ndf &lt;- filter(full_df, DEP.Analyte.Name == params$analyte)\n\n\n\n\ncreate .csv of analyte data\n# save df to csv\n# reduce to only cols we need & save to csv\ndf %&gt;%\n  mutate(\n    source = program,\n    site = Monitoring.Location.ID,\n    datetime = Activity.Start.Date.Time,\n    analyte = DEP.Analyte.Name,\n    value = DEP.Result.Value.Number,\n    units = DEP.Result.Unit,\n    latitude = Org.Decimal.Latitude,\n    longitude = Org.Decimal.Longitude,\n    sample_depth = Activity.Depth,\n    .keep = \"none\"\n) %&gt;%\n  write.csv(here(\"data\", \"exports\", \"unified-wq-db-samples\", paste0(params$analyte, \".csv\")))\n\n\nDownload data for this analyte here\n\nHistogram of DEP.Result.Value.Number:\n\n\ndisplay histogram of values\nlibrary(ggplot2)\nggplot(df, aes(x = DEP.Result.Value.Number)) +\n  geom_histogram(bins = 30, fill = \"blue\", color = \"black\") +\n  labs(title = \"Histogram of Values\", x = \"Value\", y = \"Count\")\n\n\n\n\n\n\n\n\n\n\n\nStation Statistics:\n\n\ncreate station statistics dataframe\nsource(here(\"R/seasonalMannKendall.R\"))\nlibrary(lubridate)  # for mdy_hms()\nlibrary(pander)  # for display\n\n# create table of samples for each station\nsamples_df &lt;- df %&gt;%\n  select(\n    program, \n    Monitoring.Location.ID, \n    Activity.Start.Date.Time,\n    analyte = DEP.Analyte.Name,\n    DEP.Result.Value.Number, \n    DEP.Result.Unit,\n    latitude = Org.Decimal.Latitude,\n    longitude = Org.Decimal.Longitude,\n    sample_depth = Activity.Depth\n    ) %&gt;%\n  # drop any with empty Monitoring.Location.ID\n  filter(!is.na(Monitoring.Location.ID)) %&gt;%\n  # drop any with empty Activity.Start.Date.Time\n  filter(!is.na(Activity.Start.Date.Time)) %&gt;%\n  # parse the \"MM/DD/YYYY HH:MM:SS\" strings into POSIXct\n  mutate(Activity.Start.Date.Time = mdy_hms(\n          Activity.Start.Date.Time,\n          tz = \"UTC\")) %&gt;%\n  distinct()\n\n\n# add statistics for each station\nsample_stats_df &lt;- samples_df %&gt;%\n  group_by(program, Monitoring.Location.ID) %&gt;%\n  reframe(\n    {\n      tmp &lt;- seasonalMannKendallVectorized(\n        Activity.Start.Date.Time,\n        DEP.Result.Value.Number\n      )\n    },\n    n_values = n(),\n    mean = mean(DEP.Result.Value.Number),\n    min = min(DEP.Result.Value.Number),\n    max = max(DEP.Result.Value.Number),\n    coefficient.of.variation = sd(DEP.Result.Value.Number) / mean(DEP.Result.Value.Number)\n  ) %&gt;%\n  mutate(\n    # create column significant_slope\n    significant_slope = ifelse(z &lt;= 0.05, slope, NA_real_),\n    pvalue = z\n  ) %&gt;%\n  # drop unwanted columns added by seasonalMannKendall\n  select(\n    -z,\n    -tau,\n    -chi_square\n  )\n\n\n\n# print(head(sample_stats_df))\n# # display sample_stats_df with pander\n# pander(sample_stats_df)\n\n\n\n\nsave stats to csv\nsample_stats_df %&gt;%\n  write.csv(here(\n    \"data\", \"exports\", \"seasonal-mann-kendall-stats\", paste0(params$analyte, \".csv\")))\n\n\nDownload data for this analyte’s statistics here\n\n\ndisplay with gt\nlibrary(gt)\nlibrary(scales)\nlibrary(tidyselect)  # for all_of()\nlibrary(RColorBrewer) # for brewer.pal()\n\n# ── color_column() ─────────────────────────────────────────────────────────────\n# gt_tbl   : a gt object that you’ve already created (e.g. `sample_stats_df %&gt;% gt()`)\n# df       : the original data.frame (must contain the column you want to color)\n# column   : a string, e.g. \"slope\" or \"n_values\"\n# palette  : a character vector of colours to feed to col_numeric()\n#\ncolor_column &lt;- function(gt_tbl, df, column, \n                         palette = c(\"red\", \"orange\", \"yellow\", \"green\", \"blue\", \"violet\"),\n                         domain = NULL) {\n  # 1) Pull out that column’s numeric values\n  vals &lt;- df[[column]]\n  if (!is.numeric(vals)) {\n    stop(sprintf(\"`%s` is not numeric; data_color() requires a numeric column.\", column))\n  }\n  \n  # 2) Compute its min and max (ignoring NA)\n  min_val &lt;- min(vals, na.rm = TRUE)\n  max_val &lt;- max(vals, na.rm = TRUE)\n  if (is.null(domain)) {\n    domain &lt;- c(min_val, max_val)\n  }\n  \n  # 3) Call data_color() on the gt table for that single column\n  gt_tbl %&gt;%\n    data_color(\n      columns = all_of(column),\n      colors  = col_numeric(\n        palette = palette,\n        domain  = domain\n      )\n    )\n}\nlibrary(dplyr)\nlibrary(gt)\n\n# 1) First build your gt table as usual:\ngt_tbl &lt;- sample_stats_df %&gt;% \n  gt()\n\n# slope blue (-) to red (+) (0 centered)\ntryCatch({\n  min_slope &lt;- min(sample_stats_df$slope,  na.rm = TRUE)\n  max_slope &lt;- max(sample_stats_df$slope,  na.rm = TRUE)\n  max_abs_slope &lt;- max(abs(min_slope), abs(max_slope))\n  gt_tbl &lt;- color_column(\n    gt_tbl, \n    df     = sample_stats_df, \n    column = \"slope\",\n    palette = rev(brewer.pal(11, \"RdBu\")),\n    domain  = c(-max_abs_slope, max_abs_slope)\n  )\n}, error = function(e) {\n  print(\"Error in slope color column\")\n  print(e)\n})\n\n\n[1] \"Error in slope color column\"\n&lt;rlang_error in col_numeric(palette = palette, domain = domain): Wasn't able to determine range of `domain`&gt;\n\n\ndisplay with gt\ntryCatch({\n  # pvalue Z\n  gt_tbl &lt;- color_column(\n    gt_tbl, \n    df      = sample_stats_df, \n    column  = \"z\", \n    palette = scales::brewer_pal(palette = \"Blues\")(9)\n  )\n}, error = function(e) {\n  print(\"Error in z color column\")\n  print(e)\n})\n\n\n[1] \"Error in z color column\"\n&lt;simpleError in color_column(gt_tbl, df = sample_stats_df, column = \"z\", palette = (scales::brewer_pal(palette = \"Blues\"))(9)): `z` is not numeric; data_color() requires a numeric column.&gt;\n\n\ndisplay with gt\n# slope blue (-) to red (+) (0 centered)\ntryCatch({\n  min_slope &lt;- min(sample_stats_df$significant_slope,  na.rm = TRUE)\n  max_slope &lt;- max(sample_stats_df$significant_slope,  na.rm = TRUE)\n  max_abs_slope &lt;- max(abs(min_slope), abs(max_slope))\n  gt_tbl &lt;- color_column(\n    gt_tbl, \n    df     = sample_stats_df, \n    column = \"significant_slope\",\n    palette = rev(brewer.pal(11, \"RdBu\")),\n    domain  = c(-max_abs_slope, max_abs_slope)\n  )\n}, error = function(e) {\n  print(\"Error in significant_slope color column\")\n  print(e)\n})\n\n\n[1] \"Error in significant_slope color column\"\n&lt;simpleError in color_column(gt_tbl, df = sample_stats_df, column = \"significant_slope\",     palette = rev(brewer.pal(11, \"RdBu\")), domain = c(-max_abs_slope,         max_abs_slope)): `significant_slope` is not numeric; data_color() requires a numeric column.&gt;\n\n\ndisplay with gt\ntryCatch({\n  # mean values blue to red (0 centered)\n  min_mean &lt;- min(sample_stats_df$mean,  na.rm = TRUE)\n  max_mean &lt;- max(sample_stats_df$mean,  na.rm = TRUE)\n  max_abs_mean &lt;- max(abs(min_mean), abs(max_mean))\n  gt_tbl &lt;- color_column(\n    gt_tbl, \n    df     = sample_stats_df, \n    column = \"mean\",\n    palette = rev(brewer.pal(11, \"RdBu\")),\n    domain  = c(-max_abs_mean, max_abs_mean)\n  )\n}, error = function(e) {\n  print(\"Error in mean color column\")\n  print(e)\n})\n\n\n[1] \"Error in mean color column\"\n&lt;rlang_error in col_numeric(palette = palette, domain = domain): Wasn't able to determine range of `domain`&gt;\n\n\ndisplay with gt\ntryCatch({\n  # n values white to green\n  gt_tbl &lt;- color_column(\n    gt_tbl, \n    df      = sample_stats_df, \n    column  = \"n_values\", \n    palette = scales::brewer_pal(palette = \"Greens\")(9)\n  )\n}, error = function(e) {\n  print(\"Error in n_values color column\")\n  print(e)\n})\n\n\n[1] \"Error in n_values color column\"\n&lt;rlang_error in col_numeric(palette = palette, domain = domain): Wasn't able to determine range of `domain`&gt;\n\n\ndisplay with gt\ntryCatch({\n  # min\n  gt_tbl &lt;- color_column(\n    gt_tbl, \n    df      = sample_stats_df, \n    column  = \"min\", \n    palette = scales::brewer_pal(palette = \"Blues\")(9)\n  )\n}, error = function(e) {\n  print(\"Error in min color column\")\n  print(e)\n})\n\n\n[1] \"Error in min color column\"\n&lt;rlang_error in col_numeric(palette = palette, domain = domain): Wasn't able to determine range of `domain`&gt;\n\n\ndisplay with gt\ntryCatch({\n  # max\n  gt_tbl &lt;- color_column(\n    gt_tbl, \n    df      = sample_stats_df, \n    column  = \"max\", \n    palette = scales::brewer_pal(palette = \"Blues\")(9)\n  )\n}, error = function(e) {\n  print(\"Error in max color column\")\n  print(e)\n})\n\n\n[1] \"Error in max color column\"\n&lt;rlang_error in col_numeric(palette = palette, domain = domain): Wasn't able to determine range of `domain`&gt;\n\n\ndisplay with gt\ntryCatch({\n  # coefficient.of.variation\n  gt_tbl &lt;- color_column(\n    gt_tbl, \n    df      = sample_stats_df, \n    column  = \"coefficient.of.variation\", \n    palette = scales::brewer_pal(palette = \"Blues\")(9)\n  )\n}, error = function(e) {\n  print(\"Error in coefficient.of.variation color column\")\n  print(e)\n})\n\n\n[1] \"Error in coefficient.of.variation color column\"\n&lt;rlang_error in col_numeric(palette = palette, domain = domain): Wasn't able to determine range of `domain`&gt;\n\n\ndisplay with gt\n# 4) Render/display:\ngt_tbl\n\n\n\n\n\n\n\n\nprogram\nMonitoring.Location.ID\nslope\nn_values\nmean\nmin\nmax\ncoefficient.of.variation\nsignificant_slope\npvalue\n\n\n\n\n\n\n\n\n\n\n\nReporting Programs:\n\n\ndisplay reporting programs\nlibrary(ggplot2)\nggplot(df, aes(x = program)) +\n  geom_bar() +\n  labs(title = \"Reporting Programs\", x = \"Program\", y = \"Count\")"
  },
  {
    "objectID": "analyte_reports/analyte_reports/pH.html",
    "href": "analyte_reports/analyte_reports/pH.html",
    "title": "pH Report",
    "section": "",
    "text": "get data across all programs, filter for analyte\nlibrary('here')\nlibrary('dplyr')\nsource(here(\"R/getAllData.R\"))\nfull_df &lt;- getAllData()\ndf &lt;- filter(full_df, DEP.Analyte.Name == params$analyte)\n\n\n\n\ncreate .csv of analyte data\n# save df to csv\n# reduce to only cols we need & save to csv\ndf %&gt;%\n  mutate(\n    source = program,\n    site = Monitoring.Location.ID,\n    datetime = Activity.Start.Date.Time,\n    analyte = DEP.Analyte.Name,\n    value = DEP.Result.Value.Number,\n    units = DEP.Result.Unit,\n    latitude = Org.Decimal.Latitude,\n    longitude = Org.Decimal.Longitude,\n    sample_depth = Activity.Depth,\n    .keep = \"none\"\n) %&gt;%\n  write.csv(here(\"data\", \"exports\", \"unified-wq-db-samples\", paste0(params$analyte, \".csv\")))\n\n\nDownload data for this analyte here\n\nHistogram of DEP.Result.Value.Number:\n\n\ndisplay histogram of values\nlibrary(ggplot2)\nggplot(df, aes(x = DEP.Result.Value.Number)) +\n  geom_histogram(bins = 30, fill = \"blue\", color = \"black\") +\n  labs(title = \"Histogram of Values\", x = \"Value\", y = \"Count\")\n\n\n\n\n\n\n\n\n\n\n\nStation Statistics:\n\n\ncreate station statistics dataframe\nsource(here(\"R/seasonalMannKendall.R\"))\nlibrary(lubridate)  # for mdy_hms()\nlibrary(pander)  # for display\n\n# create table of samples for each station\nsamples_df &lt;- df %&gt;%\n  select(\n    program, \n    Monitoring.Location.ID, \n    Activity.Start.Date.Time,\n    analyte = DEP.Analyte.Name,\n    DEP.Result.Value.Number, \n    DEP.Result.Unit,\n    latitude = Org.Decimal.Latitude,\n    longitude = Org.Decimal.Longitude,\n    sample_depth = Activity.Depth\n    ) %&gt;%\n  # drop any with empty Monitoring.Location.ID\n  filter(!is.na(Monitoring.Location.ID)) %&gt;%\n  # drop any with empty Activity.Start.Date.Time\n  filter(!is.na(Activity.Start.Date.Time)) %&gt;%\n  # parse the \"MM/DD/YYYY HH:MM:SS\" strings into POSIXct\n  mutate(Activity.Start.Date.Time = mdy_hms(\n          Activity.Start.Date.Time,\n          tz = \"UTC\")) %&gt;%\n  distinct()\n\n\n# add statistics for each station\nsample_stats_df &lt;- samples_df %&gt;%\n  group_by(program, Monitoring.Location.ID) %&gt;%\n  reframe(\n    {\n      tmp &lt;- seasonalMannKendallVectorized(\n        Activity.Start.Date.Time,\n        DEP.Result.Value.Number\n      )\n    },\n    n_values = n(),\n    mean = mean(DEP.Result.Value.Number),\n    min = min(DEP.Result.Value.Number),\n    max = max(DEP.Result.Value.Number),\n    coefficient.of.variation = sd(DEP.Result.Value.Number) / mean(DEP.Result.Value.Number)\n  ) %&gt;%\n  mutate(\n    # create column significant_slope\n    significant_slope = ifelse(z &lt;= 0.05, slope, NA_real_),\n    pvalue = z\n  ) %&gt;%\n  # drop unwanted columns added by seasonalMannKendall\n  select(\n    -z,\n    -tau,\n    -chi_square\n  )\n\n\n\n# print(head(sample_stats_df))\n# # display sample_stats_df with pander\n# pander(sample_stats_df)\n\n\n\n\nsave stats to csv\nsample_stats_df %&gt;%\n  write.csv(here(\n    \"data\", \"exports\", \"seasonal-mann-kendall-stats\", paste0(params$analyte, \".csv\")))\n\n\nDownload data for this analyte’s statistics here\n\n\ndisplay with gt\nlibrary(gt)\nlibrary(scales)\nlibrary(tidyselect)  # for all_of()\nlibrary(RColorBrewer) # for brewer.pal()\n\n# ── color_column() ─────────────────────────────────────────────────────────────\n# gt_tbl   : a gt object that you’ve already created (e.g. `sample_stats_df %&gt;% gt()`)\n# df       : the original data.frame (must contain the column you want to color)\n# column   : a string, e.g. \"slope\" or \"n_values\"\n# palette  : a character vector of colours to feed to col_numeric()\n#\ncolor_column &lt;- function(gt_tbl, df, column, \n                         palette = c(\"red\", \"orange\", \"yellow\", \"green\", \"blue\", \"violet\"),\n                         domain = NULL) {\n  # 1) Pull out that column’s numeric values\n  vals &lt;- df[[column]]\n  if (!is.numeric(vals)) {\n    stop(sprintf(\"`%s` is not numeric; data_color() requires a numeric column.\", column))\n  }\n  \n  # 2) Compute its min and max (ignoring NA)\n  min_val &lt;- min(vals, na.rm = TRUE)\n  max_val &lt;- max(vals, na.rm = TRUE)\n  if (is.null(domain)) {\n    domain &lt;- c(min_val, max_val)\n  }\n  \n  # 3) Call data_color() on the gt table for that single column\n  gt_tbl %&gt;%\n    data_color(\n      columns = all_of(column),\n      colors  = col_numeric(\n        palette = palette,\n        domain  = domain\n      )\n    )\n}\nlibrary(dplyr)\nlibrary(gt)\n\n# 1) First build your gt table as usual:\ngt_tbl &lt;- sample_stats_df %&gt;% \n  gt()\n\n# slope blue (-) to red (+) (0 centered)\ntryCatch({\n  min_slope &lt;- min(sample_stats_df$slope,  na.rm = TRUE)\n  max_slope &lt;- max(sample_stats_df$slope,  na.rm = TRUE)\n  max_abs_slope &lt;- max(abs(min_slope), abs(max_slope))\n  gt_tbl &lt;- color_column(\n    gt_tbl, \n    df     = sample_stats_df, \n    column = \"slope\",\n    palette = rev(brewer.pal(11, \"RdBu\")),\n    domain  = c(-max_abs_slope, max_abs_slope)\n  )\n}, error = function(e) {\n  print(\"Error in slope color column\")\n  print(e)\n})\n\ntryCatch({\n  # pvalue Z\n  gt_tbl &lt;- color_column(\n    gt_tbl, \n    df      = sample_stats_df, \n    column  = \"z\", \n    palette = scales::brewer_pal(palette = \"Blues\")(9)\n  )\n}, error = function(e) {\n  print(\"Error in z color column\")\n  print(e)\n})\n\n\n[1] \"Error in z color column\"\n&lt;simpleError in color_column(gt_tbl, df = sample_stats_df, column = \"z\", palette = (scales::brewer_pal(palette = \"Blues\"))(9)): `z` is not numeric; data_color() requires a numeric column.&gt;\n\n\ndisplay with gt\n# slope blue (-) to red (+) (0 centered)\ntryCatch({\n  min_slope &lt;- min(sample_stats_df$significant_slope,  na.rm = TRUE)\n  max_slope &lt;- max(sample_stats_df$significant_slope,  na.rm = TRUE)\n  max_abs_slope &lt;- max(abs(min_slope), abs(max_slope))\n  gt_tbl &lt;- color_column(\n    gt_tbl, \n    df     = sample_stats_df, \n    column = \"significant_slope\",\n    palette = rev(brewer.pal(11, \"RdBu\")),\n    domain  = c(-max_abs_slope, max_abs_slope)\n  )\n}, error = function(e) {\n  print(\"Error in significant_slope color column\")\n  print(e)\n})\n\ntryCatch({\n  # mean values blue to red (0 centered)\n  min_mean &lt;- min(sample_stats_df$mean,  na.rm = TRUE)\n  max_mean &lt;- max(sample_stats_df$mean,  na.rm = TRUE)\n  max_abs_mean &lt;- max(abs(min_mean), abs(max_mean))\n  gt_tbl &lt;- color_column(\n    gt_tbl, \n    df     = sample_stats_df, \n    column = \"mean\",\n    palette = rev(brewer.pal(11, \"RdBu\")),\n    domain  = c(-max_abs_mean, max_abs_mean)\n  )\n}, error = function(e) {\n  print(\"Error in mean color column\")\n  print(e)\n})\n\ntryCatch({\n  # n values white to green\n  gt_tbl &lt;- color_column(\n    gt_tbl, \n    df      = sample_stats_df, \n    column  = \"n_values\", \n    palette = scales::brewer_pal(palette = \"Greens\")(9)\n  )\n}, error = function(e) {\n  print(\"Error in n_values color column\")\n  print(e)\n})\n\ntryCatch({\n  # min\n  gt_tbl &lt;- color_column(\n    gt_tbl, \n    df      = sample_stats_df, \n    column  = \"min\", \n    palette = scales::brewer_pal(palette = \"Blues\")(9)\n  )\n}, error = function(e) {\n  print(\"Error in min color column\")\n  print(e)\n})\n\ntryCatch({\n  # max\n  gt_tbl &lt;- color_column(\n    gt_tbl, \n    df      = sample_stats_df, \n    column  = \"max\", \n    palette = scales::brewer_pal(palette = \"Blues\")(9)\n  )\n}, error = function(e) {\n  print(\"Error in max color column\")\n  print(e)\n})\n\ntryCatch({\n  # coefficient.of.variation\n  gt_tbl &lt;- color_column(\n    gt_tbl, \n    df      = sample_stats_df, \n    column  = \"coefficient.of.variation\", \n    palette = scales::brewer_pal(palette = \"Blues\")(9)\n  )\n}, error = function(e) {\n  print(\"Error in coefficient.of.variation color column\")\n  print(e)\n})\n\n# 4) Render/display:\ngt_tbl\n\n\n\n\n\n\n\n\nprogram\nMonitoring.Location.ID\nslope\nn_values\nmean\nmin\nmax\ncoefficient.of.variation\nsignificant_slope\npvalue\n\n\n\n\nBBAP\nBB14\n0.0258333333\n60\n8.074333\n7.68\n8.52\n0.0175555005\n0.025833333\n1.705366e-02\n\n\nBBAP\nBH22\n0.0366666667\n43\n8.050000\n7.84\n8.21\n0.0115008708\n0.036666667\n6.879185e-03\n\n\nBBAP\nCWA2\n0.0716666667\n38\n7.892895\n7.56\n8.29\n0.0193850667\n0.071666667\n3.843393e-02\n\n\nBBAP\nCWA4\nNA\n3\n7.923333\n7.92\n7.93\n0.0007286709\nNA\nNA\n\n\nBBAP\nCWA5\n0.1000000000\n14\n7.967857\n7.86\n8.12\n0.0099211105\nNA\n4.701008e-01\n\n\nBBAP\nDM00\nNA\n4\n7.882500\n7.48\n8.17\n0.0368468203\nNA\nNA\n\n\nBBAP\nDM08\n-0.0050000000\n70\n7.912429\n7.42\n8.23\n0.0202424454\nNA\n5.793247e-01\n\n\nBBAP\nDM28\nNA\n2\n8.005000\n7.95\n8.06\n0.0097166453\nNA\nNA\n\n\nBBAP\nFK01\nNA\n1\n7.630000\n7.63\n7.63\nNA\nNA\nNA\n\n\nBBAP\nJFK03\n-0.0200000000\n52\n7.990385\n7.69\n8.28\n0.0163382360\n-0.020000000\n2.804783e-02\n\n\nBBAP\nJT29\nNA\n1\n8.270000\n8.27\n8.27\nNA\nNA\nNA\n\n\nBBAP\nJT61\n-0.0200000000\n33\n7.917879\n7.49\n8.07\n0.0148792738\nNA\n1.461775e-01\n\n\nBBAP\nJT66\n0.0100000000\n56\n8.030893\n7.78\n8.27\n0.0146513299\nNA\n5.056432e-01\n\n\nBBAP\nJT71\n0.0116666667\n58\n8.088793\n7.81\n8.34\n0.0162435077\nNA\n4.665526e-01\n\n\nBBAP\nLR03\n-0.0100000000\n70\n7.572571\n7.18\n8.01\n0.0227837733\nNA\n6.973583e-01\n\n\nBBAP\nLR05\nNA\n2\n7.500000\n7.38\n7.62\n0.0226274170\nNA\nNA\n\n\nBBAP\nLR06\nNA\n1\n7.480000\n7.48\n7.48\nNA\nNA\nNA\n\n\nBBAP\nLRNSP\nNA\n1\n6.840000\n6.84\n6.84\nNA\nNA\nNA\n\n\nBBAP\nLRSC\nNA\n1\n7.460000\n7.46\n7.46\nNA\nNA\nNA\n\n\nBBAP\nLRSP\nNA\n1\n6.890000\n6.89\n6.89\nNA\nNA\nNA\n\n\nBBAP\nLRUP\nNA\n1\n7.130000\n7.13\n7.13\nNA\nNA\nNA\n\n\nBBAP\nMRDC\nNA\n1\n7.440000\n7.44\n7.44\nNA\nNA\nNA\n\n\nBBAP\nMRDW\nNA\n1\n7.460000\n7.46\n7.46\nNA\nNA\nNA\n\n\nBBAP\nMRMO\nNA\n1\n7.950000\n7.95\n7.95\nNA\nNA\nNA\n\n\nBBAP\nMRRB\n-0.0600000000\n8\n7.972500\n7.90\n8.10\n0.0087865791\nNA\n4.795001e-01\n\n\nBBAP\nMRSC\n0.0100000000\n39\n7.576667\n7.27\n8.25\n0.0243184616\nNA\n5.335653e-01\n\n\nBBAP\nRB1A\n-0.0200000000\n22\n7.991818\n7.83\n8.16\n0.0128806085\nNA\n1.000000e+00\n\n\nBBAP\nVR01\n0.0187500000\n53\n8.017170\n7.77\n8.23\n0.0147734726\nNA\n8.801819e-02\n\n\nBBAP\nVR11\n-0.0050000000\n31\n7.947742\n7.74\n8.09\n0.0128917199\nNA\n6.576722e-01\n\n\nBBAP\nVS01\nNA\n2\n7.925000\n7.75\n8.10\n0.0312286907\nNA\nNA\n\n\nBBAP\nWQ01\nNA\n3\n7.986667\n7.90\n8.13\n0.0156552582\nNA\nNA\n\n\nBBAP\nWQ02\nNA\n2\n7.900000\n7.84\n7.96\n0.0107408625\nNA\nNA\n\n\nBBAP\nWQ04\nNA\n3\n7.843333\n7.81\n7.87\n0.0038950920\nNA\nNA\n\n\nBROWARD\n1\n-0.0150000000\n78\n7.490513\n7.07\n7.96\n0.0253584810\nNA\n5.883243e-01\n\n\nBROWARD\n10\n-0.0133333333\n65\n7.654308\n6.44\n8.54\n0.0332761020\nNA\n1.927776e-01\n\n\nBROWARD\n109\nNA\n5\n7.792000\n7.45\n8.28\n0.0404657818\nNA\nNA\n\n\nBROWARD\n11\n0.0073333333\n109\n7.562844\n6.14\n8.35\n0.0340188876\nNA\n6.452373e-01\n\n\nBROWARD\n110\n-0.0366666667\n74\n7.427703\n6.67\n8.27\n0.0466021988\nNA\n3.261095e-01\n\n\nBROWARD\n111\n0.0025000000\n58\n7.509310\n6.25\n8.54\n0.0344018025\nNA\n8.339354e-01\n\n\nBROWARD\n112\n-0.0191666667\n66\n7.502879\n6.25\n8.53\n0.0333609263\nNA\n1.422132e-01\n\n\nBROWARD\n114\nNA\n29\n7.550345\n7.18\n8.05\n0.0276290753\nNA\nNA\n\n\nBROWARD\n12\n-0.0271428571\n71\n7.791549\n6.62\n8.51\n0.0330525139\nNA\n1.178509e-01\n\n\nBROWARD\n120\n-0.0200000000\n47\n7.399149\n6.83\n7.64\n0.0225267717\nNA\n1.044190e-01\n\n\nBROWARD\n121\n-0.0600000000\n77\n7.969351\n7.21\n8.72\n0.0439881782\n-0.060000000\n3.255631e-03\n\n\nBROWARD\n122\n-0.0300000000\n57\n7.653333\n6.97\n8.22\n0.0409910412\nNA\n9.249478e-02\n\n\nBROWARD\n123\n0.0150000000\n39\n7.567179\n7.00\n8.16\n0.0292540589\nNA\n9.216569e-02\n\n\nBROWARD\n124\n-0.0037500000\n78\n7.367436\n6.72\n7.90\n0.0322357326\nNA\n8.242874e-01\n\n\nBROWARD\n125\n0.0000000000\n38\n7.741316\n7.54\n8.01\n0.0141607349\nNA\n1.000000e+00\n\n\nBROWARD\n126\nNA\n11\n7.446364\n7.10\n7.95\n0.0325936888\nNA\nNA\n\n\nBROWARD\n127\nNA\n5\n7.522000\n7.39\n7.61\n0.0118684999\nNA\nNA\n\n\nBROWARD\n128\n-0.0125000000\n24\n7.338750\n6.90\n7.56\n0.0231919184\nNA\n4.673777e-01\n\n\nBROWARD\n129\n-0.0365000000\n24\n7.414167\n7.08\n8.23\n0.0284256652\nNA\n2.398807e-01\n\n\nBROWARD\n13\nNA\n8\n7.560000\n6.50\n8.02\n0.0627555544\nNA\nNA\n\n\nBROWARD\n14\n-0.0250000000\n64\n7.637812\n6.23\n8.21\n0.0346688051\nNA\n1.178509e-01\n\n\nBROWARD\n15\n-0.0100000000\n77\n7.635844\n6.93\n8.53\n0.0292216180\nNA\n7.073112e-01\n\n\nBROWARD\n16\n0.0000000000\n61\n7.528197\n6.67\n8.56\n0.0319708851\nNA\n9.195384e-01\n\n\nBROWARD\n17\n-0.0429166667\n57\n7.852456\n6.91\n9.22\n0.0705675097\nNA\n8.961248e-01\n\n\nBROWARD\n18\nNA\n8\n8.000000\n7.66\n8.36\n0.0311462564\nNA\nNA\n\n\nBROWARD\n19\n0.0020000000\n75\n7.521333\n6.87\n8.06\n0.0296929592\nNA\n1.000000e+00\n\n\nBROWARD\n2\n-0.0320000000\n67\n7.573433\n6.83\n8.52\n0.0354872194\nNA\n1.288851e-01\n\n\nBROWARD\n20\n0.0137500000\n74\n7.606757\n7.01\n8.37\n0.0262934120\nNA\n6.047039e-02\n\n\nBROWARD\n21\nNA\n31\n7.791613\n7.19\n8.40\n0.0440201310\nNA\nNA\n\n\nBROWARD\n22\n-0.0633333333\n74\n7.615270\n6.86\n8.23\n0.0324609926\n-0.063333333\n1.834167e-02\n\n\nBROWARD\n23\n-0.0060714286\n107\n7.353458\n6.72\n7.93\n0.0330536660\nNA\n6.206716e-01\n\n\nBROWARD\n24\n-0.0200000000\n69\n7.550000\n7.10\n7.95\n0.0252331326\nNA\n2.780757e-01\n\n\nBROWARD\n25\n-0.0100000000\n63\n7.476667\n7.17\n8.10\n0.0214873704\nNA\n1.930591e-01\n\n\nBROWARD\n26\n-0.0075000000\n60\n7.420333\n6.95\n7.80\n0.0227014388\nNA\n5.151812e-01\n\n\nBROWARD\n27\nNA\n46\n7.556087\n6.67\n8.14\n0.0405359408\nNA\nNA\n\n\nBROWARD\n28\n-0.0550000000\n69\n7.574203\n7.06\n8.56\n0.0393382397\n-0.055000000\n2.997501e-03\n\n\nBROWARD\n29\n-0.0200000000\n68\n7.358676\n6.53\n7.73\n0.0254504259\nNA\n8.266225e-02\n\n\nBROWARD\n3\n-0.0133333333\n74\n7.471757\n6.96\n8.04\n0.0284044562\nNA\n3.855466e-01\n\n\nBROWARD\n31\n-0.0075000000\n71\n7.497183\n6.97\n8.03\n0.0281780490\nNA\n4.555451e-01\n\n\nBROWARD\n32\n-0.0250000000\n74\n7.402297\n6.11\n7.87\n0.0361709783\nNA\n2.891456e-01\n\n\nBROWARD\n33\n-0.0066666667\n65\n7.661692\n7.18\n8.05\n0.0246421062\nNA\n2.337380e-01\n\n\nBROWARD\n34\n-0.0066666667\n65\n7.931846\n7.24\n8.38\n0.0216262625\nNA\n5.135251e-01\n\n\nBROWARD\n35\n-0.0100000000\n107\n7.826075\n7.42\n8.23\n0.0244968273\nNA\n2.013829e-01\n\n\nBROWARD\n36\n0.0060000000\n62\n7.651129\n7.34\n7.99\n0.0188410136\nNA\n5.883243e-01\n\n\nBROWARD\n37\n0.0000000000\n67\n7.722239\n7.44\n7.99\n0.0175147502\nNA\n1.000000e+00\n\n\nBROWARD\n38\n-0.0100000000\n61\n7.895574\n7.38\n8.96\n0.0255278024\nNA\n4.220007e-01\n\n\nBROWARD\n39\n-0.0160000000\n56\n7.833750\n7.39\n8.82\n0.0248192093\nNA\n2.218232e-01\n\n\nBROWARD\n4\n-0.0246428571\n112\n7.551607\n7.10\n8.33\n0.0289110815\nNA\n9.901562e-02\n\n\nBROWARD\n40\n-0.0175000000\n91\n7.792857\n7.36\n8.00\n0.0137680960\n-0.017500000\n8.913945e-04\n\n\nBROWARD\n41\n-0.0100000000\n61\n7.728033\n7.38\n7.96\n0.0154229678\nNA\n2.544506e-01\n\n\nBROWARD\n47\nNA\n5\n7.738000\n7.37\n7.95\n0.0281566440\nNA\nNA\n\n\nBROWARD\n49\nNA\n26\n7.676154\n6.54\n7.99\n0.0355684114\nNA\nNA\n\n\nBROWARD\n5\n0.0066666667\n54\n7.502593\n7.15\n8.20\n0.0240853908\nNA\n7.544542e-01\n\n\nBROWARD\n6\n-0.0100000000\n70\n7.762429\n6.94\n8.71\n0.0391285415\nNA\n4.655122e-01\n\n\nBROWARD\n64\n-0.0200000000\n82\n7.434024\n6.87\n8.05\n0.0301432762\nNA\n5.468730e-01\n\n\nBROWARD\n7\n-0.0420000000\n69\n7.806232\n7.15\n8.65\n0.0396304081\nNA\n2.070256e-01\n\n\nBROWARD\n8\n-0.0133333333\n71\n7.655915\n7.04\n8.24\n0.0347752113\nNA\n3.261095e-01\n\n\nBROWARD\n89\n-0.0171428571\n69\n7.603043\n6.75\n8.21\n0.0353996640\nNA\n3.855466e-01\n\n\nBROWARD\n90\nNA\n34\n7.598235\n6.92\n7.88\n0.0282502740\nNA\nNA\n\n\nDERM_BBWQ\nAC01\n-0.0100000000\n170\n7.849529\n7.46\n8.45\n0.0215699563\n-0.010000000\n4.037471e-02\n\n\nDERM_BBWQ\nAC02\n0.0400000000\n38\n7.802105\n7.56\n8.07\n0.0150983198\nNA\n5.370940e-01\n\n\nDERM_BBWQ\nAC03\n-0.0033333333\n197\n7.350152\n6.76\n7.98\n0.0290160723\nNA\n5.638686e-01\n\n\nDERM_BBWQ\nAC06\n0.0125000000\n208\n7.195625\n6.64\n7.87\n0.0284956632\n0.012500000\n2.681475e-02\n\n\nDERM_BBWQ\nAR03\n-0.0358333333\n174\n7.732069\n6.95\n8.34\n0.0453024836\n-0.035833333\n1.800704e-05\n\n\nDERM_BBWQ\nBB01A\n-0.0950000000\n38\n7.793421\n7.62\n7.96\n0.0114738891\nNA\n9.725443e-02\n\n\nDERM_BBWQ\nBB02\n-0.0050000000\n169\n7.864142\n7.48\n8.39\n0.0217628770\nNA\n3.724274e-01\n\n\nDERM_BBWQ\nBB04\n0.0033333333\n174\n7.915287\n7.45\n8.52\n0.0231316639\nNA\n5.413692e-01\n\n\nDERM_BBWQ\nBB05A\n0.0000000000\n208\n7.855192\n7.02\n8.46\n0.0307983001\nNA\n7.820369e-01\n\n\nDERM_BBWQ\nBB08\n0.0000000000\n161\n7.833602\n7.11\n8.12\n0.0225572320\nNA\n9.732755e-01\n\n\nDERM_BBWQ\nBB09\n0.0000000000\n173\n7.938439\n7.63\n8.49\n0.0183717661\nNA\n8.443379e-01\n\n\nDERM_BBWQ\nBB10\n0.0000000000\n152\n7.967434\n7.61\n8.48\n0.0169517437\nNA\n1.000000e+00\n\n\nDERM_BBWQ\nBB11\n0.0100000000\n174\n7.869310\n7.44\n8.41\n0.0196179271\nNA\n6.630597e-02\n\n\nDERM_BBWQ\nBB13\nNA\n5\n7.596000\n7.47\n7.72\n0.0136368764\nNA\nNA\n\n\nDERM_BBWQ\nBB13A\n0.0100000000\n78\n7.889103\n7.56\n8.11\n0.0166430924\nNA\n2.468430e-01\n\n\nDERM_BBWQ\nBB14\n0.0266666667\n198\n7.878283\n6.67\n8.36\n0.0272681620\n0.026666667\n4.628560e-09\n\n\nDERM_BBWQ\nBB15\n0.0400000000\n82\n7.901707\n7.48\n8.09\n0.0162785244\n0.040000000\n6.680295e-04\n\n\nDERM_BBWQ\nBB15A\n0.0200000000\n153\n7.802288\n6.98\n8.10\n0.0241998010\n0.020000000\n1.368843e-03\n\n\nDERM_BBWQ\nBB17\n0.0083333333\n176\n7.894830\n7.27\n8.33\n0.0161785980\n0.008333333\n9.833333e-03\n\n\nDERM_BBWQ\nBB18\n0.0055000000\n152\n7.917829\n7.49\n8.30\n0.0153536624\nNA\n8.985650e-02\n\n\nDERM_BBWQ\nBB22\n0.0050000000\n174\n7.938966\n7.60\n8.14\n0.0137050136\nNA\n9.515638e-02\n\n\nDERM_BBWQ\nBB24\n0.0083333333\n174\n8.001149\n7.69\n8.33\n0.0144201148\nNA\n6.317090e-02\n\n\nDERM_BBWQ\nBB25\n0.0120000000\n103\n7.989029\n7.72\n8.29\n0.0132486790\nNA\n1.674775e-01\n\n\nDERM_BBWQ\nBB26\n0.0129166667\n132\n7.918939\n7.68\n8.18\n0.0142478713\nNA\n1.010367e-01\n\n\nDERM_BBWQ\nBB28\n0.0100000000\n105\n7.977714\n7.66\n8.42\n0.0159914785\n0.010000000\n4.153963e-02\n\n\nDERM_BBWQ\nBB31\n-0.0025000000\n169\n7.980296\n7.72\n8.23\n0.0139507152\nNA\n5.765796e-01\n\n\nDERM_BBWQ\nBB32\n0.0300000000\n106\n7.992830\n7.72\n8.23\n0.0137723554\n0.030000000\n8.098508e-07\n\n\nDERM_BBWQ\nBB34\n0.0050000000\n174\n7.966954\n7.42\n8.22\n0.0159379013\nNA\n1.426188e-01\n\n\nDERM_BBWQ\nBB37\n0.0033333333\n168\n8.019048\n7.49\n8.37\n0.0182727022\nNA\n3.526238e-01\n\n\nDERM_BBWQ\nBB38\n0.0046428571\n170\n8.013000\n7.67\n8.45\n0.0181112353\nNA\n1.865297e-01\n\n\nDERM_BBWQ\nBB39A\n0.0000000000\n175\n8.013771\n5.05\n8.76\n0.0339991262\nNA\n9.881615e-01\n\n\nDERM_BBWQ\nBB41\n0.0066666667\n174\n8.024943\n7.72\n8.66\n0.0163287676\nNA\n5.292039e-02\n\n\nDERM_BBWQ\nBB47\n0.0100000000\n170\n7.994353\n7.60\n8.46\n0.0149350901\n0.010000000\n6.589100e-06\n\n\nDERM_BBWQ\nBB48\n0.0200000000\n151\n7.996954\n7.72\n8.52\n0.0171292375\n0.020000000\n6.049581e-07\n\n\nDERM_BBWQ\nBB50\n0.0150000000\n169\n8.009527\n7.66\n8.55\n0.0169798732\n0.015000000\n6.547510e-04\n\n\nDERM_BBWQ\nBB51\n0.0183333333\n169\n8.023905\n7.61\n8.67\n0.0191867100\n0.018333333\n7.849005e-04\n\n\nDERM_BBWQ\nBB52\n0.0300000000\n29\n8.017241\n7.41\n8.28\n0.0299890713\nNA\n2.103468e-01\n\n\nDERM_BBWQ\nBB53\n0.1300000000\n19\n7.990000\n7.64\n8.23\n0.0232729673\n0.130000000\n1.391116e-02\n\n\nDERM_BBWQ\nBBKB1\n0.0233333333\n106\n8.001132\n7.72\n8.20\n0.0133001505\n0.023333333\n4.248408e-04\n\n\nDERM_BBWQ\nBBMB1\n0.0120000000\n174\n7.950000\n7.52\n8.32\n0.0161906046\n0.012000000\n5.725678e-03\n\n\nDERM_BBWQ\nBBMB2\n0.0140000000\n152\n7.863355\n7.23\n8.16\n0.0202641807\n0.014000000\n7.107929e-04\n\n\nDERM_BBWQ\nBBMB3\n0.0100000000\n159\n7.863459\n7.28\n8.22\n0.0191050571\n0.010000000\n3.622862e-02\n\n\nDERM_BBWQ\nBBMB4\n0.0136666667\n152\n7.880000\n7.27\n8.14\n0.0187706381\n0.013666667\n7.420782e-04\n\n\nDERM_BBWQ\nBBOR1\n0.0283333333\n94\n8.021170\n7.72\n8.32\n0.0150070962\n0.028333333\n2.585410e-05\n\n\nDERM_BBWQ\nBBOR2\n0.0300000000\n92\n7.987391\n7.68\n8.44\n0.0197089897\n0.030000000\n1.600034e-02\n\n\nDERM_BBWQ\nBBY1\n0.0350000000\n38\n7.889737\n7.67\n8.01\n0.0134701192\n0.035000000\n3.208873e-02\n\n\nDERM_BBWQ\nBBY4\n-0.0200000000\n40\n8.064750\n7.91\n8.24\n0.0134283818\nNA\n3.020282e-01\n\n\nDERM_BBWQ\nBISC101\n0.0033333333\n183\n8.032404\n7.64\n8.77\n0.0193673020\nNA\n3.509154e-01\n\n\nDERM_BBWQ\nBISC121\n0.0150000000\n170\n7.978824\n7.62\n8.43\n0.0159811327\n0.015000000\n3.578608e-05\n\n\nDERM_BBWQ\nBISC122\n0.0050000000\n180\n8.028333\n7.62\n8.73\n0.0192707298\nNA\n1.518540e-01\n\n\nDERM_BBWQ\nBISC127\n0.0000000000\n174\n8.009770\n7.58\n8.31\n0.0174332096\nNA\n8.804723e-01\n\n\nDERM_BBWQ\nBL01\n-0.0033333333\n129\n7.728140\n7.21\n8.49\n0.0315583117\nNA\n8.021802e-01\n\n\nDERM_BBWQ\nBL02\n-0.0550000000\n64\n7.621406\n7.19\n8.11\n0.0308882117\n-0.055000000\n2.084968e-02\n\n\nDERM_BBWQ\nBL03\n-0.0400000000\n174\n7.570057\n7.04\n8.77\n0.0426155696\n-0.040000000\n6.849412e-07\n\n\nDERM_BBWQ\nBL04\n0.0050000000\n40\n7.317250\n7.05\n7.79\n0.0249415799\nNA\n1.000000e+00\n\n\nDERM_BBWQ\nBL05\n0.0600000000\n41\n7.318537\n7.04\n7.72\n0.0238406496\nNA\n8.931879e-01\n\n\nDERM_BBWQ\nBL06\n-0.0400000000\n151\n7.528411\n7.01\n8.34\n0.0454147322\n-0.040000000\n5.380480e-05\n\n\nDERM_BBWQ\nBL12\n-0.0214285714\n163\n7.248957\n6.87\n7.94\n0.0239785070\n-0.021428571\n2.579677e-03\n\n\nDERM_BBWQ\nBS01\n-0.0050000000\n174\n7.729943\n7.17\n8.21\n0.0282370685\nNA\n5.127525e-01\n\n\nDERM_BBWQ\nBS04\n-0.0200000000\n173\n7.691214\n7.17\n8.82\n0.0440138242\n-0.020000000\n1.523581e-02\n\n\nDERM_BBWQ\nBS07\n-0.0277500000\n165\n7.804121\n7.26\n9.61\n0.0430623753\n-0.027750000\n1.486643e-03\n\n\nDERM_BBWQ\nBS08\n-0.0200000000\n40\n7.663000\n7.25\n7.94\n0.0250270732\nNA\n1.000000e+00\n\n\nDERM_BBWQ\nBS09\n0.0100000000\n40\n7.697750\n7.29\n7.99\n0.0229151834\nNA\n1.000000e+00\n\n\nDERM_BBWQ\nBS10\n-0.0333333333\n170\n7.483824\n7.04\n9.99\n0.0567716533\n-0.033333333\n1.995453e-06\n\n\nDERM_BBWQ\nBS11\n0.0416666667\n167\n7.791617\n6.94\n10.01\n0.0565496716\n0.041666667\n1.516486e-02\n\n\nDERM_BBWQ\nCD01A\n0.0100000000\n220\n7.962500\n7.45\n8.26\n0.0189788999\n0.010000000\n2.486068e-02\n\n\nDERM_BBWQ\nCD02\n-0.0200000000\n167\n7.562335\n6.97\n8.14\n0.0340264247\n-0.020000000\n4.551769e-03\n\n\nDERM_BBWQ\nCD03A\n0.0750000000\n40\n7.409500\n7.09\n7.90\n0.0258918899\n0.075000000\n1.090950e-02\n\n\nDERM_BBWQ\nCD04A\n-0.0350000000\n41\n7.340244\n7.04\n7.64\n0.0194832796\n-0.035000000\n1.917248e-02\n\n\nDERM_BBWQ\nCD05\n-0.0400000000\n173\n7.748208\n7.11\n8.22\n0.0290186963\n-0.040000000\n1.120168e-07\n\n\nDERM_BBWQ\nCD09\n-0.0100000000\n161\n7.312857\n6.91\n7.94\n0.0240602208\n-0.010000000\n4.453297e-02\n\n\nDERM_BBWQ\nCG01\n0.0120000000\n174\n7.834828\n7.28\n8.13\n0.0181537226\n0.012000000\n1.027096e-02\n\n\nDERM_BBWQ\nCG02\n0.0900000000\n40\n7.515250\n6.92\n8.01\n0.0358263314\nNA\n6.812251e-01\n\n\nDERM_BBWQ\nCG02A\n0.0125000000\n160\n7.321000\n6.86\n8.19\n0.0286496898\nNA\n6.959754e-02\n\n\nDERM_BBWQ\nCG03\n-0.0450000000\n41\n7.305610\n6.96\n7.65\n0.0283876527\nNA\n8.936947e-01\n\n\nDERM_BBWQ\nCG07\n-0.0133333333\n169\n7.360355\n6.69\n7.94\n0.0338779409\nNA\n8.947928e-02\n\n\nDERM_BBWQ\nCM02\n-0.0250000000\n184\n7.533641\n5.40\n8.24\n0.0421426003\n-0.025000000\n6.577278e-06\n\n\nDERM_BBWQ\nCM04\n0.0650000000\n49\n7.557143\n7.22\n7.97\n0.0275946309\nNA\n6.804575e-01\n\n\nDERM_BBWQ\nDDC1\n-0.1300000000\n40\n7.450500\n7.19\n7.88\n0.0216527549\nNA\n5.220364e-02\n\n\nDERM_BBWQ\nDDC2\n-0.1300000000\n37\n7.415135\n7.20\n7.71\n0.0159998369\n-0.130000000\n6.715766e-03\n\n\nDERM_BBWQ\nFC03\n-0.0160000000\n170\n7.396882\n6.72\n7.94\n0.0311680849\n-0.016000000\n9.110751e-03\n\n\nDERM_BBWQ\nFC15\n-0.0066666667\n154\n7.302338\n6.52\n7.94\n0.0293332136\nNA\n4.491255e-01\n\n\nDERM_BBWQ\nFC16\n-0.0900000000\n33\n7.542424\n6.99\n8.22\n0.0373240874\n-0.090000000\n2.686520e-03\n\n\nDERM_BBWQ\nGL02\n0.0140000000\n198\n7.452475\n6.85\n8.33\n0.0356333275\n0.014000000\n4.774561e-02\n\n\nDERM_BBWQ\nGL03\n-0.0070833333\n146\n7.446986\n6.92\n8.41\n0.0301712413\nNA\n3.989923e-01\n\n\nDERM_BBWQ\nIC01\n-0.0400000000\n38\n8.000789\n7.84\n8.13\n0.0095514626\nNA\n2.278000e-01\n\n\nDERM_BBWQ\nIC02\n0.0050000000\n38\n7.965789\n7.81\n8.09\n0.0087249825\nNA\n8.743671e-01\n\n\nDERM_BBWQ\nL31E1\n0.0100000000\n170\n7.593118\n6.79\n8.39\n0.0386313905\nNA\n3.945599e-01\n\n\nDERM_BBWQ\nLR01\n-0.0166666667\n174\n7.689195\n7.03\n8.17\n0.0298705432\n-0.016666667\n4.818323e-02\n\n\nDERM_BBWQ\nLR05\n-0.0300000000\n174\n7.363103\n2.27\n10.82\n0.0803148060\n-0.030000000\n7.017226e-07\n\n\nDERM_BBWQ\nLR06\n-0.0440000000\n173\n7.353699\n6.70\n8.59\n0.0379363757\n-0.044000000\n8.641524e-11\n\n\nDERM_BBWQ\nLR07\n-0.1650000000\n41\n7.250000\n7.05\n7.46\n0.0164999189\n-0.165000000\n2.392584e-02\n\n\nDERM_BBWQ\nLR08\n-0.0322500000\n174\n7.430920\n6.84\n10.63\n0.0655559942\n-0.032250000\n5.529510e-08\n\n\nDERM_BBWQ\nLR10\n-0.0150000000\n179\n7.419441\n6.92\n10.70\n0.0534154325\n-0.015000000\n8.690559e-04\n\n\nDERM_BBWQ\nMI01\n0.0850000000\n16\n7.634375\n7.24\n7.96\n0.0313893079\nNA\n1.000000e+00\n\n\nDERM_BBWQ\nMI02\n-0.0600000000\n171\n7.767661\n6.88\n8.66\n0.0478374840\n-0.060000000\n3.540002e-06\n\n\nDERM_BBWQ\nMI03\n-0.0433333333\n169\n7.783077\n7.11\n8.67\n0.0444486971\n-0.043333333\n4.567071e-05\n\n\nDERM_BBWQ\nMR01\n0.0050000000\n174\n7.832874\n7.36\n8.44\n0.0232250872\nNA\n3.560284e-01\n\n\nDERM_BBWQ\nMR02\n0.0750000000\n40\n7.638750\n7.47\n7.85\n0.0135632718\n0.075000000\n8.088653e-04\n\n\nDERM_BBWQ\nMR03\n-0.0118333333\n174\n7.662931\n7.05\n8.26\n0.0231477820\n-0.011833333\n1.134013e-02\n\n\nDERM_BBWQ\nMR04\n0.0550000000\n40\n7.638250\n7.50\n7.79\n0.0097065172\n0.055000000\n1.839965e-02\n\n\nDERM_BBWQ\nMR05\n-0.0033333333\n170\n7.650353\n7.22\n8.31\n0.0221502879\nNA\n5.103609e-01\n\n\nDERM_BBWQ\nMR06\n-0.0950000000\n40\n7.673500\n7.50\n7.89\n0.0140312465\n-0.095000000\n3.997960e-02\n\n\nDERM_BBWQ\nMR07\n0.0066666667\n170\n7.558882\n6.95\n8.19\n0.0245768362\nNA\n2.704581e-01\n\n\nDERM_BBWQ\nMR08\n-0.0200000000\n175\n7.608571\n6.95\n9.30\n0.0448489293\n-0.020000000\n2.016678e-03\n\n\nDERM_BBWQ\nMR11\n-0.1350000000\n40\n7.362000\n7.21\n7.65\n0.0153375119\n-0.135000000\n9.774176e-04\n\n\nDERM_BBWQ\nMR15\n-0.0133333333\n175\n7.298229\n5.77\n7.93\n0.0289467388\n-0.013333333\n2.432956e-03\n\n\nDERM_BBWQ\nMW01\n-0.0400000000\n65\n7.572154\n7.21\n8.13\n0.0336845088\n-0.040000000\n1.865090e-03\n\n\nDERM_BBWQ\nMW04\n-0.0200000000\n174\n7.543333\n7.00\n8.31\n0.0324128572\n-0.020000000\n9.559980e-03\n\n\nDERM_BBWQ\nMW05\n-0.0250000000\n174\n7.398793\n6.64\n7.96\n0.0294954172\n-0.025000000\n7.205746e-04\n\n\nDERM_BBWQ\nMW13\n-0.0214285714\n174\n7.352184\n6.98\n8.14\n0.0257329182\n-0.021428571\n2.429839e-05\n\n\nDERM_BBWQ\nNO07A\n-0.0133333333\n179\n7.302961\n6.55\n7.80\n0.0234116347\n-0.013333333\n5.091482e-04\n\n\nDERM_BBWQ\nOC01\n-0.0800000000\n41\n7.501463\n7.10\n7.90\n0.0300438166\nNA\n5.042895e-01\n\n\nDERM_BBWQ\nOL01\n0.0400000000\n51\n7.665294\n7.03\n7.91\n0.0240430533\nNA\n9.339068e-02\n\n\nDERM_BBWQ\nOL02\n-0.0050000000\n183\nNA\nNA\nNA\nNA\nNA\n2.349047e-01\n\n\nDERM_BBWQ\nOL03\n-0.0066666667\n206\nNA\nNA\nNA\nNA\nNA\n2.077741e-01\n\n\nDERM_BBWQ\nOSC1\n-0.1000000000\n52\n7.578269\n6.90\n8.05\n0.0418823577\nNA\n5.441800e-01\n\n\nDERM_BBWQ\nOSC2\n-0.1250000000\n55\n7.099636\n6.62\n7.38\n0.0272866522\nNA\n1.608745e-01\n\n\nDERM_BBWQ\nOSC3\n-0.1150000000\n40\n7.223250\n6.77\n7.50\n0.0244384006\nNA\n1.173227e-01\n\n\nDERM_BBWQ\nPR01\n-0.0322619048\n56\n7.491250\n7.04\n8.10\n0.0265396617\n-0.032261905\n3.819338e-02\n\n\nDERM_BBWQ\nPR03\n-0.0200000000\n175\n7.393829\n6.91\n8.20\n0.0269001962\n-0.020000000\n2.555490e-02\n\n\nDERM_BBWQ\nPR04A\n-0.0200000000\n176\n7.174886\n6.56\n7.94\n0.0260776554\n-0.020000000\n4.333728e-07\n\n\nDERM_BBWQ\nPR08\n-0.0063333333\n176\n7.357443\n6.91\n8.33\n0.0275497065\nNA\n1.446876e-01\n\n\nDERM_BBWQ\nSK01\n-0.0060000000\n170\n7.739588\n7.21\n8.48\n0.0267872936\nNA\n2.038613e-01\n\n\nDERM_BBWQ\nSK02\n-0.0145000000\n174\nNA\nNA\nNA\nNA\nNA\n2.131921e-01\n\n\nDERM_BBWQ\nSK05\n0.0300000000\n148\n7.802500\n7.04\n9.78\n0.0539346404\n0.030000000\n5.990849e-03\n\n\nDERM_BBWQ\nSK09\n-0.0175000000\n174\n7.468621\n6.96\n9.48\n0.0464721080\n-0.017500000\n6.764004e-04\n\n\nDERM_BBWQ\nSK10\n-0.0333333333\n152\n7.239079\n6.79\n10.22\n0.0524194730\n-0.033333333\n5.921026e-12\n\n\nDERM_BBWQ\nSP01\n-0.0163333333\n172\n7.635640\n7.15\n8.10\n0.0294663219\n-0.016333333\n3.372491e-02\n\n\nDERM_BBWQ\nSP03\n0.0200000000\n40\n7.353000\n7.12\n7.85\n0.0251924343\n0.020000000\n2.923841e-02\n\n\nDERM_BBWQ\nSP04\n-0.0316666667\n173\n7.437688\n6.96\n8.29\n0.0340145991\n-0.031666667\n2.218004e-04\n\n\nDERM_BBWQ\nSP05\n0.0200000000\n40\n7.358750\n7.16\n7.94\n0.0267999002\nNA\n3.156588e-01\n\n\nDERM_BBWQ\nSP08\n-0.0300000000\n173\n7.256358\n6.89\n7.94\n0.0230504879\n-0.030000000\n3.872604e-10\n\n\nDERM_BBWQ\nTM02\n0.0070833333\n170\n7.576235\n7.14\n9.44\n0.0391081545\nNA\n3.124870e-01\n\n\nDERM_BBWQ\nTM03A\n-0.0160000000\n179\n7.782346\n7.12\n9.51\n0.0471194182\nNA\n1.875949e-01\n\n\nDERM_BBWQ\nTM05\n-0.0450000000\n170\n7.260059\n5.64\n7.94\n0.0351787326\n-0.045000000\n1.639917e-11\n\n\nDERM_BBWQ\nTM06\n-0.1500000000\n40\n7.147500\n6.97\n7.30\n0.0134969902\n-0.150000000\n9.774176e-04\n\n\nDERM_BBWQ\nTM07A\n-0.1250000000\n40\n7.127750\n6.95\n7.39\n0.0140134303\n-0.125000000\n1.513245e-05\n\n\nDERM_BBWQ\nTM08\n-0.0350000000\n169\n7.321420\n5.77\n7.99\n0.0347355415\n-0.035000000\n1.255849e-10\n\n\nDERM_BBWQ\nWC02\n-0.0200000000\n172\n7.443140\n6.90\n9.02\n0.0379274770\n-0.020000000\n2.195471e-06\n\n\nDERM_BBWQ\nWC03\n-0.0100000000\n188\n7.358085\n6.79\n7.94\n0.0225600831\n-0.010000000\n3.512105e-02\n\n\nDERM_BBWQ\nWC04\n-0.0100000000\n194\n7.365515\n6.84\n9.08\n0.0361775107\nNA\n6.585009e-02\n\n\nMiamiBeach\n16\n0.0500000000\n45\n7.879111\n7.04\n9.57\n0.0522643512\nNA\n2.518396e-01\n\n\nMiamiBeach\n17\n0.0260000000\n80\n7.877000\n6.97\n9.04\n0.0413213828\nNA\n2.275749e-01\n\n\nMiamiBeach\n18\n-0.0100000000\n45\n7.901111\n6.43\n9.49\n0.0570186809\nNA\n8.485396e-01\n\n\nMiamiBeach\n19\n0.0150000000\n81\n7.954568\n7.09\n8.95\n0.0352974460\nNA\n1.895001e-01\n\n\nMiamiBeach\n2\n-0.0250000000\n42\n8.582143\n6.99\n31.50\n0.4236115405\nNA\n3.222386e-01\n\n\nMiamiBeach\n21\n-0.0300000000\n41\n7.971220\n7.09\n8.90\n0.0398672716\nNA\n3.760200e-01\n\n\nMiamiBeach\n22\n0.0050000000\n77\n8.007143\n7.13\n8.90\n0.0395793024\nNA\n7.068056e-01\n\n\nMiamiBeach\n23\n0.0150000000\n42\n7.973095\n6.96\n8.52\n0.0409296271\nNA\n6.631470e-01\n\n\nMiamiBeach\n24\n0.0158333333\n41\n7.957317\n7.02\n8.38\n0.0457231901\nNA\n4.319230e-01\n\n\nMiamiBeach\n25\n0.0080000000\n40\n7.930250\n6.48\n8.49\n0.0501385679\nNA\n4.072154e-01\n\n\nMiamiBeach\n26\n-0.0096666667\n41\n7.878049\n6.80\n8.95\n0.0520852923\nNA\n7.329951e-01\n\n\nMiamiBeach\n27\n0.0116666667\n41\n7.956341\n7.06\n8.83\n0.0470515030\nNA\n8.190520e-01\n\n\nMiamiBeach\n28\n-0.0233333333\n41\n7.894146\n5.06\n8.67\n0.0702732831\nNA\n3.598468e-01\n\n\nMiamiBeach\n29\n-0.0155714286\n41\n7.987073\n7.18\n8.63\n0.0346249966\nNA\n3.061035e-01\n\n\nMiamiBeach\n30\n0.0191666667\n41\n7.976585\n7.01\n8.90\n0.0399963823\nNA\n4.922448e-01\n\n\nMiamiBeach\n31\n0.0000000000\n41\n7.955122\n5.40\n9.18\n0.0695458256\nNA\n1.000000e+00\n\n\nMiamiBeach\n32\n-0.0250000000\n41\n7.969268\n7.32\n8.57\n0.0365122430\nNA\n3.598468e-01\n\n\nMiamiBeach\n33\n0.0001190476\n42\n8.512381\n6.97\n31.70\n0.4318773296\nNA\n1.000000e+00\n\n\nMiamiBeach\n34\n0.0066666667\n77\n7.987922\n7.15\n8.52\n0.0320011580\nNA\n7.387977e-01\n\n\nMiamiBeach\n35\n0.0045000000\n42\n8.526429\n7.34\n31.90\n0.4344489546\nNA\n7.364151e-01\n\n\nMiamiBeach\n36\n0.0065000000\n42\n7.972381\n7.23\n8.40\n0.0368006780\nNA\n8.275957e-01\n\n\nMiamiBeach\n37\n0.0062857143\n41\n7.961951\n7.08\n8.41\n0.0404612800\nNA\n9.094640e-01\n\n\nMiamiBeach\n38\n0.0133333333\n77\n8.021169\n7.07\n8.73\n0.0345134525\nNA\n5.688753e-01\n\n\nMiamiBeach\n39\n0.0100000000\n40\n8.016250\n7.13\n8.40\n0.0329802840\nNA\n8.116413e-01\n\n\nMiamiBeach\n3A\nNA\n9\n8.023333\n7.39\n8.46\n0.0495576951\nNA\nNA\n\n\nMiamiBeach\n4\n0.0033333333\n78\n7.983462\n6.37\n8.91\n0.0409726891\nNA\n7.762548e-01\n\n\nMiamiBeach\n40\n0.0100000000\n40\n8.023000\n7.02\n8.43\n0.0336102518\nNA\n6.381285e-01\n\n\nMiamiBeach\n42\n-0.0066666667\n65\n8.015231\n7.25\n8.47\n0.0245586334\nNA\n4.184972e-01\n\n\nMiamiBeach\n45\n0.0500000000\n27\n8.077037\n7.48\n8.45\n0.0256729018\nNA\n3.901541e-01\n\n\nMiamiBeach\n46\n0.0233333333\n62\n8.076129\n6.14\n8.45\n0.0401073740\n0.023333333\n3.318274e-02\n\n\nMiamiBeach\n47\n0.0216666667\n63\n8.103968\n7.36\n8.48\n0.0256201800\n0.021666667\n2.367365e-02\n\n\nMiamiBeach\n48\n0.0200000000\n27\n8.089630\n7.51\n8.43\n0.0223915272\nNA\n1.000000e+00\n\n\nMiamiBeach\n52\n0.0112500000\n63\n8.032222\n5.54\n8.43\n0.0473207786\nNA\n2.436345e-01\n\n\nMiamiBeach\n54\n-0.0112500000\n61\n8.022295\n7.20\n8.52\n0.0255901344\nNA\n5.871640e-01\n\n\nMiamiBeach\n56\n0.0100000000\n60\n8.058317\n7.21\n8.54\n0.0298569054\nNA\n5.306201e-01\n\n\nMiamiBeach\n59\n-0.0425000000\n26\n8.035385\n6.07\n8.44\n0.0536193954\nNA\n8.101812e-01\n\n\nMiamiBeach\n60\n0.0029166667\n60\n8.080667\n7.21\n8.55\n0.0253348861\nNA\n8.897946e-01\n\n\nMiamiBeach\n61\n-0.1525000000\n21\n7.949524\n7.56\n8.32\n0.0246134142\nNA\n3.583265e-01\n\n\nMiamiBeach\n62\n0.0900000000\n21\n8.024762\n7.39\n8.36\n0.0244181025\nNA\n5.049851e-01\n\n\nMiamiBeach\n63\n0.0300000000\n55\n8.060182\n7.35\n8.90\n0.0283996502\nNA\n1.852418e-01\n\n\nMiamiBeach\n64\nNA\n6\n7.910000\n7.64\n8.27\n0.0352353123\nNA\nNA\n\n\nMiamiBeach\n66\n0.0000000000\n36\n7.993889\n7.10\n8.40\n0.0273438205\nNA\n1.000000e+00\n\n\nMiamiBeach\n67\n0.0000000000\n37\n8.009730\n7.03\n8.41\n0.0280584279\nNA\n1.000000e+00\n\n\nMiamiBeach\n68\n0.0200000000\n37\n7.929730\n7.20\n8.40\n0.0354144501\nNA\n1.000000e+00\n\n\nMiamiBeach\n69\n0.0150000000\n37\n7.964595\n7.05\n8.30\n0.0269329097\nNA\n1.000000e+00\n\n\nMiamiBeach\n70\n0.0050000000\n37\n7.967838\n6.79\n8.35\n0.0362157147\nNA\n1.000000e+00\n\n\nMiamiBeach\n71\n-0.0150000000\n37\n8.027838\n6.98\n8.40\n0.0316674828\nNA\n7.780167e-01\n\n\nMiamiBeach\n74\n0.0600000000\n36\n7.868611\n7.39\n9.59\n0.0460641718\nNA\n4.577174e-01\n\n\nMiamiBeach\n78\n-0.1100000000\n35\n7.532857\n6.97\n9.13\n0.0680695553\nNA\n3.526217e-01\n\n\nMiamiBeach\n79\n-0.0300000000\n22\n7.589091\n7.25\n8.43\n0.0332751766\nNA\n1.000000e+00\n\n\nMiamiBeach\n81\n-0.1100000000\n14\n7.829286\n7.01\n8.16\n0.0347034229\nNA\n1.000000e+00\n\n\nMiamiBeach\n82\n-0.1700000000\n15\n7.771333\n5.59\n8.21\n0.0970375660\nNA\n2.962699e-01\n\n\nMiamiBeach\n83\nNA\n7\n7.597143\n5.88\n8.16\n0.1109321709\nNA\nNA\n\n\nMiamiBeach\n84\nNA\n12\n7.689167\n7.29\n8.54\n0.0536952211\nNA\nNA\n\n\nMiamiBeach\n9\n0.0241071429\n77\n8.168961\n6.86\n28.05\n0.2850136546\nNA\n2.305802e-01\n\n\nPALMBEACH\n10\nNA\n4\n7.880000\n7.79\n8.03\n0.0132288458\nNA\nNA\n\n\nPALMBEACH\n11\n0.0000000000\n132\nNA\nNA\nNA\nNA\nNA\n9.083257e-01\n\n\nPALMBEACH\n12A\n-0.0140000000\n110\nNA\nNA\nNA\nNA\nNA\n4.653924e-01\n\n\nPALMBEACH\n13\n0.0066666667\n133\nNA\nNA\nNA\nNA\nNA\n6.152511e-01\n\n\nPALMBEACH\n14\nNA\n4\n8.017500\n7.95\n8.09\n0.0071559773\nNA\nNA\n\n\nPALMBEACH\n15\n-0.0300000000\n102\nNA\nNA\nNA\nNA\nNA\n3.319755e-01\n\n\nPALMBEACH\n16\n-0.0200000000\n105\nNA\nNA\nNA\nNA\nNA\n8.077481e-01\n\n\nPALMBEACH\n18A\nNA\n9\n7.800000\n7.31\n8.07\n0.0289598897\nNA\nNA\n\n\nPALMBEACH\n18C\n-0.0025000000\n144\nNA\nNA\nNA\nNA\nNA\n5.484401e-01\n\n\nPALMBEACH\n18D\n-0.0200000000\n128\nNA\nNA\nNA\nNA\n-0.020000000\n2.981784e-02\n\n\nPALMBEACH\n22\n-0.1083333333\n99\nNA\nNA\nNA\nNA\n-0.108333333\n9.823275e-03\n\n\nPALMBEACH\n24\n-0.0120000000\n102\nNA\nNA\nNA\nNA\nNA\n7.464068e-01\n\n\nPALMBEACH\n27A\n-0.0800000000\n101\nNA\nNA\nNA\nNA\n-0.080000000\n2.121242e-02\n\n\nPALMBEACH\n27B\n-0.0320000000\n92\nNA\nNA\nNA\nNA\nNA\n1.942860e-01\n\n\nPALMBEACH\n28\n-0.0787500000\n62\nNA\nNA\nNA\nNA\n-0.078750000\n6.432383e-03\n\n\nPALMBEACH\n28A\nNA\n7\n7.864286\n7.73\n7.99\n0.0126489315\nNA\nNA\n\n\nPALMBEACH\n31B\n-0.0566666667\n62\nNA\nNA\nNA\nNA\n-0.056666667\n1.047503e-02\n\n\nPALMBEACH\n31C\n-0.0300000000\n104\nNA\nNA\nNA\nNA\nNA\n3.052551e-01\n\n\nPALMBEACH\n31D\nNA\n3\n7.606667\n7.32\n7.77\n0.0327429778\nNA\nNA\n\n\nPALMBEACH\n31E\n-0.0183333333\n98\nNA\nNA\nNA\nNA\nNA\n5.632601e-01\n\n\nPALMBEACH\n37B\n-0.0191666667\n94\nNA\nNA\nNA\nNA\nNA\n6.642163e-01\n\n\nPALMBEACH\n38B\n-0.0542500000\n106\nNA\nNA\nNA\nNA\nNA\n1.182039e-01\n\n\nPALMBEACH\n39\n-0.0075000000\n43\nNA\nNA\nNA\nNA\nNA\n6.004925e-01\n\n\nPALMBEACH\n43\n-0.0041666667\n43\nNA\nNA\nNA\nNA\nNA\n9.406937e-01\n\n\nPALMBEACH\n52\nNA\n40\n7.732000\n7.11\n8.55\n0.0437640702\nNA\nNA\n\n\nPALMBEACH\n57\nNA\n39\n7.543846\n6.35\n8.28\n0.0555952385\nNA\nNA\n\n\nPALMBEACH\n61\nNA\n42\n7.879524\n7.15\n8.49\n0.0425566598\nNA\nNA\n\n\nPALMBEACH\n62\nNA\n40\n7.791250\n7.11\n8.47\n0.0409782136\nNA\nNA\n\n\nPALMBEACH\n63\nNA\n45\n8.143556\n7.06\n8.75\n0.0453570599\nNA\nNA\n\n\nPALMBEACH\n64\nNA\n38\n8.167895\n7.24\n8.67\n0.0429825303\nNA\nNA\n\n\nPALMBEACH\n65\nNA\n43\n26.979070\n7.05\n820.00\n4.5892826194\nNA\nNA\n\n\nPALMBEACH\n66\nNA\n47\n8.080426\n7.19\n8.98\n0.0521175269\nNA\nNA\n\n\nPALMBEACH\n67\nNA\n1\n7.550000\n7.55\n7.55\nNA\nNA\nNA\n\n\nPALMBEACH\n68\nNA\n41\n8.130878\n7.19\n8.94\n0.0496942248\nNA\nNA\n\n\nPALMBEACH\n69\nNA\n40\n7.878500\n7.04\n8.56\n0.0434697311\nNA\nNA\n\n\nPALMBEACH\n7\nNA\n4\n7.392500\n6.88\n7.69\n0.0490396836\nNA\nNA\n\n\nPALMBEACH\n70\nNA\n43\n7.867907\n7.14\n8.47\n0.0424507511\nNA\nNA\n\n\nPALMBEACH\nC17S44\n-0.0150000000\n9\n7.823333\n7.55\n8.15\n0.0225779997\nNA\n1.000000e+00\n\n\nPALMBEACH\nG92\nNA\n4\n7.450000\n7.40\n7.49\n0.0052560806\nNA\nNA\n\n\n\n\n\n\n\n\n\nReporting Programs:\n\n\ndisplay reporting programs\nlibrary(ggplot2)\nggplot(df, aes(x = program)) +\n  geom_bar() +\n  labs(title = \"Reporting Programs\", x = \"Program\", y = \"Count\")"
  }
]