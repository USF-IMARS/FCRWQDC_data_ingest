---
title: "WIN_data_ingest"
---

Data ingestion and initial analysis from FL WIN water quality database.

```{R}
#| code-summary: read in the WIN txt pipe-delimited file
# Read all lines from the file
all_lines <- readLines("data/tina_WIN_WAVES_UDOUJ_TH_1_20250304141103_89325.txt")

# Locate the header line (assumes it starts with "Organization ID")
header_index <- grep('^"Organization ID"', all_lines)[1]

# Print the skipped lines (everything before the header)
cat("Skipped lines:\n")
cat(all_lines[1:(header_index - 1)], sep = "\n")
cat("\n\n")

# Extract the header line
header_line <- all_lines[header_index]

# Determine the expected number of columns based on the header line
expected_cols <- length(strsplit(header_line, "\\|")[[1]])

# Extract all remaining lines (which may contain multi-line records)
raw_data_lines <- all_lines[(header_index + 1):length(all_lines)]

# Reassemble rows by combining lines until the number of delimiters (pipes) matches expectation.
combined_rows <- character(0)
temp_row <- ""

for (line in raw_data_lines) {
  # Start a new temporary row or append to the existing one
  temp_row <- if (temp_row == "") line else paste(temp_row, line, sep = "\n")
  
  # Count the number of pipe delimiters in temp_row
  n_delim <- length(gregexpr("\\|", temp_row)[[1]])
  
  # If the row has the expected number of delimiters (one less than columns), it's complete.
  if (n_delim == (expected_cols - 1)) {
    combined_rows <- c(combined_rows, temp_row)
    temp_row <- ""  # Reset for the next record
  }
}

# In case any data remains in temp_row, add it as a record
if (temp_row != "") {
  combined_rows <- c(combined_rows, temp_row)
}

# Reassemble the complete text with header and data rows
full_text <- paste(c(header_line, combined_rows), collapse = "\n")

# Read the data from the reassembled text
df <- read.table(text = full_text,
                 sep = "|",
                 header = TRUE,
                 quote = "\"",
                 fill = TRUE,
                 stringsAsFactors = FALSE)


```
```{R}
#| code-summary: Print the first few rows of the dataframe
# head(df)

library(pander)

pander(head(df), digits = 6)
```

```{R}

```

TODO: 

what are the parameters for each provider

unique(station ids) (table w/ param presence/absence)

map? maybe Tina's has lat+lon

------------------------------------------------------------------

If you have more visualization ideas for this data, please open a github issue [here](https://github.com/USF-IMARS/WIN_data_ingest/issues).